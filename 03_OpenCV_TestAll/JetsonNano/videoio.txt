Time compensation is 0
TEST: Skip tests with tags: 'mem_6gb', 'verylong'
CTEST_FULL_OUTPUT
OpenCV version: 4.1.0-dev
OpenCV VCS version: 4.1.0-180-gb4ec8fe3e
Build type: RELEASE
WARNING: build value differs from runtime: Release
Compiler: /usr/bin/c++  (ver 7.4.0)
Parallel framework: pthreads
CPU features: NEON FP16
[ INFO:0] global /home/pi/sdk/src/opencv/opencv/modules/core/src/ocl.cpp (888) haveOpenCL Initialize OpenCL runtime...
OpenCL Platforms: 
    Portable Computing Language
        CPU: pthread-cortex-a57 (OpenCL 1.2 pocl HSTR: pthread-aarch64-unknown-linux-gnu-cortex-a57)
        iGPU: NVIDIA Tegra X1 (OpenCL 1.2 pocl HSTR: CUDA-sm_53)
Current OpenCL device: 
    Type = iGPU
    Name = NVIDIA Tegra X1
    Version = OpenCL 1.2 pocl HSTR: CUDA-sm_53
    Driver version = 1.3
    Address bits = 64
    Compute units = 1
    Max work group size = 1024
    Local memory size = 48 KB
    Max memory allocation size = 990 MB 848 KB
    Double support = Yes
    Host unified memory = Yes
    Device extensions:
        cl_khr_byte_addressable_store
        cl_khr_global_int32_base_atomics
        cl_khr_global_int32_extended_atomics
        cl_khr_local_int32_base_atomics
        cl_khr_local_int32_extended_atomics
        cl_khr_3d_image_writes
        cl_khr_fp16
        cl_khr_fp64
    Has AMD Blas = No
    Has AMD Fft = No
    Preferred vector width char = 1
    Preferred vector width short = 1
    Preferred vector width int = 1
    Preferred vector width long = 1
    Preferred vector width float = 1
    Preferred vector width double = 1
[==========] Running 17 tests from 2 test cases.
[----------] Global test environment set-up.
[----------] 5 tests from VideoCapture_Reading_ReadFile
[ RUN      ] VideoCapture_Reading_ReadFile.ReadFile/0, where GetParam() = "highgui/video/big_buck_bunny.avi"
[ INFO:0] global /home/pi/sdk/src/opencv/opencv/modules/videoio/src/videoio_registry.cpp (185) VideoBackendRegistry VIDEOIO: Enabled backends(5, sorted by priority): FFMPEG(1000); GSTREAMER(990); V4L2(980); CV_IMAGES(970); CV_MJPEG(960)
[ INFO:0] global /home/pi/sdk/src/opencv/opencv/modules/videoio/src/backend_plugin.cpp (248) getPluginCandidates VideoIO pluigin (FFMPEG): glob is 'libopencv_videoio_ffmpeg*.so', 1 location(s)
[ INFO:0] global /home/pi/sdk/src/opencv/opencv/modules/videoio/src/backend_plugin.cpp (256) getPluginCandidates     - /home/pi/sdk/build/opencv/lib: 0
[ INFO:0] global /home/pi/sdk/src/opencv/opencv/modules/videoio/src/backend_plugin.cpp (259) getPluginCandidates Found 0 plugin(s) for FFMPEG
[ PERFSTAT ]    (samples=100   mean=62.33   median=60.12   min=54.05   stddev=5.91 (9.5%))
[       OK ] VideoCapture_Reading_ReadFile.ReadFile/0 (6475 ms)
[ RUN      ] VideoCapture_Reading_ReadFile.ReadFile/1, where GetParam() = "highgui/video/big_buck_bunny.mov"
[ PERFSTAT ]    (samples=100   mean=59.19   median=58.01   min=51.31   stddev=4.87 (8.2%))
[       OK ] VideoCapture_Reading_ReadFile.ReadFile/1 (6081 ms)
[ RUN      ] VideoCapture_Reading_ReadFile.ReadFile/2, where GetParam() = "highgui/video/big_buck_bunny.mp4"
[ PERFSTAT ]    (samples=100   mean=59.55   median=58.27   min=48.83   stddev=5.44 (9.1%))
[       OK ] VideoCapture_Reading_ReadFile.ReadFile/2 (6080 ms)
[ RUN      ] VideoCapture_Reading_ReadFile.ReadFile/3, where GetParam() = "highgui/video/big_buck_bunny.mpg"
[ PERFSTAT ]    (samples=100   mean=60.28   median=59.82   min=50.61   stddev=5.16 (8.6%))
[       OK ] VideoCapture_Reading_ReadFile.ReadFile/3 (6152 ms)
[ RUN      ] VideoCapture_Reading_ReadFile.ReadFile/4, where GetParam() = "highgui/video/big_buck_bunny.wmv"
[ PERFSTAT ]    (samples=13   mean=30.44   median=30.15   min=29.53   stddev=0.87 (2.8%))
[       OK ] VideoCapture_Reading_ReadFile.ReadFile/4 (1456 ms)
[----------] 5 tests from VideoCapture_Reading_ReadFile (26245 ms total)

[----------] 12 tests from VideoWriter_Writing_WriteFrame
[ RUN      ] VideoWriter_Writing_WriteFrame.WriteFrame/0, where GetParam() = ("python/images/QCIF_00.bmp", false)
[ PERFSTAT ]    (samples=100   mean=0.35   median=0.45   min=0.02   stddev=0.25 (71.1%))
[       OK ] VideoWriter_Writing_WriteFrame.WriteFrame/0 (151 ms)
[ RUN      ] VideoWriter_Writing_WriteFrame.WriteFrame/1, where GetParam() = ("python/images/QCIF_00.bmp", true)
[ PERFSTAT ]    (samples=100   mean=0.74   median=0.95   min=0.02   stddev=0.45 (61.4%))
[       OK ] VideoWriter_Writing_WriteFrame.WriteFrame/1 (180 ms)
[ RUN      ] VideoWriter_Writing_WriteFrame.WriteFrame/2, where GetParam() = ("python/images/QCIF_01.bmp", false)
[ PERFSTAT ]    (samples=100   mean=0.31   median=0.43   min=0.01   stddev=0.23 (74.8%))
[       OK ] VideoWriter_Writing_WriteFrame.WriteFrame/2 (131 ms)
[ RUN      ] VideoWriter_Writing_WriteFrame.WriteFrame/3, where GetParam() = ("python/images/QCIF_01.bmp", true)
[ PERFSTAT ]    (samples=100   mean=0.67   median=0.93   min=0.02   stddev=0.46 (67.4%))
[       OK ] VideoWriter_Writing_WriteFrame.WriteFrame/3 (178 ms)
[ RUN      ] VideoWriter_Writing_WriteFrame.WriteFrame/4, where GetParam() = ("python/images/QCIF_02.bmp", false)
[ PERFSTAT ]    (samples=100   mean=0.34   median=0.45   min=0.01   stddev=0.25 (74.2%))
[       OK ] VideoWriter_Writing_WriteFrame.WriteFrame/4 (128 ms)
[ RUN      ] VideoWriter_Writing_WriteFrame.WriteFrame/5, where GetParam() = ("python/images/QCIF_02.bmp", true)
[ PERFSTAT ]    (samples=100   mean=0.72   median=0.96   min=0.02   stddev=0.47 (65.3%))
[       OK ] VideoWriter_Writing_WriteFrame.WriteFrame/5 (180 ms)
[ RUN      ] VideoWriter_Writing_WriteFrame.WriteFrame/6, where GetParam() = ("python/images/QCIF_03.bmp", false)
[ PERFSTAT ]    (samples=100   mean=0.34   median=0.45   min=0.01   stddev=0.26 (75.8%))
[       OK ] VideoWriter_Writing_WriteFrame.WriteFrame/6 (130 ms)
[ RUN      ] VideoWriter_Writing_WriteFrame.WriteFrame/7, where GetParam() = ("python/images/QCIF_03.bmp", true)
[ PERFSTAT ]    (samples=100   mean=0.73   median=0.98   min=0.02   stddev=0.48 (64.9%))
[       OK ] VideoWriter_Writing_WriteFrame.WriteFrame/7 (181 ms)
[ RUN      ] VideoWriter_Writing_WriteFrame.WriteFrame/8, where GetParam() = ("python/images/QCIF_04.bmp", false)
[ PERFSTAT ]    (samples=100   mean=0.33   median=0.44   min=0.01   stddev=0.25 (75.9%))
[       OK ] VideoWriter_Writing_WriteFrame.WriteFrame/8 (128 ms)
[ RUN      ] VideoWriter_Writing_WriteFrame.WriteFrame/9, where GetParam() = ("python/images/QCIF_04.bmp", true)
[ PERFSTAT ]    (samples=100   mean=0.67   median=0.93   min=0.01   stddev=0.66 (99.5%))
[       OK ] VideoWriter_Writing_WriteFrame.WriteFrame/9 (200 ms)
[ RUN      ] VideoWriter_Writing_WriteFrame.WriteFrame/10, where GetParam() = ("python/images/QCIF_05.bmp", false)
[ PERFSTAT ]    (samples=100   mean=0.33   median=0.43   min=0.01   stddev=0.25 (75.9%))
[       OK ] VideoWriter_Writing_WriteFrame.WriteFrame/10 (126 ms)
[ RUN      ] VideoWriter_Writing_WriteFrame.WriteFrame/11, where GetParam() = ("python/images/QCIF_05.bmp", true)
[ PERFSTAT ]    (samples=100   mean=0.71   median=0.95   min=0.02   stddev=0.46 (65.7%))
[       OK ] VideoWriter_Writing_WriteFrame.WriteFrame/11 (172 ms)
[----------] 12 tests from VideoWriter_Writing_WriteFrame (1886 ms total)

[----------] Global test environment tear-down
[==========] 17 tests from 2 test cases ran. (28131 ms total)
[  PASSED  ] 17 tests.
