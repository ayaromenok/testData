[----------]
[   INFO   ] 	Implementation variant: cuda.
[----------]
[----------]
[ GPU INFO ] 	Run test suite on NVIDIA Tegra X1 GPU.
[----------]
Time compensation is 0
*** CUDA Device Query (Runtime API) version (CUDART static linking) *** 

Device count: 1

Device 0: "NVIDIA Tegra X1"
  CUDA Driver Version / Runtime Version          10.0 / 10.0
  CUDA Capability Major/Minor version number:    5.3
  Total amount of global memory:                 3963 MBytes (4155834368 bytes)
  GPU Clock Speed:                               0.92 GHz
  Max Texture Dimension Size (x,y,z)             1D=(65536), 2D=(65536,65536), 3D=(4096,4096,4096)
  Max Layered Texture Size (dim) x layers        1D=(16384) x 2048, 2D=(16384,16384) x 2048
  Total amount of constant memory:               65536 bytes
  Total amount of shared memory per block:       49152 bytes
  Total number of registers available per block: 32768
  Warp size:                                     32
  Maximum number of threads per block:           1024
  Maximum sizes of each dimension of a block:    1024 x 1024 x 64
  Maximum sizes of each dimension of a grid:     2147483647 x 65535 x 65535
  Maximum memory pitch:                          2147483647 bytes
  Texture alignment:                             512 bytes
  Concurrent copy and execution:                 Yes with 1 copy engine(s)
  Run time limit on kernels:                     Yes
  Integrated GPU sharing Host Memory:            Yes
  Support host page-locked memory mapping:       Yes
  Concurrent kernel execution:                   Yes
  Alignment requirement for Surfaces:            Yes
  Device has ECC support enabled:                No
  Device is using TCC driver mode:               No
  Device supports Unified Addressing (UVA):      Yes
  Device PCI Bus ID / PCI location ID:           0 / 0
  Compute Mode:
      Default (multiple host threads can use ::cudaSetDevice() with device simultaneously) 

deviceQuery, CUDA Driver = CUDART, CUDA Driver Version  = 10.0, CUDA Runtime Version = 10.0, NumDevs = 1

TEST: Skip tests with tags: 'mem_6gb', 'verylong'
CTEST_FULL_OUTPUT
OpenCV version: 4.1.0-dev
OpenCV VCS version: 4.1.0-180-gb4ec8fe3e
Build type: RELEASE
WARNING: build value differs from runtime: Release
Compiler: /usr/bin/c++  (ver 7.4.0)
Parallel framework: pthreads
CPU features: NEON FP16
[ INFO:0] global /home/pi/sdk/src/opencv/opencv/modules/core/src/ocl.cpp (888) haveOpenCL Initialize OpenCL runtime...
OpenCL Platforms: 
    Portable Computing Language
        CPU: pthread-cortex-a57 (OpenCL 1.2 pocl HSTR: pthread-aarch64-unknown-linux-gnu-cortex-a57)
        iGPU: NVIDIA Tegra X1 (OpenCL 1.2 pocl HSTR: CUDA-sm_53)
Current OpenCL device: 
    Type = iGPU
    Name = NVIDIA Tegra X1
    Version = OpenCL 1.2 pocl HSTR: CUDA-sm_53
    Driver version = 1.3
    Address bits = 64
    Compute units = 1
    Max work group size = 1024
    Local memory size = 48 KB
    Max memory allocation size = 990 MB 848 KB
    Double support = Yes
    Host unified memory = Yes
    Device extensions:
        cl_khr_byte_addressable_store
        cl_khr_global_int32_base_atomics
        cl_khr_global_int32_extended_atomics
        cl_khr_local_int32_base_atomics
        cl_khr_local_int32_extended_atomics
        cl_khr_3d_image_writes
        cl_khr_fp16
        cl_khr_fp64
    Has AMD Blas = No
    Has AMD Fft = No
    Preferred vector width char = 1
    Preferred vector width short = 1
    Preferred vector width int = 1
    Preferred vector width long = 1
    Preferred vector width float = 1
    Preferred vector width double = 1
[==========] Running 30 tests from 5 test cases.
[----------] Global test environment set-up.
[----------] 2 tests from Image_Threshold_NonMaxSuppression_FAST
[ RUN      ] Image_Threshold_NonMaxSuppression_FAST.FAST/0, where GetParam() = ("gpu/perf/aloe.png", 20, false)
[ PERFSTAT ]    (samples=100   mean=17.40   median=17.83   min=11.98   stddev=3.07 (17.6%))
[       OK ] Image_Threshold_NonMaxSuppression_FAST.FAST/0 (2155 ms)
[ RUN      ] Image_Threshold_NonMaxSuppression_FAST.FAST/1, where GetParam() = ("gpu/perf/aloe.png", 20, true)
[ PERFSTAT ]    (samples=100   mean=22.90   median=22.43   min=19.72   stddev=1.99 (8.7%))
[       OK ] Image_Threshold_NonMaxSuppression_FAST.FAST/1 (2555 ms)
[----------] 2 tests from Image_Threshold_NonMaxSuppression_FAST (4710 ms total)

[----------] 1 test from Image_NFeatures_ORB
[ RUN      ] Image_NFeatures_ORB.ORB/0, where GetParam() = ("gpu/perf/aloe.png", 4000)
.
[ PERFSTAT ]    (samples=100   mean=116.49   median=116.88   min=89.81   stddev=11.92 (10.2%))
[       OK ] Image_NFeatures_ORB.ORB/0 (12627 ms)
[----------] 1 test from Image_NFeatures_ORB (12627 ms total)

[----------] 9 tests from DescSize_Norm_BFMatch
[ RUN      ] DescSize_Norm_BFMatch.BFMatch/0, where GetParam() = (64, NORM_L1)
[ PERFSTAT ]    (samples=13   mean=53.27   median=53.15   min=52.42   stddev=0.64 (1.2%))
[       OK ] DescSize_Norm_BFMatch.BFMatch/0 (719 ms)
[ RUN      ] DescSize_Norm_BFMatch.BFMatch/1, where GetParam() = (64, NORM_L2)
[ PERFSTAT ]    (samples=10   mean=53.33   median=53.45   min=52.53   stddev=0.53 (1.0%))
[       OK ] DescSize_Norm_BFMatch.BFMatch/1 (543 ms)
[ RUN      ] DescSize_Norm_BFMatch.BFMatch/2, where GetParam() = (64, NORM_HAMMING)
[ PERFSTAT ]    (samples=10   mean=44.58   median=44.63   min=43.74   stddev=0.59 (1.3%))
[       OK ] DescSize_Norm_BFMatch.BFMatch/2 (456 ms)
[ RUN      ] DescSize_Norm_BFMatch.BFMatch/3, where GetParam() = (128, NORM_L1)
[ PERFSTAT ]    (samples=10   mean=106.99   median=106.80   min=105.63   stddev=0.90 (0.8%))
[       OK ] DescSize_Norm_BFMatch.BFMatch/3 (1092 ms)
[ RUN      ] DescSize_Norm_BFMatch.BFMatch/4, where GetParam() = (128, NORM_L2)
[ PERFSTAT ]    (samples=10   mean=106.83   median=106.74   min=105.63   stddev=0.93 (0.9%))
[       OK ] DescSize_Norm_BFMatch.BFMatch/4 (1080 ms)
[ RUN      ] DescSize_Norm_BFMatch.BFMatch/5, where GetParam() = (128, NORM_HAMMING)
[ PERFSTAT ]    (samples=10   mean=95.68   median=96.03   min=92.14   stddev=2.81 (2.9%))
[       OK ] DescSize_Norm_BFMatch.BFMatch/5 (964 ms)
[ RUN      ] DescSize_Norm_BFMatch.BFMatch/6, where GetParam() = (256, NORM_L1)
[ PERFSTAT ]    (samples=10   mean=222.05   median=222.25   min=220.83   stddev=0.53 (0.2%))
[       OK ] DescSize_Norm_BFMatch.BFMatch/6 (2242 ms)
[ RUN      ] DescSize_Norm_BFMatch.BFMatch/7, where GetParam() = (256, NORM_L2)
[ PERFSTAT ]    (samples=10   mean=221.88   median=222.24   min=220.24   stddev=0.84 (0.4%))
[       OK ] DescSize_Norm_BFMatch.BFMatch/7 (2237 ms)
[ RUN      ] DescSize_Norm_BFMatch.BFMatch/8, where GetParam() = (256, NORM_HAMMING)
[ PERFSTAT ]    (samples=10   mean=188.08   median=188.13   min=187.24   stddev=0.60 (0.3%))
[       OK ] DescSize_Norm_BFMatch.BFMatch/8 (1890 ms)
[----------] 9 tests from DescSize_Norm_BFMatch (11225 ms total)

[----------] 12 tests from DescSize_K_Norm_BFKnnMatch
[ RUN      ] DescSize_K_Norm_BFKnnMatch.BFKnnMatch/0, where GetParam() = (64, 2, NORM_L1)
[ PERFSTAT ]    (samples=10   mean=53.33   median=53.17   min=52.68   stddev=0.65 (1.2%))
[       OK ] DescSize_K_Norm_BFKnnMatch.BFKnnMatch/0 (551 ms)
[ RUN      ] DescSize_K_Norm_BFKnnMatch.BFKnnMatch/1, where GetParam() = (64, 2, NORM_L2)
[ PERFSTAT ]    (samples=10   mean=53.52   median=53.48   min=52.63   stddev=0.75 (1.4%))
[       OK ] DescSize_K_Norm_BFKnnMatch.BFKnnMatch/1 (550 ms)
[ RUN      ] DescSize_K_Norm_BFKnnMatch.BFKnnMatch/2, where GetParam() = (64, 3, NORM_L1)
[ PERFSTAT ]    (samples=10   mean=81.89   median=81.94   min=79.93   stddev=1.35 (1.6%))
[       OK ] DescSize_K_Norm_BFKnnMatch.BFKnnMatch/2 (830 ms)
[ RUN      ] DescSize_K_Norm_BFKnnMatch.BFKnnMatch/3, where GetParam() = (64, 3, NORM_L2)
[ PERFSTAT ]    (samples=11   mean=83.54   median=83.23   min=80.51   stddev=2.39 (2.9%))
[       OK ] DescSize_K_Norm_BFKnnMatch.BFKnnMatch/3 (930 ms)
[ RUN      ] DescSize_K_Norm_BFKnnMatch.BFKnnMatch/4, where GetParam() = (128, 2, NORM_L1)
[ PERFSTAT ]    (samples=10   mean=107.00   median=107.08   min=105.86   stddev=0.71 (0.7%))
[       OK ] DescSize_K_Norm_BFKnnMatch.BFKnnMatch/4 (1082 ms)
[ RUN      ] DescSize_K_Norm_BFKnnMatch.BFKnnMatch/5, where GetParam() = (128, 2, NORM_L2)
[ PERFSTAT ]    (samples=10   mean=106.94   median=106.93   min=105.99   stddev=0.65 (0.6%))
[       OK ] DescSize_K_Norm_BFKnnMatch.BFKnnMatch/5 (1081 ms)
[ RUN      ] DescSize_K_Norm_BFKnnMatch.BFKnnMatch/6, where GetParam() = (128, 3, NORM_L1)
[ PERFSTAT ]    (samples=10   mean=133.34   median=133.41   min=128.61   stddev=3.64 (2.7%))
[       OK ] DescSize_K_Norm_BFKnnMatch.BFKnnMatch/6 (1346 ms)
[ RUN      ] DescSize_K_Norm_BFKnnMatch.BFKnnMatch/7, where GetParam() = (128, 3, NORM_L2)
[ PERFSTAT ]    (samples=10   mean=133.09   median=133.36   min=128.74   stddev=2.73 (2.1%))
[       OK ] DescSize_K_Norm_BFKnnMatch.BFKnnMatch/7 (1346 ms)
[ RUN      ] DescSize_K_Norm_BFKnnMatch.BFKnnMatch/8, where GetParam() = (256, 2, NORM_L1)
[ PERFSTAT ]    (samples=10   mean=223.34   median=223.30   min=223.14   stddev=0.21 (0.1%))
[       OK ] DescSize_K_Norm_BFKnnMatch.BFKnnMatch/8 (2255 ms)
[ RUN      ] DescSize_K_Norm_BFKnnMatch.BFKnnMatch/9, where GetParam() = (256, 2, NORM_L2)
[ PERFSTAT ]    (samples=10   mean=222.85   median=223.19   min=221.83   stddev=0.78 (0.4%))
[       OK ] DescSize_K_Norm_BFKnnMatch.BFKnnMatch/9 (2248 ms)
[ RUN      ] DescSize_K_Norm_BFKnnMatch.BFKnnMatch/10, where GetParam() = (256, 3, NORM_L1)
[ PERFSTAT ]    (samples=10   mean=229.57   median=230.32   min=221.82   stddev=5.23 (2.3%))
[       OK ] DescSize_K_Norm_BFKnnMatch.BFKnnMatch/10 (2317 ms)
[ RUN      ] DescSize_K_Norm_BFKnnMatch.BFKnnMatch/11, where GetParam() = (256, 3, NORM_L2)
[ PERFSTAT ]    (samples=10   mean=227.58   median=227.50   min=223.26   stddev=2.60 (1.1%))
[       OK ] DescSize_K_Norm_BFKnnMatch.BFKnnMatch/11 (2301 ms)
[----------] 12 tests from DescSize_K_Norm_BFKnnMatch (16839 ms total)

[----------] 6 tests from DescSize_Norm_BFRadiusMatch
[ RUN      ] DescSize_Norm_BFRadiusMatch.BFRadiusMatch/0, where GetParam() = (64, NORM_L1)
[ PERFSTAT ]    (samples=13   mean=57.15   median=56.85   min=56.20   stddev=0.79 (1.4%))
[       OK ] DescSize_Norm_BFRadiusMatch.BFRadiusMatch/0 (854 ms)
[ RUN      ] DescSize_Norm_BFRadiusMatch.BFRadiusMatch/1, where GetParam() = (64, NORM_L2)
[ PERFSTAT ]    (samples=13   mean=57.03   median=57.14   min=56.04   stddev=0.55 (1.0%))
[       OK ] DescSize_Norm_BFRadiusMatch.BFRadiusMatch/1 (841 ms)
[ RUN      ] DescSize_Norm_BFRadiusMatch.BFRadiusMatch/2, where GetParam() = (128, NORM_L1)
[ PERFSTAT ]    (samples=13   mean=112.38   median=112.18   min=110.97   stddev=1.06 (0.9%))
[       OK ] DescSize_Norm_BFRadiusMatch.BFRadiusMatch/2 (1566 ms)
[ RUN      ] DescSize_Norm_BFRadiusMatch.BFRadiusMatch/3, where GetParam() = (128, NORM_L2)
[ PERFSTAT ]    (samples=13   mean=112.25   median=112.15   min=110.60   stddev=0.89 (0.8%))
[       OK ] DescSize_Norm_BFRadiusMatch.BFRadiusMatch/3 (1567 ms)
[ RUN      ] DescSize_Norm_BFRadiusMatch.BFRadiusMatch/4, where GetParam() = (256, NORM_L1)
[ PERFSTAT ]    (samples=13   mean=223.20   median=223.25   min=221.39   stddev=1.26 (0.6%))
[       OK ] DescSize_Norm_BFRadiusMatch.BFRadiusMatch/4 (3012 ms)
[ RUN      ] DescSize_Norm_BFRadiusMatch.BFRadiusMatch/5, where GetParam() = (256, NORM_L2)
[ PERFSTAT ]    (samples=13   mean=222.62   median=222.53   min=220.60   stddev=1.19 (0.5%))
[       OK ] DescSize_Norm_BFRadiusMatch.BFRadiusMatch/5 (3007 ms)
[----------] 6 tests from DescSize_Norm_BFRadiusMatch (10847 ms total)

[----------] Global test environment tear-down
[==========] 30 tests from 5 test cases ran. (56249 ms total)
[  PASSED  ] 30 tests.
