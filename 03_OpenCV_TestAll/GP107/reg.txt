Time compensation is 0
TEST: Skip tests with tags: 'mem_6gb', 'verylong'
CTEST_FULL_OUTPUT
OpenCV version: 4.1.1-pre
OpenCV VCS version: 4.1.0-431-gb58b2c5ae
Build type: RELEASE
WARNING: build value differs from runtime: Release
Compiler: /usr/bin/c++  (ver 7.4.0)
Parallel framework: pthreads
CPU features: SSE SSE2 SSE3 *SSE4.1 *SSE4.2 *FP16 *AVX *AVX2 *AVX512-SKX?
Intel(R) IPP version: ippIP AVX2 (l9) 2019.0.0 Gold (-) Jul 24 2018
OpenCL Platforms: 
    NVIDIA CUDA
        dGPU: GeForce GTX 1050 (OpenCL 1.2 CUDA)
    AMD Accelerated Parallel Processing
        iGPU: gfx902 (OpenCL 2.0 AMD-APP (2841.17))
Current OpenCL device: 
    Type = dGPU
    Name = GeForce GTX 1050
    Version = OpenCL 1.2 CUDA
    Driver version = 430.26
    Address bits = 64
    Compute units = 5
    Max work group size = 1024
    Local memory size = 48 KB
    Max memory allocation size = 500 MB 80 KB
    Double support = Yes
    Host unified memory = No
    Device extensions:
        cl_khr_global_int32_base_atomics
        cl_khr_global_int32_extended_atomics
        cl_khr_local_int32_base_atomics
        cl_khr_local_int32_extended_atomics
        cl_khr_fp64
        cl_khr_byte_addressable_store
        cl_khr_icd
        cl_khr_gl_sharing
        cl_nv_compiler_options
        cl_nv_device_attribute_query
        cl_nv_pragma_unroll
        cl_nv_copy_opts
        cl_nv_create_buffer
    Has AMD Blas = No
    Has AMD Fft = No
    Preferred vector width char = 1
    Preferred vector width short = 1
    Preferred vector width int = 1
    Preferred vector width long = 1
    Preferred vector width float = 1
    Preferred vector width double = 1
[==========] Running 20 tests from 5 test cases.
[----------] Global test environment set-up.
[----------] 4 tests from Size_MatType_Registration_Shift
[ RUN      ] Size_MatType_Registration_Shift.Registration_Shift/0, where GetParam() = (64x64, 64FC1)
[ PERFSTAT ]    (samples=100   mean=0.53   median=0.50   min=0.50   stddev=0.09 (17.7%))
[       OK ] Size_MatType_Registration_Shift.Registration_Shift/0 (91 ms)
[ RUN      ] Size_MatType_Registration_Shift.Registration_Shift/1, where GetParam() = (64x64, 64FC3)
[ PERFSTAT ]    (samples=13   mean=0.81   median=0.81   min=0.81   stddev=0.00 (0.6%))
[       OK ] Size_MatType_Registration_Shift.Registration_Shift/1 (11 ms)
[ RUN      ] Size_MatType_Registration_Shift.Registration_Shift/2, where GetParam() = (128x128, 64FC1)
[ PERFSTAT ]    (samples=10   mean=1.55   median=1.54   min=1.54   stddev=0.02 (1.4%))
[       OK ] Size_MatType_Registration_Shift.Registration_Shift/2 (16 ms)
[ RUN      ] Size_MatType_Registration_Shift.Registration_Shift/3, where GetParam() = (128x128, 64FC3)
[ PERFSTAT ]    (samples=13   mean=2.79   median=2.79   min=2.77   stddev=0.02 (0.7%))
[       OK ] Size_MatType_Registration_Shift.Registration_Shift/3 (36 ms)
[----------] 4 tests from Size_MatType_Registration_Shift (154 ms total)

[----------] 4 tests from Size_MatType_Registration_Euclidean
[ RUN      ] Size_MatType_Registration_Euclidean.Registration_Euclidean/0, where GetParam() = (64x64, 64FC1)
[ PERFSTAT ]    (samples=10   mean=0.65   median=0.65   min=0.64   stddev=0.02 (2.7%))
[       OK ] Size_MatType_Registration_Euclidean.Registration_Euclidean/0 (7 ms)
[ RUN      ] Size_MatType_Registration_Euclidean.Registration_Euclidean/1, where GetParam() = (64x64, 64FC3)
[ PERFSTAT ]    (samples=10   mean=1.11   median=1.11   min=1.10   stddev=0.01 (1.1%))
[       OK ] Size_MatType_Registration_Euclidean.Registration_Euclidean/1 (11 ms)
[ RUN      ] Size_MatType_Registration_Euclidean.Registration_Euclidean/2, where GetParam() = (128x128, 64FC1)
[ PERFSTAT ]    (samples=10   mean=1.93   median=1.93   min=1.90   stddev=0.03 (1.5%))
[       OK ] Size_MatType_Registration_Euclidean.Registration_Euclidean/2 (20 ms)
[ RUN      ] Size_MatType_Registration_Euclidean.Registration_Euclidean/3, where GetParam() = (128x128, 64FC3)
[ PERFSTAT ]    (samples=10   mean=4.23   median=4.22   min=4.20   stddev=0.03 (0.7%))
[       OK ] Size_MatType_Registration_Euclidean.Registration_Euclidean/3 (42 ms)
[----------] 4 tests from Size_MatType_Registration_Euclidean (80 ms total)

[----------] 4 tests from Size_MatType_Registration_Similarity
[ RUN      ] Size_MatType_Registration_Similarity.Registration_Similarity/0, where GetParam() = (64x64, 64FC1)
[ PERFSTAT ]    (samples=13   mean=0.78   median=0.77   min=0.77   stddev=0.01 (0.9%))
[       OK ] Size_MatType_Registration_Similarity.Registration_Similarity/0 (10 ms)
[ RUN      ] Size_MatType_Registration_Similarity.Registration_Similarity/1, where GetParam() = (64x64, 64FC3)
[ PERFSTAT ]    (samples=10   mean=1.34   median=1.34   min=1.34   stddev=0.01 (1.0%))
[       OK ] Size_MatType_Registration_Similarity.Registration_Similarity/1 (14 ms)
[ RUN      ] Size_MatType_Registration_Similarity.Registration_Similarity/2, where GetParam() = (128x128, 64FC1)
[ PERFSTAT ]    (samples=10   mean=2.27   median=2.27   min=2.22   stddev=0.02 (0.8%))
[       OK ] Size_MatType_Registration_Similarity.Registration_Similarity/2 (23 ms)
[ RUN      ] Size_MatType_Registration_Similarity.Registration_Similarity/3, where GetParam() = (128x128, 64FC3)
[ PERFSTAT ]    (samples=10   mean=5.25   median=5.24   min=5.21   stddev=0.03 (0.5%))
[       OK ] Size_MatType_Registration_Similarity.Registration_Similarity/3 (52 ms)
[----------] 4 tests from Size_MatType_Registration_Similarity (99 ms total)

[----------] 4 tests from Size_MatType_Registration_Affine
[ RUN      ] Size_MatType_Registration_Affine.Registration_Affine/0, where GetParam() = (64x64, 64FC1)
[ PERFSTAT ]    (samples=12   mean=0.96   median=0.95   min=0.95   stddev=0.03 (3.0%))
[       OK ] Size_MatType_Registration_Affine.Registration_Affine/0 (12 ms)
[ RUN      ] Size_MatType_Registration_Affine.Registration_Affine/1, where GetParam() = (64x64, 64FC3)
[ PERFSTAT ]    (samples=10   mean=1.71   median=1.70   min=1.69   stddev=0.03 (1.5%))
[       OK ] Size_MatType_Registration_Affine.Registration_Affine/1 (17 ms)
[ RUN      ] Size_MatType_Registration_Affine.Registration_Affine/2, where GetParam() = (128x128, 64FC1)
[ PERFSTAT ]    (samples=10   mean=2.62   median=2.62   min=2.60   stddev=0.02 (0.6%))
[       OK ] Size_MatType_Registration_Affine.Registration_Affine/2 (26 ms)
[ RUN      ] Size_MatType_Registration_Affine.Registration_Affine/3, where GetParam() = (128x128, 64FC3)
[ PERFSTAT ]    (samples=10   mean=7.57   median=7.57   min=7.29   stddev=0.16 (2.1%))
[       OK ] Size_MatType_Registration_Affine.Registration_Affine/3 (76 ms)
[----------] 4 tests from Size_MatType_Registration_Affine (131 ms total)

[----------] 4 tests from Size_MatType_Registration_Projective
[ RUN      ] Size_MatType_Registration_Projective.Registration_Projective/0, where GetParam() = (64x64, 64FC1)
[ PERFSTAT ]    (samples=13   mean=1.28   median=1.28   min=1.27   stddev=0.01 (0.5%))
[       OK ] Size_MatType_Registration_Projective.Registration_Projective/0 (17 ms)
[ RUN      ] Size_MatType_Registration_Projective.Registration_Projective/1, where GetParam() = (64x64, 64FC3)
[ PERFSTAT ]    (samples=10   mean=2.40   median=2.39   min=2.37   stddev=0.03 (1.4%))
[       OK ] Size_MatType_Registration_Projective.Registration_Projective/1 (24 ms)
[ RUN      ] Size_MatType_Registration_Projective.Registration_Projective/2, where GetParam() = (128x128, 64FC1)
[ PERFSTAT ]    (samples=10   mean=3.64   median=3.65   min=3.61   stddev=0.02 (0.7%))
[       OK ] Size_MatType_Registration_Projective.Registration_Projective/2 (37 ms)
[ RUN      ] Size_MatType_Registration_Projective.Registration_Projective/3, where GetParam() = (128x128, 64FC3)
[ PERFSTAT ]    (samples=10   mean=10.57   median=10.43   min=10.36   stddev=0.28 (2.7%))
[       OK ] Size_MatType_Registration_Projective.Registration_Projective/3 (106 ms)
[----------] 4 tests from Size_MatType_Registration_Projective (184 ms total)

[----------] Global test environment tear-down
[==========] 20 tests from 5 test cases ran. (648 ms total)
[  PASSED  ] 20 tests.
