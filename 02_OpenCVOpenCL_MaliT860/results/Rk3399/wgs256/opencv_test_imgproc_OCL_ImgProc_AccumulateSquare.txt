CTEST_FULL_OUTPUT
OpenCV version: 4.0.0-dev
OpenCV VCS version: 3.4.3-983-g8b544a8
Build type: RELEASE
WARNING: build value differs from runtime: Release
Compiler: /usr/bin/c++  (ver 5.4.0)
Parallel framework: pthreads
CPU features: N/A
vendor name: ARM
max WG Size by driver: 256
max WG Size by test: 256
OpenCL Platforms: 
    ARM Platform
vendor name: ARM
max WG Size by driver: 256
max WG Size by test: 256
        iGPU: Mali-T860 (OpenCL 1.2 v1.r14p0-01rel0-git(966ed26).fb73b5772aa0adfbd3ad68351d4226c5)
Current OpenCL device: 
    Type = iGPU
    Name = Mali-T860
    Version = OpenCL 1.2 v1.r14p0-01rel0-git(966ed26).fb73b5772aa0adfbd3ad68351d4226c5
    Driver version = 1.2
    Address bits = 64
    Compute units = 4
    Max work group size = 256
    Local memory size = 32 KB
    Max memory allocation size = 493 MB 18 KB
    Double support = Yes
    Host unified memory = Yes
    Device extensions:
        cl_khr_global_int32_base_atomics
        cl_khr_global_int32_extended_atomics
        cl_khr_local_int32_base_atomics
        cl_khr_local_int32_extended_atomics
        cl_khr_byte_addressable_store
        cl_khr_3d_image_writes
        cl_khr_fp64
        cl_khr_int64_base_atomics
        cl_khr_int64_extended_atomics
        cl_khr_fp16
        cl_khr_gl_sharing
        cl_khr_icd
        cl_khr_egl_event
        cl_khr_egl_image
        cl_khr_image2d_from_buffer
        cl_arm_core_id
        cl_arm_printf
        cl_arm_thread_limit_hint
        cl_arm_non_uniform_work_group_size
        cl_arm_import_memory
    Has AMD Blas = No
    Has AMD Fft = No
    Preferred vector width char = 16
    Preferred vector width short = 8
    Preferred vector width int = 4
    Preferred vector width long = 2
    Preferred vector width float = 4
    Preferred vector width double = 2
Note: Google Test filter = *OCL_ImgProc/AccumulateSquare*
[==========] Running 112 tests from 1 test case.
[----------] Global test environment set-up.
[----------] 112 tests from OCL_ImgProc/AccumulateSquare
[ RUN      ] OCL_ImgProc/AccumulateSquare.Mat/0, where GetParam() = ((CV_8U, CV_32F), Channels(1), false)
[       OK ] OCL_ImgProc/AccumulateSquare.Mat/0 (51 ms)
[ RUN      ] OCL_ImgProc/AccumulateSquare.Mat/1, where GetParam() = ((CV_8U, CV_32F), Channels(1), true)
[       OK ] OCL_ImgProc/AccumulateSquare.Mat/1 (7 ms)
[ RUN      ] OCL_ImgProc/AccumulateSquare.Mat/2, where GetParam() = ((CV_8U, CV_32F), Channels(2), false)
[       OK ] OCL_ImgProc/AccumulateSquare.Mat/2 (4 ms)
[ RUN      ] OCL_ImgProc/AccumulateSquare.Mat/3, where GetParam() = ((CV_8U, CV_32F), Channels(2), true)
[       OK ] OCL_ImgProc/AccumulateSquare.Mat/3 (4 ms)
[ RUN      ] OCL_ImgProc/AccumulateSquare.Mat/4, where GetParam() = ((CV_8U, CV_32F), Channels(3), false)
[       OK ] OCL_ImgProc/AccumulateSquare.Mat/4 (5 ms)
[ RUN      ] OCL_ImgProc/AccumulateSquare.Mat/5, where GetParam() = ((CV_8U, CV_32F), Channels(3), true)
[       OK ] OCL_ImgProc/AccumulateSquare.Mat/5 (4 ms)
[ RUN      ] OCL_ImgProc/AccumulateSquare.Mat/6, where GetParam() = ((CV_8U, CV_32F), Channels(4), false)
[       OK ] OCL_ImgProc/AccumulateSquare.Mat/6 (4 ms)
[ RUN      ] OCL_ImgProc/AccumulateSquare.Mat/7, where GetParam() = ((CV_8U, CV_32F), Channels(4), true)
[       OK ] OCL_ImgProc/AccumulateSquare.Mat/7 (4 ms)
[ RUN      ] OCL_ImgProc/AccumulateSquare.Mat/8, where GetParam() = ((CV_16U, CV_32F), Channels(1), false)
[       OK ] OCL_ImgProc/AccumulateSquare.Mat/8 (18 ms)
[ RUN      ] OCL_ImgProc/AccumulateSquare.Mat/9, where GetParam() = ((CV_16U, CV_32F), Channels(1), true)
[       OK ] OCL_ImgProc/AccumulateSquare.Mat/9 (6 ms)
[ RUN      ] OCL_ImgProc/AccumulateSquare.Mat/10, where GetParam() = ((CV_16U, CV_32F), Channels(2), false)
[       OK ] OCL_ImgProc/AccumulateSquare.Mat/10 (6 ms)
[ RUN      ] OCL_ImgProc/AccumulateSquare.Mat/11, where GetParam() = ((CV_16U, CV_32F), Channels(2), true)
[       OK ] OCL_ImgProc/AccumulateSquare.Mat/11 (4 ms)
[ RUN      ] OCL_ImgProc/AccumulateSquare.Mat/12, where GetParam() = ((CV_16U, CV_32F), Channels(3), false)
[       OK ] OCL_ImgProc/AccumulateSquare.Mat/12 (4 ms)
[ RUN      ] OCL_ImgProc/AccumulateSquare.Mat/13, where GetParam() = ((CV_16U, CV_32F), Channels(3), true)
[       OK ] OCL_ImgProc/AccumulateSquare.Mat/13 (4 ms)
[ RUN      ] OCL_ImgProc/AccumulateSquare.Mat/14, where GetParam() = ((CV_16U, CV_32F), Channels(4), false)
[       OK ] OCL_ImgProc/AccumulateSquare.Mat/14 (15 ms)
[ RUN      ] OCL_ImgProc/AccumulateSquare.Mat/15, where GetParam() = ((CV_16U, CV_32F), Channels(4), true)
[       OK ] OCL_ImgProc/AccumulateSquare.Mat/15 (4 ms)
[ RUN      ] OCL_ImgProc/AccumulateSquare.Mat/16, where GetParam() = ((CV_32F, CV_32F), Channels(1), false)
[       OK ] OCL_ImgProc/AccumulateSquare.Mat/16 (22 ms)
[ RUN      ] OCL_ImgProc/AccumulateSquare.Mat/17, where GetParam() = ((CV_32F, CV_32F), Channels(1), true)
[       OK ] OCL_ImgProc/AccumulateSquare.Mat/17 (4 ms)
[ RUN      ] OCL_ImgProc/AccumulateSquare.Mat/18, where GetParam() = ((CV_32F, CV_32F), Channels(2), false)
[       OK ] OCL_ImgProc/AccumulateSquare.Mat/18 (19 ms)
[ RUN      ] OCL_ImgProc/AccumulateSquare.Mat/19, where GetParam() = ((CV_32F, CV_32F), Channels(2), true)
[       OK ] OCL_ImgProc/AccumulateSquare.Mat/19 (4 ms)
[ RUN      ] OCL_ImgProc/AccumulateSquare.Mat/20, where GetParam() = ((CV_32F, CV_32F), Channels(3), false)
[       OK ] OCL_ImgProc/AccumulateSquare.Mat/20 (4 ms)
[ RUN      ] OCL_ImgProc/AccumulateSquare.Mat/21, where GetParam() = ((CV_32F, CV_32F), Channels(3), true)
[       OK ] OCL_ImgProc/AccumulateSquare.Mat/21 (5 ms)
[ RUN      ] OCL_ImgProc/AccumulateSquare.Mat/22, where GetParam() = ((CV_32F, CV_32F), Channels(4), false)
[       OK ] OCL_ImgProc/AccumulateSquare.Mat/22 (20 ms)
[ RUN      ] OCL_ImgProc/AccumulateSquare.Mat/23, where GetParam() = ((CV_32F, CV_32F), Channels(4), true)
[       OK ] OCL_ImgProc/AccumulateSquare.Mat/23 (5 ms)
[ RUN      ] OCL_ImgProc/AccumulateSquare.Mat/24, where GetParam() = ((CV_8U, CV_64F), Channels(1), false)
[       OK ] OCL_ImgProc/AccumulateSquare.Mat/24 (25 ms)
[ RUN      ] OCL_ImgProc/AccumulateSquare.Mat/25, where GetParam() = ((CV_8U, CV_64F), Channels(1), true)
[       OK ] OCL_ImgProc/AccumulateSquare.Mat/25 (6 ms)
[ RUN      ] OCL_ImgProc/AccumulateSquare.Mat/26, where GetParam() = ((CV_8U, CV_64F), Channels(2), false)
[       OK ] OCL_ImgProc/AccumulateSquare.Mat/26 (4 ms)
[ RUN      ] OCL_ImgProc/AccumulateSquare.Mat/27, where GetParam() = ((CV_8U, CV_64F), Channels(2), true)
[       OK ] OCL_ImgProc/AccumulateSquare.Mat/27 (5 ms)
[ RUN      ] OCL_ImgProc/AccumulateSquare.Mat/28, where GetParam() = ((CV_8U, CV_64F), Channels(3), false)
[       OK ] OCL_ImgProc/AccumulateSquare.Mat/28 (5 ms)
[ RUN      ] OCL_ImgProc/AccumulateSquare.Mat/29, where GetParam() = ((CV_8U, CV_64F), Channels(3), true)
[       OK ] OCL_ImgProc/AccumulateSquare.Mat/29 (7 ms)
[ RUN      ] OCL_ImgProc/AccumulateSquare.Mat/30, where GetParam() = ((CV_8U, CV_64F), Channels(4), false)
[       OK ] OCL_ImgProc/AccumulateSquare.Mat/30 (4 ms)
[ RUN      ] OCL_ImgProc/AccumulateSquare.Mat/31, where GetParam() = ((CV_8U, CV_64F), Channels(4), true)
[       OK ] OCL_ImgProc/AccumulateSquare.Mat/31 (14 ms)
[ RUN      ] OCL_ImgProc/AccumulateSquare.Mat/32, where GetParam() = ((CV_16U, CV_64F), Channels(1), false)
[       OK ] OCL_ImgProc/AccumulateSquare.Mat/32 (49 ms)
[ RUN      ] OCL_ImgProc/AccumulateSquare.Mat/33, where GetParam() = ((CV_16U, CV_64F), Channels(1), true)
[       OK ] OCL_ImgProc/AccumulateSquare.Mat/33 (4 ms)
[ RUN      ] OCL_ImgProc/AccumulateSquare.Mat/34, where GetParam() = ((CV_16U, CV_64F), Channels(2), false)
[       OK ] OCL_ImgProc/AccumulateSquare.Mat/34 (4 ms)
[ RUN      ] OCL_ImgProc/AccumulateSquare.Mat/35, where GetParam() = ((CV_16U, CV_64F), Channels(2), true)
[       OK ] OCL_ImgProc/AccumulateSquare.Mat/35 (4 ms)
[ RUN      ] OCL_ImgProc/AccumulateSquare.Mat/36, where GetParam() = ((CV_16U, CV_64F), Channels(3), false)
[       OK ] OCL_ImgProc/AccumulateSquare.Mat/36 (3 ms)
[ RUN      ] OCL_ImgProc/AccumulateSquare.Mat/37, where GetParam() = ((CV_16U, CV_64F), Channels(3), true)
[       OK ] OCL_ImgProc/AccumulateSquare.Mat/37 (6 ms)
[ RUN      ] OCL_ImgProc/AccumulateSquare.Mat/38, where GetParam() = ((CV_16U, CV_64F), Channels(4), false)
[       OK ] OCL_ImgProc/AccumulateSquare.Mat/38 (31 ms)
[ RUN      ] OCL_ImgProc/AccumulateSquare.Mat/39, where GetParam() = ((CV_16U, CV_64F), Channels(4), true)
[       OK ] OCL_ImgProc/AccumulateSquare.Mat/39 (8 ms)
[ RUN      ] OCL_ImgProc/AccumulateSquare.Mat/40, where GetParam() = ((CV_32F, CV_64F), Channels(1), false)
[       OK ] OCL_ImgProc/AccumulateSquare.Mat/40 (34 ms)
[ RUN      ] OCL_ImgProc/AccumulateSquare.Mat/41, where GetParam() = ((CV_32F, CV_64F), Channels(1), true)
[       OK ] OCL_ImgProc/AccumulateSquare.Mat/41 (4 ms)
[ RUN      ] OCL_ImgProc/AccumulateSquare.Mat/42, where GetParam() = ((CV_32F, CV_64F), Channels(2), false)
[       OK ] OCL_ImgProc/AccumulateSquare.Mat/42 (27 ms)
[ RUN      ] OCL_ImgProc/AccumulateSquare.Mat/43, where GetParam() = ((CV_32F, CV_64F), Channels(2), true)
[       OK ] OCL_ImgProc/AccumulateSquare.Mat/43 (4 ms)
[ RUN      ] OCL_ImgProc/AccumulateSquare.Mat/44, where GetParam() = ((CV_32F, CV_64F), Channels(3), false)
[       OK ] OCL_ImgProc/AccumulateSquare.Mat/44 (3 ms)
[ RUN      ] OCL_ImgProc/AccumulateSquare.Mat/45, where GetParam() = ((CV_32F, CV_64F), Channels(3), true)
[       OK ] OCL_ImgProc/AccumulateSquare.Mat/45 (5 ms)
[ RUN      ] OCL_ImgProc/AccumulateSquare.Mat/46, where GetParam() = ((CV_32F, CV_64F), Channels(4), false)
[       OK ] OCL_ImgProc/AccumulateSquare.Mat/46 (2 ms)
[ RUN      ] OCL_ImgProc/AccumulateSquare.Mat/47, where GetParam() = ((CV_32F, CV_64F), Channels(4), true)
[       OK ] OCL_ImgProc/AccumulateSquare.Mat/47 (6 ms)
[ RUN      ] OCL_ImgProc/AccumulateSquare.Mat/48, where GetParam() = ((CV_64F, CV_64F), Channels(1), false)
[       OK ] OCL_ImgProc/AccumulateSquare.Mat/48 (31 ms)
[ RUN      ] OCL_ImgProc/AccumulateSquare.Mat/49, where GetParam() = ((CV_64F, CV_64F), Channels(1), true)
[       OK ] OCL_ImgProc/AccumulateSquare.Mat/49 (5 ms)
[ RUN      ] OCL_ImgProc/AccumulateSquare.Mat/50, where GetParam() = ((CV_64F, CV_64F), Channels(2), false)
[       OK ] OCL_ImgProc/AccumulateSquare.Mat/50 (31 ms)
[ RUN      ] OCL_ImgProc/AccumulateSquare.Mat/51, where GetParam() = ((CV_64F, CV_64F), Channels(2), true)
[       OK ] OCL_ImgProc/AccumulateSquare.Mat/51 (6 ms)
[ RUN      ] OCL_ImgProc/AccumulateSquare.Mat/52, where GetParam() = ((CV_64F, CV_64F), Channels(3), false)
[       OK ] OCL_ImgProc/AccumulateSquare.Mat/52 (3 ms)
[ RUN      ] OCL_ImgProc/AccumulateSquare.Mat/53, where GetParam() = ((CV_64F, CV_64F), Channels(3), true)
[       OK ] OCL_ImgProc/AccumulateSquare.Mat/53 (5 ms)
[ RUN      ] OCL_ImgProc/AccumulateSquare.Mat/54, where GetParam() = ((CV_64F, CV_64F), Channels(4), false)
[       OK ] OCL_ImgProc/AccumulateSquare.Mat/54 (3 ms)
[ RUN      ] OCL_ImgProc/AccumulateSquare.Mat/55, where GetParam() = ((CV_64F, CV_64F), Channels(4), true)
[       OK ] OCL_ImgProc/AccumulateSquare.Mat/55 (6 ms)
[ RUN      ] OCL_ImgProc/AccumulateSquare.Mask/0, where GetParam() = ((CV_8U, CV_32F), Channels(1), false)
[       OK ] OCL_ImgProc/AccumulateSquare.Mask/0 (35 ms)
[ RUN      ] OCL_ImgProc/AccumulateSquare.Mask/1, where GetParam() = ((CV_8U, CV_32F), Channels(1), true)
[       OK ] OCL_ImgProc/AccumulateSquare.Mask/1 (4 ms)
[ RUN      ] OCL_ImgProc/AccumulateSquare.Mask/2, where GetParam() = ((CV_8U, CV_32F), Channels(2), false)
[       OK ] OCL_ImgProc/AccumulateSquare.Mask/2 (29 ms)
[ RUN      ] OCL_ImgProc/AccumulateSquare.Mask/3, where GetParam() = ((CV_8U, CV_32F), Channels(2), true)
[       OK ] OCL_ImgProc/AccumulateSquare.Mask/3 (4 ms)
[ RUN      ] OCL_ImgProc/AccumulateSquare.Mask/4, where GetParam() = ((CV_8U, CV_32F), Channels(3), false)
[       OK ] OCL_ImgProc/AccumulateSquare.Mask/4 (35 ms)
[ RUN      ] OCL_ImgProc/AccumulateSquare.Mask/5, where GetParam() = ((CV_8U, CV_32F), Channels(3), true)
[       OK ] OCL_ImgProc/AccumulateSquare.Mask/5 (5 ms)
[ RUN      ] OCL_ImgProc/AccumulateSquare.Mask/6, where GetParam() = ((CV_8U, CV_32F), Channels(4), false)
[       OK ] OCL_ImgProc/AccumulateSquare.Mask/6 (28 ms)
[ RUN      ] OCL_ImgProc/AccumulateSquare.Mask/7, where GetParam() = ((CV_8U, CV_32F), Channels(4), true)
[       OK ] OCL_ImgProc/AccumulateSquare.Mask/7 (5 ms)
[ RUN      ] OCL_ImgProc/AccumulateSquare.Mask/8, where GetParam() = ((CV_16U, CV_32F), Channels(1), false)
[       OK ] OCL_ImgProc/AccumulateSquare.Mask/8 (32 ms)
[ RUN      ] OCL_ImgProc/AccumulateSquare.Mask/9, where GetParam() = ((CV_16U, CV_32F), Channels(1), true)
[       OK ] OCL_ImgProc/AccumulateSquare.Mask/9 (4 ms)
[ RUN      ] OCL_ImgProc/AccumulateSquare.Mask/10, where GetParam() = ((CV_16U, CV_32F), Channels(2), false)
[       OK ] OCL_ImgProc/AccumulateSquare.Mask/10 (27 ms)
[ RUN      ] OCL_ImgProc/AccumulateSquare.Mask/11, where GetParam() = ((CV_16U, CV_32F), Channels(2), true)
[       OK ] OCL_ImgProc/AccumulateSquare.Mask/11 (8 ms)
[ RUN      ] OCL_ImgProc/AccumulateSquare.Mask/12, where GetParam() = ((CV_16U, CV_32F), Channels(3), false)
[       OK ] OCL_ImgProc/AccumulateSquare.Mask/12 (28 ms)
[ RUN      ] OCL_ImgProc/AccumulateSquare.Mask/13, where GetParam() = ((CV_16U, CV_32F), Channels(3), true)
[       OK ] OCL_ImgProc/AccumulateSquare.Mask/13 (9 ms)
[ RUN      ] OCL_ImgProc/AccumulateSquare.Mask/14, where GetParam() = ((CV_16U, CV_32F), Channels(4), false)
[       OK ] OCL_ImgProc/AccumulateSquare.Mask/14 (46 ms)
[ RUN      ] OCL_ImgProc/AccumulateSquare.Mask/15, where GetParam() = ((CV_16U, CV_32F), Channels(4), true)
[       OK ] OCL_ImgProc/AccumulateSquare.Mask/15 (6 ms)
[ RUN      ] OCL_ImgProc/AccumulateSquare.Mask/16, where GetParam() = ((CV_32F, CV_32F), Channels(1), false)
[       OK ] OCL_ImgProc/AccumulateSquare.Mask/16 (38 ms)
[ RUN      ] OCL_ImgProc/AccumulateSquare.Mask/17, where GetParam() = ((CV_32F, CV_32F), Channels(1), true)
[       OK ] OCL_ImgProc/AccumulateSquare.Mask/17 (5 ms)
[ RUN      ] OCL_ImgProc/AccumulateSquare.Mask/18, where GetParam() = ((CV_32F, CV_32F), Channels(2), false)
[       OK ] OCL_ImgProc/AccumulateSquare.Mask/18 (28 ms)
[ RUN      ] OCL_ImgProc/AccumulateSquare.Mask/19, where GetParam() = ((CV_32F, CV_32F), Channels(2), true)
[       OK ] OCL_ImgProc/AccumulateSquare.Mask/19 (5 ms)
[ RUN      ] OCL_ImgProc/AccumulateSquare.Mask/20, where GetParam() = ((CV_32F, CV_32F), Channels(3), false)
[       OK ] OCL_ImgProc/AccumulateSquare.Mask/20 (29 ms)
[ RUN      ] OCL_ImgProc/AccumulateSquare.Mask/21, where GetParam() = ((CV_32F, CV_32F), Channels(3), true)
[       OK ] OCL_ImgProc/AccumulateSquare.Mask/21 (6 ms)
[ RUN      ] OCL_ImgProc/AccumulateSquare.Mask/22, where GetParam() = ((CV_32F, CV_32F), Channels(4), false)
[       OK ] OCL_ImgProc/AccumulateSquare.Mask/22 (30 ms)
[ RUN      ] OCL_ImgProc/AccumulateSquare.Mask/23, where GetParam() = ((CV_32F, CV_32F), Channels(4), true)
[       OK ] OCL_ImgProc/AccumulateSquare.Mask/23 (5 ms)
[ RUN      ] OCL_ImgProc/AccumulateSquare.Mask/24, where GetParam() = ((CV_8U, CV_64F), Channels(1), false)
[       OK ] OCL_ImgProc/AccumulateSquare.Mask/24 (36 ms)
[ RUN      ] OCL_ImgProc/AccumulateSquare.Mask/25, where GetParam() = ((CV_8U, CV_64F), Channels(1), true)
[       OK ] OCL_ImgProc/AccumulateSquare.Mask/25 (6 ms)
[ RUN      ] OCL_ImgProc/AccumulateSquare.Mask/26, where GetParam() = ((CV_8U, CV_64F), Channels(2), false)
[       OK ] OCL_ImgProc/AccumulateSquare.Mask/26 (33 ms)
[ RUN      ] OCL_ImgProc/AccumulateSquare.Mask/27, where GetParam() = ((CV_8U, CV_64F), Channels(2), true)
[       OK ] OCL_ImgProc/AccumulateSquare.Mask/27 (6 ms)
[ RUN      ] OCL_ImgProc/AccumulateSquare.Mask/28, where GetParam() = ((CV_8U, CV_64F), Channels(3), false)
[       OK ] OCL_ImgProc/AccumulateSquare.Mask/28 (33 ms)
[ RUN      ] OCL_ImgProc/AccumulateSquare.Mask/29, where GetParam() = ((CV_8U, CV_64F), Channels(3), true)
[       OK ] OCL_ImgProc/AccumulateSquare.Mask/29 (6 ms)
[ RUN      ] OCL_ImgProc/AccumulateSquare.Mask/30, where GetParam() = ((CV_8U, CV_64F), Channels(4), false)
[       OK ] OCL_ImgProc/AccumulateSquare.Mask/30 (32 ms)
[ RUN      ] OCL_ImgProc/AccumulateSquare.Mask/31, where GetParam() = ((CV_8U, CV_64F), Channels(4), true)
[       OK ] OCL_ImgProc/AccumulateSquare.Mask/31 (8 ms)
[ RUN      ] OCL_ImgProc/AccumulateSquare.Mask/32, where GetParam() = ((CV_16U, CV_64F), Channels(1), false)
[       OK ] OCL_ImgProc/AccumulateSquare.Mask/32 (41 ms)
[ RUN      ] OCL_ImgProc/AccumulateSquare.Mask/33, where GetParam() = ((CV_16U, CV_64F), Channels(1), true)
[       OK ] OCL_ImgProc/AccumulateSquare.Mask/33 (4 ms)
[ RUN      ] OCL_ImgProc/AccumulateSquare.Mask/34, where GetParam() = ((CV_16U, CV_64F), Channels(2), false)
[       OK ] OCL_ImgProc/AccumulateSquare.Mask/34 (29 ms)
[ RUN      ] OCL_ImgProc/AccumulateSquare.Mask/35, where GetParam() = ((CV_16U, CV_64F), Channels(2), true)
[       OK ] OCL_ImgProc/AccumulateSquare.Mask/35 (5 ms)
[ RUN      ] OCL_ImgProc/AccumulateSquare.Mask/36, where GetParam() = ((CV_16U, CV_64F), Channels(3), false)
[       OK ] OCL_ImgProc/AccumulateSquare.Mask/36 (29 ms)
[ RUN      ] OCL_ImgProc/AccumulateSquare.Mask/37, where GetParam() = ((CV_16U, CV_64F), Channels(3), true)
[       OK ] OCL_ImgProc/AccumulateSquare.Mask/37 (6 ms)
[ RUN      ] OCL_ImgProc/AccumulateSquare.Mask/38, where GetParam() = ((CV_16U, CV_64F), Channels(4), false)
[       OK ] OCL_ImgProc/AccumulateSquare.Mask/38 (31 ms)
[ RUN      ] OCL_ImgProc/AccumulateSquare.Mask/39, where GetParam() = ((CV_16U, CV_64F), Channels(4), true)
[       OK ] OCL_ImgProc/AccumulateSquare.Mask/39 (7 ms)
[ RUN      ] OCL_ImgProc/AccumulateSquare.Mask/40, where GetParam() = ((CV_32F, CV_64F), Channels(1), false)
[       OK ] OCL_ImgProc/AccumulateSquare.Mask/40 (37 ms)
[ RUN      ] OCL_ImgProc/AccumulateSquare.Mask/41, where GetParam() = ((CV_32F, CV_64F), Channels(1), true)
[       OK ] OCL_ImgProc/AccumulateSquare.Mask/41 (6 ms)
[ RUN      ] OCL_ImgProc/AccumulateSquare.Mask/42, where GetParam() = ((CV_32F, CV_64F), Channels(2), false)
[       OK ] OCL_ImgProc/AccumulateSquare.Mask/42 (31 ms)
[ RUN      ] OCL_ImgProc/AccumulateSquare.Mask/43, where GetParam() = ((CV_32F, CV_64F), Channels(2), true)
[       OK ] OCL_ImgProc/AccumulateSquare.Mask/43 (5 ms)
[ RUN      ] OCL_ImgProc/AccumulateSquare.Mask/44, where GetParam() = ((CV_32F, CV_64F), Channels(3), false)
[       OK ] OCL_ImgProc/AccumulateSquare.Mask/44 (33 ms)
[ RUN      ] OCL_ImgProc/AccumulateSquare.Mask/45, where GetParam() = ((CV_32F, CV_64F), Channels(3), true)
[       OK ] OCL_ImgProc/AccumulateSquare.Mask/45 (6 ms)
[ RUN      ] OCL_ImgProc/AccumulateSquare.Mask/46, where GetParam() = ((CV_32F, CV_64F), Channels(4), false)
[       OK ] OCL_ImgProc/AccumulateSquare.Mask/46 (31 ms)
[ RUN      ] OCL_ImgProc/AccumulateSquare.Mask/47, where GetParam() = ((CV_32F, CV_64F), Channels(4), true)
[       OK ] OCL_ImgProc/AccumulateSquare.Mask/47 (7 ms)
[ RUN      ] OCL_ImgProc/AccumulateSquare.Mask/48, where GetParam() = ((CV_64F, CV_64F), Channels(1), false)
[       OK ] OCL_ImgProc/AccumulateSquare.Mask/48 (43 ms)
[ RUN      ] OCL_ImgProc/AccumulateSquare.Mask/49, where GetParam() = ((CV_64F, CV_64F), Channels(1), true)
[       OK ] OCL_ImgProc/AccumulateSquare.Mask/49 (4 ms)
[ RUN      ] OCL_ImgProc/AccumulateSquare.Mask/50, where GetParam() = ((CV_64F, CV_64F), Channels(2), false)
[       OK ] OCL_ImgProc/AccumulateSquare.Mask/50 (27 ms)
[ RUN      ] OCL_ImgProc/AccumulateSquare.Mask/51, where GetParam() = ((CV_64F, CV_64F), Channels(2), true)
[       OK ] OCL_ImgProc/AccumulateSquare.Mask/51 (6 ms)
[ RUN      ] OCL_ImgProc/AccumulateSquare.Mask/52, where GetParam() = ((CV_64F, CV_64F), Channels(3), false)
[       OK ] OCL_ImgProc/AccumulateSquare.Mask/52 (33 ms)
[ RUN      ] OCL_ImgProc/AccumulateSquare.Mask/53, where GetParam() = ((CV_64F, CV_64F), Channels(3), true)
[       OK ] OCL_ImgProc/AccumulateSquare.Mask/53 (7 ms)
[ RUN      ] OCL_ImgProc/AccumulateSquare.Mask/54, where GetParam() = ((CV_64F, CV_64F), Channels(4), false)
[       OK ] OCL_ImgProc/AccumulateSquare.Mask/54 (35 ms)
[ RUN      ] OCL_ImgProc/AccumulateSquare.Mask/55, where GetParam() = ((CV_64F, CV_64F), Channels(4), true)
[       OK ] OCL_ImgProc/AccumulateSquare.Mask/55 (9 ms)
[----------] 112 tests from OCL_ImgProc/AccumulateSquare (1683 ms total)

[----------] Global test environment tear-down
[==========] 112 tests from 1 test case ran. (1686 ms total)
[  PASSED  ] 112 tests.
