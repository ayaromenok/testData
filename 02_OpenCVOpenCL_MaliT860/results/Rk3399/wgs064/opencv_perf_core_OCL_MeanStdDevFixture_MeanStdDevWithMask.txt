Time compensation is 0
CTEST_FULL_OUTPUT
OpenCV version: 4.0.0-dev
OpenCV VCS version: 3.4.3-983-g8b544a8
Build type: RELEASE
WARNING: build value differs from runtime: Release
Compiler: /usr/bin/c++  (ver 5.4.0)
Parallel framework: pthreads
CPU features: N/A
vendor name: ARM
max WG Size by driver: 256
max WG Size by test: 64
OpenCL Platforms: 
    ARM Platform
vendor name: ARM
max WG Size by driver: 256
max WG Size by test: 64
        iGPU: Mali-T860 (OpenCL 1.2 v1.r14p0-01rel0-git(966ed26).fb73b5772aa0adfbd3ad68351d4226c5)
Current OpenCL device: 
    Type = iGPU
    Name = Mali-T860
    Version = OpenCL 1.2 v1.r14p0-01rel0-git(966ed26).fb73b5772aa0adfbd3ad68351d4226c5
    Driver version = 1.2
    Address bits = 64
    Compute units = 4
    Max work group size = 64
    Local memory size = 32 KB
    Max memory allocation size = 493 MB 18 KB
    Double support = Yes
    Host unified memory = Yes
    Device extensions:
        cl_khr_global_int32_base_atomics
        cl_khr_global_int32_extended_atomics
        cl_khr_local_int32_base_atomics
        cl_khr_local_int32_extended_atomics
        cl_khr_byte_addressable_store
        cl_khr_3d_image_writes
        cl_khr_fp64
        cl_khr_int64_base_atomics
        cl_khr_int64_extended_atomics
        cl_khr_fp16
        cl_khr_gl_sharing
        cl_khr_icd
        cl_khr_egl_event
        cl_khr_egl_image
        cl_khr_image2d_from_buffer
        cl_arm_core_id
        cl_arm_printf
        cl_arm_thread_limit_hint
        cl_arm_non_uniform_work_group_size
        cl_arm_import_memory
    Has AMD Blas = No
    Has AMD Fft = No
    Preferred vector width char = 16
    Preferred vector width short = 8
    Preferred vector width int = 4
    Preferred vector width long = 2
    Preferred vector width float = 4
    Preferred vector width double = 2
Note: Google Test filter = *OCL_MeanStdDevFixture_MeanStdDevWithMask*
[==========] Running 18 tests from 1 test case.
[----------] Global test environment set-up.
[----------] 18 tests from OCL_MeanStdDevFixture_MeanStdDevWithMask
[ RUN      ] OCL_MeanStdDevFixture_MeanStdDevWithMask.MeanStdDevWithMask/0, where GetParam() = (640x480, 8UC1)
[ PERFSTAT ]    (samples=100   mean=6.23   median=6.15   min=4.65   stddev=0.35 (5.6%))
[       OK ] OCL_MeanStdDevFixture_MeanStdDevWithMask.MeanStdDevWithMask/0 (688 ms)
[ RUN      ] OCL_MeanStdDevFixture_MeanStdDevWithMask.MeanStdDevWithMask/1, where GetParam() = (640x480, 32FC1)
[ PERFSTAT ]    (samples=100   mean=6.25   median=6.35   min=4.75   stddev=0.53 (8.5%))
[       OK ] OCL_MeanStdDevFixture_MeanStdDevWithMask.MeanStdDevWithMask/1 (722 ms)
[ RUN      ] OCL_MeanStdDevFixture_MeanStdDevWithMask.MeanStdDevWithMask/2, where GetParam() = (640x480, 8UC3)
[ PERFSTAT ]    (samples=100   mean=7.65   median=7.79   min=5.89   stddev=0.53 (6.9%))
[       OK ] OCL_MeanStdDevFixture_MeanStdDevWithMask.MeanStdDevWithMask/2 (880 ms)
[ RUN      ] OCL_MeanStdDevFixture_MeanStdDevWithMask.MeanStdDevWithMask/3, where GetParam() = (640x480, 32FC3)
[ PERFSTAT ]    (samples=100   mean=7.74   median=7.85   min=5.90   stddev=0.39 (5.1%))
[       OK ] OCL_MeanStdDevFixture_MeanStdDevWithMask.MeanStdDevWithMask/3 (898 ms)
[ RUN      ] OCL_MeanStdDevFixture_MeanStdDevWithMask.MeanStdDevWithMask/4, where GetParam() = (640x480, 8UC4)
[ PERFSTAT ]    (samples=100   mean=7.61   median=7.66   min=6.17   stddev=0.41 (5.4%))
[       OK ] OCL_MeanStdDevFixture_MeanStdDevWithMask.MeanStdDevWithMask/4 (864 ms)
[ RUN      ] OCL_MeanStdDevFixture_MeanStdDevWithMask.MeanStdDevWithMask/5, where GetParam() = (640x480, 32FC4)
[ PERFSTAT ]    (samples=100   mean=7.40   median=7.40   min=6.10   stddev=0.35 (4.7%))
[       OK ] OCL_MeanStdDevFixture_MeanStdDevWithMask.MeanStdDevWithMask/5 (875 ms)
[ RUN      ] OCL_MeanStdDevFixture_MeanStdDevWithMask.MeanStdDevWithMask/6, where GetParam() = (1280x720, 8UC1)
[ PERFSTAT ]    (samples=100   mean=13.15   median=13.23   min=11.81   stddev=0.43 (3.3%))
[       OK ] OCL_MeanStdDevFixture_MeanStdDevWithMask.MeanStdDevWithMask/6 (1368 ms)
[ RUN      ] OCL_MeanStdDevFixture_MeanStdDevWithMask.MeanStdDevWithMask/7, where GetParam() = (1280x720, 32FC1)
[ PERFSTAT ]    (samples=100   mean=13.92   median=13.95   min=12.35   stddev=0.42 (3.0%))
[       OK ] OCL_MeanStdDevFixture_MeanStdDevWithMask.MeanStdDevWithMask/7 (1470 ms)
[ RUN      ] OCL_MeanStdDevFixture_MeanStdDevWithMask.MeanStdDevWithMask/8, where GetParam() = (1280x720, 8UC3)
[ PERFSTAT ]    (samples=11   mean=17.01   median=17.20   min=16.41   stddev=0.50 (2.9%))
[       OK ] OCL_MeanStdDevFixture_MeanStdDevWithMask.MeanStdDevWithMask/8 (248 ms)
[ RUN      ] OCL_MeanStdDevFixture_MeanStdDevWithMask.MeanStdDevWithMask/9, where GetParam() = (1280x720, 32FC3)
[ PERFSTAT ]    (samples=100   mean=8.07   median=8.08   min=5.96   stddev=2.16 (26.8%))
[       OK ] OCL_MeanStdDevFixture_MeanStdDevWithMask.MeanStdDevWithMask/9 (1021 ms)
[ RUN      ] OCL_MeanStdDevFixture_MeanStdDevWithMask.MeanStdDevWithMask/10, where GetParam() = (1280x720, 8UC4)
[ PERFSTAT ]    (samples=100   mean=9.10   median=9.81   min=5.93   stddev=1.41 (15.4%))
[       OK ] OCL_MeanStdDevFixture_MeanStdDevWithMask.MeanStdDevWithMask/10 (999 ms)
[ RUN      ] OCL_MeanStdDevFixture_MeanStdDevWithMask.MeanStdDevWithMask/11, where GetParam() = (1280x720, 32FC4)
[ PERFSTAT ]    (samples=44   mean=16.09   median=16.20   min=14.40   stddev=0.48 (3.0%))
[       OK ] OCL_MeanStdDevFixture_MeanStdDevWithMask.MeanStdDevWithMask/11 (839 ms)
[ RUN      ] OCL_MeanStdDevFixture_MeanStdDevWithMask.MeanStdDevWithMask/12, where GetParam() = (1920x1080, 8UC1)
[ PERFSTAT ]    (samples=10   mean=25.34   median=25.54   min=24.15   stddev=0.60 (2.4%))
[       OK ] OCL_MeanStdDevFixture_MeanStdDevWithMask.MeanStdDevWithMask/12 (328 ms)
[ RUN      ] OCL_MeanStdDevFixture_MeanStdDevWithMask.MeanStdDevWithMask/13, where GetParam() = (1920x1080, 32FC1)
[ PERFSTAT ]    (samples=10   mean=26.38   median=26.68   min=25.11   stddev=0.67 (2.5%))
[       OK ] OCL_MeanStdDevFixture_MeanStdDevWithMask.MeanStdDevWithMask/13 (368 ms)
[ RUN      ] OCL_MeanStdDevFixture_MeanStdDevWithMask.MeanStdDevWithMask/14, where GetParam() = (1920x1080, 8UC3)
[ PERFSTAT ]    (samples=10   mean=34.85   median=34.99   min=33.89   stddev=0.39 (1.1%))
[       OK ] OCL_MeanStdDevFixture_MeanStdDevWithMask.MeanStdDevWithMask/14 (467 ms)
[ RUN      ] OCL_MeanStdDevFixture_MeanStdDevWithMask.MeanStdDevWithMask/15, where GetParam() = (1920x1080, 32FC3)
[ PERFSTAT ]    (samples=10   mean=33.76   median=33.79   min=33.36   stddev=0.29 (0.9%))
[       OK ] OCL_MeanStdDevFixture_MeanStdDevWithMask.MeanStdDevWithMask/15 (552 ms)
[ RUN      ] OCL_MeanStdDevFixture_MeanStdDevWithMask.MeanStdDevWithMask/16, where GetParam() = (1920x1080, 8UC4)
[ PERFSTAT ]    (samples=10   mean=31.98   median=32.01   min=31.26   stddev=0.36 (1.1%))
[       OK ] OCL_MeanStdDevFixture_MeanStdDevWithMask.MeanStdDevWithMask/16 (450 ms)
[ RUN      ] OCL_MeanStdDevFixture_MeanStdDevWithMask.MeanStdDevWithMask/17, where GetParam() = (1920x1080, 32FC4)
[ PERFSTAT ]    (samples=10   mean=32.24   median=32.38   min=31.30   stddev=0.43 (1.3%))
[       OK ] OCL_MeanStdDevFixture_MeanStdDevWithMask.MeanStdDevWithMask/17 (616 ms)
[----------] 18 tests from OCL_MeanStdDevFixture_MeanStdDevWithMask (13654 ms total)

[----------] Global test environment tear-down
[==========] 18 tests from 1 test case ran. (13655 ms total)
[  PASSED  ] 18 tests.
