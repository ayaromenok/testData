Time compensation is 0
CTEST_FULL_OUTPUT
OpenCV version: 4.0.0-dev
OpenCV VCS version: 3.4.3-983-g8b544a8
Build type: RELEASE
WARNING: build value differs from runtime: Release
Compiler: /usr/bin/c++  (ver 5.4.0)
Parallel framework: pthreads
CPU features: N/A
vendor name: ARM
max WG Size by driver: 256
max WG Size by test: 64
OpenCL Platforms: 
    ARM Platform
vendor name: ARM
max WG Size by driver: 256
max WG Size by test: 64
        iGPU: Mali-T860 (OpenCL 1.2 v1.r14p0-01rel0-git(966ed26).fb73b5772aa0adfbd3ad68351d4226c5)
Current OpenCL device: 
    Type = iGPU
    Name = Mali-T860
    Version = OpenCL 1.2 v1.r14p0-01rel0-git(966ed26).fb73b5772aa0adfbd3ad68351d4226c5
    Driver version = 1.2
    Address bits = 64
    Compute units = 4
    Max work group size = 64
    Local memory size = 32 KB
    Max memory allocation size = 493 MB 18 KB
    Double support = Yes
    Host unified memory = Yes
    Device extensions:
        cl_khr_global_int32_base_atomics
        cl_khr_global_int32_extended_atomics
        cl_khr_local_int32_base_atomics
        cl_khr_local_int32_extended_atomics
        cl_khr_byte_addressable_store
        cl_khr_3d_image_writes
        cl_khr_fp64
        cl_khr_int64_base_atomics
        cl_khr_int64_extended_atomics
        cl_khr_fp16
        cl_khr_gl_sharing
        cl_khr_icd
        cl_khr_egl_event
        cl_khr_egl_image
        cl_khr_image2d_from_buffer
        cl_arm_core_id
        cl_arm_printf
        cl_arm_thread_limit_hint
        cl_arm_non_uniform_work_group_size
        cl_arm_import_memory
    Has AMD Blas = No
    Has AMD Fft = No
    Preferred vector width char = 16
    Preferred vector width short = 8
    Preferred vector width int = 4
    Preferred vector width long = 2
    Preferred vector width float = 4
    Preferred vector width double = 2
Note: Google Test filter = *OCL__3vs4_Fixture_Subtract*
[==========] Running 24 tests from 1 test case.
[----------] Global test environment set-up.
[----------] 24 tests from OCL__3vs4_Fixture_Subtract
[ RUN      ] OCL__3vs4_Fixture_Subtract.Subtract/0, where GetParam() = (640x480, 8UC3, Pure)
[ PERFSTAT ]    (samples=100   mean=5.40   median=5.53   min=3.81   stddev=0.53 (9.8%))
[       OK ] OCL__3vs4_Fixture_Subtract.Subtract/0 (615 ms)
[ RUN      ] OCL__3vs4_Fixture_Subtract.Subtract/1, where GetParam() = (640x480, 8UC3, Split)
[ PERFSTAT ]    (samples=56   mean=22.03   median=22.12   min=18.59   stddev=0.66 (3.0%))
[       OK ] OCL__3vs4_Fixture_Subtract.Subtract/1 (1362 ms)
[ RUN      ] OCL__3vs4_Fixture_Subtract.Subtract/2, where GetParam() = (640x480, 8UC3, Convert)
[ PERFSTAT ]    (samples=100   mean=12.04   median=12.26   min=9.23   stddev=0.77 (6.4%))
[       OK ] OCL__3vs4_Fixture_Subtract.Subtract/2 (1414 ms)
[ RUN      ] OCL__3vs4_Fixture_Subtract.Subtract/3, where GetParam() = (640x480, 32FC3, Pure)
[ PERFSTAT ]    (samples=100   mean=6.50   median=6.55   min=5.30   stddev=0.31 (4.7%))
[       OK ] OCL__3vs4_Fixture_Subtract.Subtract/3 (772 ms)
[ RUN      ] OCL__3vs4_Fixture_Subtract.Subtract/4, where GetParam() = (640x480, 32FC3, Split)
[ PERFSTAT ]    (samples=31   mean=25.80   median=25.88   min=21.92   stddev=0.77 (3.0%))
[       OK ] OCL__3vs4_Fixture_Subtract.Subtract/4 (960 ms)
[ RUN      ] OCL__3vs4_Fixture_Subtract.Subtract/5, where GetParam() = (640x480, 32FC3, Convert)
[ PERFSTAT ]    (samples=100   mean=13.22   median=13.00   min=12.68   stddev=0.95 (7.1%))
[       OK ] OCL__3vs4_Fixture_Subtract.Subtract/5 (1574 ms)
[ RUN      ] OCL__3vs4_Fixture_Subtract.Subtract/6, where GetParam() = (1280x720, 8UC3, Pure)
[ PERFSTAT ]    (samples=100   mean=11.52   median=11.78   min=9.74   stddev=0.51 (4.5%))
[       OK ] OCL__3vs4_Fixture_Subtract.Subtract/6 (1244 ms)
[ RUN      ] OCL__3vs4_Fixture_Subtract.Subtract/7, where GetParam() = (1280x720, 8UC3, Split)
[ PERFSTAT ]    (samples=10   mean=51.24   median=51.54   min=47.82   stddev=1.22 (2.4%))
[       OK ] OCL__3vs4_Fixture_Subtract.Subtract/7 (595 ms)
[ RUN      ] OCL__3vs4_Fixture_Subtract.Subtract/8, where GetParam() = (1280x720, 8UC3, Convert)
[ PERFSTAT ]    (samples=34   mean=25.05   median=25.25   min=22.42   stddev=0.75 (3.0%))
[       OK ] OCL__3vs4_Fixture_Subtract.Subtract/8 (932 ms)
[ RUN      ] OCL__3vs4_Fixture_Subtract.Subtract/9, where GetParam() = (1280x720, 32FC3, Pure)
[ PERFSTAT ]    (samples=13   mean=15.30   median=15.41   min=14.10   stddev=0.43 (2.8%))
[       OK ] OCL__3vs4_Fixture_Subtract.Subtract/9 (372 ms)
[ RUN      ] OCL__3vs4_Fixture_Subtract.Subtract/10, where GetParam() = (1280x720, 32FC3, Split)
[ PERFSTAT ]    (samples=100   mean=27.27   median=24.14   min=20.87   stddev=9.85 (36.1%))
[       OK ] OCL__3vs4_Fixture_Subtract.Subtract/10 (3178 ms)
[ RUN      ] OCL__3vs4_Fixture_Subtract.Subtract/11, where GetParam() = (1280x720, 32FC3, Convert)
[ PERFSTAT ]    (samples=100   mean=28.74   median=28.62   min=28.19   stddev=1.28 (4.5%))
[       OK ] OCL__3vs4_Fixture_Subtract.Subtract/11 (3190 ms)
[ RUN      ] OCL__3vs4_Fixture_Subtract.Subtract/12, where GetParam() = (1920x1080, 8UC3, Pure)
[ PERFSTAT ]    (samples=100   mean=14.20   median=15.23   min=11.00   stddev=1.84 (13.0%))
[       OK ] OCL__3vs4_Fixture_Subtract.Subtract/12 (1627 ms)
[ RUN      ] OCL__3vs4_Fixture_Subtract.Subtract/13, where GetParam() = (1920x1080, 8UC3, Split)
[ PERFSTAT ]    (samples=25   mean=47.81   median=47.67   min=47.42   stddev=0.42 (0.9%))
[       OK ] OCL__3vs4_Fixture_Subtract.Subtract/13 (1390 ms)
[ RUN      ] OCL__3vs4_Fixture_Subtract.Subtract/14, where GetParam() = (1920x1080, 8UC3, Convert)
[ PERFSTAT ]    (samples=100   mean=19.94   median=20.43   min=13.25   stddev=1.60 (8.0%))
[       OK ] OCL__3vs4_Fixture_Subtract.Subtract/14 (2180 ms)
[ RUN      ] OCL__3vs4_Fixture_Subtract.Subtract/15, where GetParam() = (1920x1080, 32FC3, Pure)
[ PERFSTAT ]    (samples=100   mean=9.47   median=9.38   min=9.27   stddev=0.32 (3.4%))
[       OK ] OCL__3vs4_Fixture_Subtract.Subtract/15 (1417 ms)
[ RUN      ] OCL__3vs4_Fixture_Subtract.Subtract/16, where GetParam() = (1920x1080, 32FC3, Split)
[ PERFSTAT ]    (samples=38   mean=39.16   median=39.12   min=38.99   stddev=0.13 (0.3%))
[       OK ] OCL__3vs4_Fixture_Subtract.Subtract/16 (2049 ms)
[ RUN      ] OCL__3vs4_Fixture_Subtract.Subtract/17, where GetParam() = (1920x1080, 32FC3, Convert)
[ PERFSTAT ]    (samples=25   mean=28.79   median=28.80   min=28.55   stddev=0.14 (0.5%))
[       OK ] OCL__3vs4_Fixture_Subtract.Subtract/17 (1130 ms)
[ RUN      ] OCL__3vs4_Fixture_Subtract.Subtract/18, where GetParam() = (3840x2160, 8UC3, Pure)
[ PERFSTAT ]    (samples=38   mean=26.05   median=26.10   min=24.63   stddev=0.35 (1.3%))
[       OK ] OCL__3vs4_Fixture_Subtract.Subtract/18 (1593 ms)
[ RUN      ] OCL__3vs4_Fixture_Subtract.Subtract/19, where GetParam() = (3840x2160, 8UC3, Split)
[ PERFSTAT ]    (samples=13   mean=173.10   median=172.97   min=170.61   stddev=1.37 (0.8%))
[       OK ] OCL__3vs4_Fixture_Subtract.Subtract/19 (2886 ms)
[ RUN      ] OCL__3vs4_Fixture_Subtract.Subtract/20, where GetParam() = (3840x2160, 8UC3, Convert)
[ PERFSTAT ]    (samples=25   mean=51.36   median=51.36   min=51.16   stddev=0.11 (0.2%))
[       OK ] OCL__3vs4_Fixture_Subtract.Subtract/20 (1841 ms)
[ RUN      ] OCL__3vs4_Fixture_Subtract.Subtract/21, where GetParam() = (3840x2160, 32FC3, Pure)
[ PERFSTAT ]    (samples=100   mean=36.02   median=32.24   min=32.08   stddev=10.04 (27.9%))
[       OK ] OCL__3vs4_Fixture_Subtract.Subtract/21 (4921 ms)
[ RUN      ] OCL__3vs4_Fixture_Subtract.Subtract/22, where GetParam() = (3840x2160, 32FC3, Split)
[ PERFSTAT ]    (samples=13   mean=138.70   median=138.71   min=138.38   stddev=0.21 (0.2%))
[       OK ] OCL__3vs4_Fixture_Subtract.Subtract/22 (2714 ms)
[ RUN      ] OCL__3vs4_Fixture_Subtract.Subtract/23, where GetParam() = (3840x2160, 32FC3, Convert)
[ PERFSTAT ]    (samples=13   mean=100.56   median=100.51   min=100.40   stddev=0.13 (0.1%))
[       OK ] OCL__3vs4_Fixture_Subtract.Subtract/23 (2102 ms)
[----------] 24 tests from OCL__3vs4_Fixture_Subtract (42062 ms total)

[----------] Global test environment tear-down
[==========] 24 tests from 1 test case ran. (42063 ms total)
[  PASSED  ] 24 tests.
