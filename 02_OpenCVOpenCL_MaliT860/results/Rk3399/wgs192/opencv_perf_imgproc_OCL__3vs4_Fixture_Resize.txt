Time compensation is 0
CTEST_FULL_OUTPUT
OpenCV version: 4.0.0-dev
OpenCV VCS version: 3.4.3-983-g8b544a8
Build type: RELEASE
WARNING: build value differs from runtime: Release
Compiler: /usr/bin/c++  (ver 5.4.0)
Parallel framework: pthreads
CPU features: N/A
vendor name: ARM
max WG Size by driver: 256
max WG Size by test: 192
OpenCL Platforms: 
    ARM Platform
vendor name: ARM
max WG Size by driver: 256
max WG Size by test: 192
        iGPU: Mali-T860 (OpenCL 1.2 v1.r14p0-01rel0-git(966ed26).fb73b5772aa0adfbd3ad68351d4226c5)
Current OpenCL device: 
    Type = iGPU
    Name = Mali-T860
    Version = OpenCL 1.2 v1.r14p0-01rel0-git(966ed26).fb73b5772aa0adfbd3ad68351d4226c5
    Driver version = 1.2
    Address bits = 64
    Compute units = 4
    Max work group size = 192
    Local memory size = 32 KB
    Max memory allocation size = 493 MB 18 KB
    Double support = Yes
    Host unified memory = Yes
    Device extensions:
        cl_khr_global_int32_base_atomics
        cl_khr_global_int32_extended_atomics
        cl_khr_local_int32_base_atomics
        cl_khr_local_int32_extended_atomics
        cl_khr_byte_addressable_store
        cl_khr_3d_image_writes
        cl_khr_fp64
        cl_khr_int64_base_atomics
        cl_khr_int64_extended_atomics
        cl_khr_fp16
        cl_khr_gl_sharing
        cl_khr_icd
        cl_khr_egl_event
        cl_khr_egl_image
        cl_khr_image2d_from_buffer
        cl_arm_core_id
        cl_arm_printf
        cl_arm_thread_limit_hint
        cl_arm_non_uniform_work_group_size
        cl_arm_import_memory
    Has AMD Blas = No
    Has AMD Fft = No
    Preferred vector width char = 16
    Preferred vector width short = 8
    Preferred vector width int = 4
    Preferred vector width long = 2
    Preferred vector width float = 4
    Preferred vector width double = 2
Note: Google Test filter = *OCL__3vs4_Fixture_Resize*
[==========] Running 24 tests from 1 test case.
[----------] Global test environment set-up.
[----------] 24 tests from OCL__3vs4_Fixture_Resize
[ RUN      ] OCL__3vs4_Fixture_Resize.Resize/0, where GetParam() = (640x480, 8UC3, Pure)
[ PERFSTAT ]    (samples=100   mean=8.98   median=9.85   min=3.28   stddev=2.08 (23.1%))
[       OK ] OCL__3vs4_Fixture_Resize.Resize/0 (938 ms)
[ RUN      ] OCL__3vs4_Fixture_Resize.Resize/1, where GetParam() = (640x480, 8UC3, Split)
[ PERFSTAT ]    (samples=100   mean=24.03   median=25.05   min=14.61   stddev=2.90 (12.1%))
[       OK ] OCL__3vs4_Fixture_Resize.Resize/1 (2606 ms)
[ RUN      ] OCL__3vs4_Fixture_Resize.Resize/2, where GetParam() = (640x480, 8UC3, Convert)
[ PERFSTAT ]    (samples=100   mean=18.23   median=17.08   min=12.51   stddev=2.99 (16.4%))
[       OK ] OCL__3vs4_Fixture_Resize.Resize/2 (2018 ms)
[ RUN      ] OCL__3vs4_Fixture_Resize.Resize/3, where GetParam() = (640x480, 32FC3, Pure)
[ PERFSTAT ]    (samples=100   mean=4.65   median=4.79   min=3.33   stddev=0.41 (8.7%))
[       OK ] OCL__3vs4_Fixture_Resize.Resize/3 (600 ms)
[ RUN      ] OCL__3vs4_Fixture_Resize.Resize/4, where GetParam() = (640x480, 32FC3, Split)
[ PERFSTAT ]    (samples=100   mean=18.20   median=18.30   min=14.59   stddev=0.56 (3.1%))
[       OK ] OCL__3vs4_Fixture_Resize.Resize/4 (2005 ms)
[ RUN      ] OCL__3vs4_Fixture_Resize.Resize/5, where GetParam() = (640x480, 32FC3, Convert)
[ PERFSTAT ]    (samples=13   mean=14.23   median=14.18   min=13.82   stddev=0.27 (1.9%))
[       OK ] OCL__3vs4_Fixture_Resize.Resize/5 (371 ms)
[ RUN      ] OCL__3vs4_Fixture_Resize.Resize/6, where GetParam() = (1280x720, 8UC3, Pure)
[ PERFSTAT ]    (samples=100   mean=7.28   median=7.32   min=5.31   stddev=1.04 (14.3%))
[       OK ] OCL__3vs4_Fixture_Resize.Resize/6 (850 ms)
[ RUN      ] OCL__3vs4_Fixture_Resize.Resize/7, where GetParam() = (1280x720, 8UC3, Split)
[ PERFSTAT ]    (samples=100   mean=34.60   median=35.10   min=29.44   stddev=1.72 (5.0%))
[       OK ] OCL__3vs4_Fixture_Resize.Resize/7 (3571 ms)
[ RUN      ] OCL__3vs4_Fixture_Resize.Resize/8, where GetParam() = (1280x720, 8UC3, Convert)
[ PERFSTAT ]    (samples=100   mean=25.28   median=24.53   min=22.56   stddev=2.27 (9.0%))
[       OK ] OCL__3vs4_Fixture_Resize.Resize/8 (2678 ms)
[ RUN      ] OCL__3vs4_Fixture_Resize.Resize/9, where GetParam() = (1280x720, 32FC3, Pure)
[ PERFSTAT ]    (samples=10   mean=9.75   median=9.74   min=9.47   stddev=0.16 (1.6%))
[       OK ] OCL__3vs4_Fixture_Resize.Resize/9 (247 ms)
[ RUN      ] OCL__3vs4_Fixture_Resize.Resize/10, where GetParam() = (1280x720, 32FC3, Split)
[ PERFSTAT ]    (samples=100   mean=19.91   median=17.30   min=17.01   stddev=5.20 (26.1%))
[       OK ] OCL__3vs4_Fixture_Resize.Resize/10 (2319 ms)
[ RUN      ] OCL__3vs4_Fixture_Resize.Resize/11, where GetParam() = (1280x720, 32FC3, Convert)
[ PERFSTAT ]    (samples=100   mean=15.22   median=15.42   min=8.25   stddev=3.82 (25.1%))
[       OK ] OCL__3vs4_Fixture_Resize.Resize/11 (1735 ms)
[ RUN      ] OCL__3vs4_Fixture_Resize.Resize/12, where GetParam() = (1920x1080, 8UC3, Pure)
[ PERFSTAT ]    (samples=100   mean=13.08   median=12.83   min=10.63   stddev=1.39 (10.6%))
[       OK ] OCL__3vs4_Fixture_Resize.Resize/12 (1510 ms)
[ RUN      ] OCL__3vs4_Fixture_Resize.Resize/13, where GetParam() = (1920x1080, 8UC3, Split)
[ PERFSTAT ]    (samples=100   mean=61.54   median=61.43   min=55.31   stddev=4.75 (7.7%))
[       OK ] OCL__3vs4_Fixture_Resize.Resize/13 (6382 ms)
[ RUN      ] OCL__3vs4_Fixture_Resize.Resize/14, where GetParam() = (1920x1080, 8UC3, Convert)
[ PERFSTAT ]    (samples=100   mean=45.14   median=45.11   min=38.78   stddev=2.87 (6.3%))
[       OK ] OCL__3vs4_Fixture_Resize.Resize/14 (4727 ms)
[ RUN      ] OCL__3vs4_Fixture_Resize.Resize/15, where GetParam() = (1920x1080, 32FC3, Pure)
[ PERFSTAT ]    (samples=100   mean=7.19   median=7.34   min=5.62   stddev=0.40 (5.6%))
[       OK ] OCL__3vs4_Fixture_Resize.Resize/15 (1161 ms)
[ RUN      ] OCL__3vs4_Fixture_Resize.Resize/16, where GetParam() = (1920x1080, 32FC3, Split)
[ PERFSTAT ]    (samples=25   mean=25.59   median=25.58   min=25.44   stddev=0.10 (0.4%))
[       OK ] OCL__3vs4_Fixture_Resize.Resize/16 (1088 ms)
[ RUN      ] OCL__3vs4_Fixture_Resize.Resize/17, where GetParam() = (1920x1080, 32FC3, Convert)
[ PERFSTAT ]    (samples=25   mean=19.84   median=19.80   min=19.70   stddev=0.14 (0.7%))
[       OK ] OCL__3vs4_Fixture_Resize.Resize/17 (904 ms)
[ RUN      ] OCL__3vs4_Fixture_Resize.Resize/18, where GetParam() = (3840x2160, 8UC3, Pure)
[ PERFSTAT ]    (samples=50   mean=47.38   median=47.09   min=45.82   stddev=1.41 (3.0%))
[       OK ] OCL__3vs4_Fixture_Resize.Resize/18 (2913 ms)
[ RUN      ] OCL__3vs4_Fixture_Resize.Resize/19, where GetParam() = (3840x2160, 8UC3, Split)
.
.
[ PERFSTAT ]    (samples=100   mean=204.34   median=207.94   min=142.30   stddev=25.77 (12.6%))
[       OK ] OCL__3vs4_Fixture_Resize.Resize/19 (21100 ms)
[ RUN      ] OCL__3vs4_Fixture_Resize.Resize/20, where GetParam() = (3840x2160, 8UC3, Convert)
.
[ PERFSTAT ]    (samples=100   mean=156.36   median=155.71   min=137.18   stddev=14.99 (9.6%))
[       OK ] OCL__3vs4_Fixture_Resize.Resize/20 (16361 ms)
[ RUN      ] OCL__3vs4_Fixture_Resize.Resize/21, where GetParam() = (3840x2160, 32FC3, Pure)
[ PERFSTAT ]    (samples=100   mean=26.30   median=19.25   min=18.63   stddev=15.02 (57.1%))
[       OK ] OCL__3vs4_Fixture_Resize.Resize/21 (4062 ms)
[ RUN      ] OCL__3vs4_Fixture_Resize.Resize/22, where GetParam() = (3840x2160, 32FC3, Split)
[ PERFSTAT ]    (samples=13   mean=82.02   median=82.28   min=79.18   stddev=0.90 (1.1%))
[       OK ] OCL__3vs4_Fixture_Resize.Resize/22 (2009 ms)
[ RUN      ] OCL__3vs4_Fixture_Resize.Resize/23, where GetParam() = (3840x2160, 32FC3, Convert)
[ PERFSTAT ]    (samples=25   mean=64.41   median=64.39   min=64.26   stddev=0.11 (0.2%))
[       OK ] OCL__3vs4_Fixture_Resize.Resize/23 (3065 ms)
[----------] 24 tests from OCL__3vs4_Fixture_Resize (85232 ms total)

[----------] Global test environment tear-down
[==========] 24 tests from 1 test case ran. (85233 ms total)
[  PASSED  ] 24 tests.
