Time compensation is 0
CTEST_FULL_OUTPUT
OpenCV version: 4.0.1-dev
OpenCV VCS version: 4.0.0-beta-625-g6b96512d4
Build type: RELEASE
WARNING: build value differs from runtime: Release
Compiler: /usr/bin/c++  (ver 7.3.0)
Parallel framework: pthreads
CPU features: NEON FP16
OpenCL Platforms: 
    ARM Platform
        iGPU: Mali-T860 (OpenCL 1.2 v1.r14p0-01rel0-git(966ed26).f44c85cb3d2ceb87e8be88e7592755c3)
Current OpenCL device: 
    Type = iGPU
    Name = Mali-T860
    Version = OpenCL 1.2 v1.r14p0-01rel0-git(966ed26).f44c85cb3d2ceb87e8be88e7592755c3
    Driver version = 1.2
    Address bits = 64
    Compute units = 4
    Max work group size = 64
    Local memory size = 32 KB
    Max memory allocation size = 493 MB 15 KB
    Double support = Yes
    Host unified memory = Yes
    Device extensions:
        cl_khr_global_int32_base_atomics
        cl_khr_global_int32_extended_atomics
        cl_khr_local_int32_base_atomics
        cl_khr_local_int32_extended_atomics
        cl_khr_byte_addressable_store
        cl_khr_3d_image_writes
        cl_khr_fp64
        cl_khr_int64_base_atomics
        cl_khr_int64_extended_atomics
        cl_khr_fp16
        cl_khr_gl_sharing
        cl_khr_icd
        cl_khr_egl_event
        cl_khr_egl_image
        cl_khr_image2d_from_buffer
        cl_arm_core_id
        cl_arm_printf
        cl_arm_thread_limit_hint
        cl_arm_non_uniform_work_group_size
        cl_arm_import_memory
    Has AMD Blas = No
    Has AMD Fft = No
    Preferred vector width char = 16
    Preferred vector width short = 8
    Preferred vector width int = 4
    Preferred vector width long = 2
    Preferred vector width float = 4
    Preferred vector width double = 2
Note: Google Test filter = *OCL__3vs4_Fixture_Resize*
[==========] Running 24 tests from 1 test case.
[----------] Global test environment set-up.
[----------] 24 tests from OCL__3vs4_Fixture_Resize
[ RUN      ] OCL__3vs4_Fixture_Resize.Resize/0, where GetParam() = (640x480, 8UC3, Pure)
[ PERFSTAT ]    (samples=100   mean=3.15   median=3.16   min=2.45   stddev=0.54 (17.1%))
[       OK ] OCL__3vs4_Fixture_Resize.Resize/0 (360 ms)
[ RUN      ] OCL__3vs4_Fixture_Resize.Resize/1, where GetParam() = (640x480, 8UC3, Split)
[ PERFSTAT ]    (samples=100   mean=14.27   median=13.98   min=10.93   stddev=1.75 (12.3%))
[       OK ] OCL__3vs4_Fixture_Resize.Resize/1 (1569 ms)
[ RUN      ] OCL__3vs4_Fixture_Resize.Resize/2, where GetParam() = (640x480, 8UC3, Convert)
[ PERFSTAT ]    (samples=100   mean=10.22   median=10.54   min=4.78   stddev=2.84 (27.8%))
[       OK ] OCL__3vs4_Fixture_Resize.Resize/2 (1764 ms)
[ RUN      ] OCL__3vs4_Fixture_Resize.Resize/3, where GetParam() = (640x480, 32FC3, Pure)
[ PERFSTAT ]    (samples=100   mean=2.15   median=1.81   min=1.55   stddev=0.70 (32.4%))
[       OK ] OCL__3vs4_Fixture_Resize.Resize/3 (616 ms)
[ RUN      ] OCL__3vs4_Fixture_Resize.Resize/4, where GetParam() = (640x480, 32FC3, Split)
[ PERFSTAT ]    (samples=100   mean=6.60   median=6.50   min=6.26   stddev=0.27 (4.1%))
[       OK ] OCL__3vs4_Fixture_Resize.Resize/4 (825 ms)
[ RUN      ] OCL__3vs4_Fixture_Resize.Resize/5, where GetParam() = (640x480, 32FC3, Convert)
[ PERFSTAT ]    (samples=100   mean=5.08   median=4.61   min=4.36   stddev=0.94 (18.6%))
[       OK ] OCL__3vs4_Fixture_Resize.Resize/5 (668 ms)
[ RUN      ] OCL__3vs4_Fixture_Resize.Resize/6, where GetParam() = (1280x720, 8UC3, Pure)
[ PERFSTAT ]    (samples=100   mean=5.97   median=5.80   min=4.89   stddev=0.66 (11.1%))
[       OK ] OCL__3vs4_Fixture_Resize.Resize/6 (662 ms)
[ RUN      ] OCL__3vs4_Fixture_Resize.Resize/7, where GetParam() = (1280x720, 8UC3, Split)
[ PERFSTAT ]    (samples=100   mean=19.53   median=19.44   min=14.25   stddev=1.98 (10.1%))
[       OK ] OCL__3vs4_Fixture_Resize.Resize/7 (2056 ms)
[ RUN      ] OCL__3vs4_Fixture_Resize.Resize/8, where GetParam() = (1280x720, 8UC3, Convert)
[ PERFSTAT ]    (samples=100   mean=14.23   median=13.57   min=12.60   stddev=1.38 (9.7%))
[       OK ] OCL__3vs4_Fixture_Resize.Resize/8 (1516 ms)
[ RUN      ] OCL__3vs4_Fixture_Resize.Resize/9, where GetParam() = (1280x720, 32FC3, Pure)
[ PERFSTAT ]    (samples=100   mean=3.99   median=3.48   min=3.21   stddev=1.04 (26.2%))
[       OK ] OCL__3vs4_Fixture_Resize.Resize/9 (537 ms)
[ RUN      ] OCL__3vs4_Fixture_Resize.Resize/10, where GetParam() = (1280x720, 32FC3, Split)
[ PERFSTAT ]    (samples=25   mean=13.21   median=13.19   min=12.97   stddev=0.16 (1.2%))
[       OK ] OCL__3vs4_Fixture_Resize.Resize/10 (440 ms)
[ RUN      ] OCL__3vs4_Fixture_Resize.Resize/11, where GetParam() = (1280x720, 32FC3, Convert)
[ PERFSTAT ]    (samples=10   mean=9.50   median=9.45   min=9.36   stddev=0.14 (1.5%))
[       OK ] OCL__3vs4_Fixture_Resize.Resize/11 (203 ms)
[ RUN      ] OCL__3vs4_Fixture_Resize.Resize/12, where GetParam() = (1920x1080, 8UC3, Pure)
[ PERFSTAT ]    (samples=100   mean=11.13   median=10.65   min=8.51   stddev=1.86 (16.7%))
[       OK ] OCL__3vs4_Fixture_Resize.Resize/12 (1286 ms)
[ RUN      ] OCL__3vs4_Fixture_Resize.Resize/13, where GetParam() = (1920x1080, 8UC3, Split)
[ PERFSTAT ]    (samples=100   mean=32.82   median=32.16   min=29.66   stddev=2.18 (6.6%))
[       OK ] OCL__3vs4_Fixture_Resize.Resize/13 (3495 ms)
[ RUN      ] OCL__3vs4_Fixture_Resize.Resize/14, where GetParam() = (1920x1080, 8UC3, Convert)
[ PERFSTAT ]    (samples=100   mean=27.10   median=26.27   min=23.35   stddev=2.72 (10.0%))
[       OK ] OCL__3vs4_Fixture_Resize.Resize/14 (2856 ms)
[ RUN      ] OCL__3vs4_Fixture_Resize.Resize/15, where GetParam() = (1920x1080, 32FC3, Pure)
[ PERFSTAT ]    (samples=100   mean=6.47   median=6.26   min=6.06   stddev=0.86 (13.3%))
[       OK ] OCL__3vs4_Fixture_Resize.Resize/15 (1907 ms)
[ RUN      ] OCL__3vs4_Fixture_Resize.Resize/16, where GetParam() = (1920x1080, 32FC3, Split)
[ PERFSTAT ]    (samples=13   mean=26.53   median=26.57   min=25.81   stddev=0.26 (1.0%))
[       OK ] OCL__3vs4_Fixture_Resize.Resize/16 (537 ms)
[ RUN      ] OCL__3vs4_Fixture_Resize.Resize/17, where GetParam() = (1920x1080, 32FC3, Convert)
[ PERFSTAT ]    (samples=13   mean=17.98   median=17.97   min=17.80   stddev=0.14 (0.8%))
[       OK ] OCL__3vs4_Fixture_Resize.Resize/17 (528 ms)
[ RUN      ] OCL__3vs4_Fixture_Resize.Resize/18, where GetParam() = (3840x2160, 8UC3, Pure)
[ PERFSTAT ]    (samples=100   mean=39.90   median=39.72   min=35.65   stddev=2.71 (6.8%))
[       OK ] OCL__3vs4_Fixture_Resize.Resize/18 (4386 ms)
[ RUN      ] OCL__3vs4_Fixture_Resize.Resize/19, where GetParam() = (3840x2160, 8UC3, Split)
[ PERFSTAT ]    (samples=13   mean=103.09   median=101.79   min=99.07   stddev=2.91 (2.8%))
[       OK ] OCL__3vs4_Fixture_Resize.Resize/19 (1583 ms)
[ RUN      ] OCL__3vs4_Fixture_Resize.Resize/20, where GetParam() = (3840x2160, 8UC3, Convert)
[ PERFSTAT ]    (samples=100   mean=77.50   median=77.60   min=69.64   stddev=2.96 (3.8%))
[       OK ] OCL__3vs4_Fixture_Resize.Resize/20 (8125 ms)
[ RUN      ] OCL__3vs4_Fixture_Resize.Resize/21, where GetParam() = (3840x2160, 32FC3, Pure)
[ PERFSTAT ]    (samples=25   mean=22.53   median=22.48   min=21.82   stddev=0.60 (2.7%))
[       OK ] OCL__3vs4_Fixture_Resize.Resize/21 (1410 ms)
[ RUN      ] OCL__3vs4_Fixture_Resize.Resize/22, where GetParam() = (3840x2160, 32FC3, Split)
[ PERFSTAT ]    (samples=13   mean=98.03   median=97.69   min=97.42   stddev=0.87 (0.9%))
[       OK ] OCL__3vs4_Fixture_Resize.Resize/22 (2171 ms)
[ RUN      ] OCL__3vs4_Fixture_Resize.Resize/23, where GetParam() = (3840x2160, 32FC3, Convert)
[ PERFSTAT ]    (samples=13   mean=66.50   median=66.32   min=66.20   stddev=0.42 (0.6%))
[       OK ] OCL__3vs4_Fixture_Resize.Resize/23 (1770 ms)
[----------] 24 tests from OCL__3vs4_Fixture_Resize (41271 ms total)

[----------] Global test environment tear-down
[==========] 24 tests from 1 test case ran. (41273 ms total)
[  PASSED  ] 24 tests.
