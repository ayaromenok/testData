Time compensation is 0
CTEST_FULL_OUTPUT
OpenCV version: 4.0.1-dev
OpenCV VCS version: 4.0.0-beta-625-g6b96512d4
Build type: RELEASE
WARNING: build value differs from runtime: Release
Compiler: /usr/bin/c++  (ver 7.3.0)
Parallel framework: pthreads
CPU features: NEON FP16
OpenCL Platforms: 
    ARM Platform
        iGPU: Mali-T860 (OpenCL 1.2 v1.r14p0-01rel0-git(966ed26).f44c85cb3d2ceb87e8be88e7592755c3)
Current OpenCL device: 
    Type = iGPU
    Name = Mali-T860
    Version = OpenCL 1.2 v1.r14p0-01rel0-git(966ed26).f44c85cb3d2ceb87e8be88e7592755c3
    Driver version = 1.2
    Address bits = 64
    Compute units = 4
    Max work group size = 192
    Local memory size = 32 KB
    Max memory allocation size = 493 MB 15 KB
    Double support = Yes
    Host unified memory = Yes
    Device extensions:
        cl_khr_global_int32_base_atomics
        cl_khr_global_int32_extended_atomics
        cl_khr_local_int32_base_atomics
        cl_khr_local_int32_extended_atomics
        cl_khr_byte_addressable_store
        cl_khr_3d_image_writes
        cl_khr_fp64
        cl_khr_int64_base_atomics
        cl_khr_int64_extended_atomics
        cl_khr_fp16
        cl_khr_gl_sharing
        cl_khr_icd
        cl_khr_egl_event
        cl_khr_egl_image
        cl_khr_image2d_from_buffer
        cl_arm_core_id
        cl_arm_printf
        cl_arm_thread_limit_hint
        cl_arm_non_uniform_work_group_size
        cl_arm_import_memory
    Has AMD Blas = No
    Has AMD Fft = No
    Preferred vector width char = 16
    Preferred vector width short = 8
    Preferred vector width int = 4
    Preferred vector width long = 2
    Preferred vector width float = 4
    Preferred vector width double = 2
Note: Google Test filter = *OCL_NormalizeFixture_NormalizeWithMask*
[==========] Running 32 tests from 1 test case.
[----------] Global test environment set-up.
[----------] 32 tests from OCL_NormalizeFixture_NormalizeWithMask
[ RUN      ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/0, where GetParam() = (640x480, 8UC1, CV_MINMAX)
[ PERFSTAT ]    (samples=100   mean=5.49   median=5.39   min=3.83   stddev=0.80 (14.5%))
[       OK ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/0 (672 ms)
[ RUN      ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/1, where GetParam() = (640x480, 8UC1, CV_L2)
[ PERFSTAT ]    (samples=100   mean=7.22   median=6.73   min=5.11   stddev=1.32 (18.2%))
[       OK ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/1 (888 ms)
[ RUN      ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/2, where GetParam() = (640x480, 8UC1, CV_L1)
[ PERFSTAT ]    (samples=100   mean=7.15   median=6.74   min=5.46   stddev=1.23 (17.2%))
[       OK ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/2 (814 ms)
[ RUN      ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/3, where GetParam() = (640x480, 8UC1, CV_C)
[ PERFSTAT ]    (samples=100   mean=7.59   median=7.23   min=5.82   stddev=1.16 (15.3%))
[       OK ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/3 (871 ms)
[ RUN      ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/4, where GetParam() = (640x480, 32FC1, CV_MINMAX)
[ PERFSTAT ]    (samples=100   mean=5.64   median=5.46   min=3.63   stddev=1.33 (23.6%))
[       OK ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/4 (747 ms)
[ RUN      ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/5, where GetParam() = (640x480, 32FC1, CV_L2)
[ PERFSTAT ]    (samples=100   mean=7.79   median=7.47   min=3.88   stddev=1.17 (15.0%))
[       OK ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/5 (1353 ms)
[ RUN      ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/6, where GetParam() = (640x480, 32FC1, CV_L1)
[ PERFSTAT ]    (samples=100   mean=7.60   median=7.20   min=6.46   stddev=1.01 (13.2%))
[       OK ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/6 (865 ms)
[ RUN      ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/7, where GetParam() = (640x480, 32FC1, CV_C)
[ PERFSTAT ]    (samples=100   mean=5.86   median=6.82   min=3.28   stddev=1.80 (30.8%))
[       OK ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/7 (706 ms)
[ RUN      ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/8, where GetParam() = (1280x720, 8UC1, CV_MINMAX)
[ PERFSTAT ]    (samples=100   mean=6.75   median=6.68   min=6.40   stddev=0.24 (3.6%))
[       OK ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/8 (730 ms)
[ RUN      ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/9, where GetParam() = (1280x720, 8UC1, CV_L2)
[ PERFSTAT ]    (samples=13   mean=6.49   median=6.44   min=6.28   stddev=0.18 (2.7%))
[       OK ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/9 (106 ms)
[ RUN      ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/10, where GetParam() = (1280x720, 8UC1, CV_L1)
[ PERFSTAT ]    (samples=100   mean=8.62   median=8.68   min=6.25   stddev=1.10 (12.8%))
[       OK ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/10 (923 ms)
[ RUN      ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/11, where GetParam() = (1280x720, 8UC1, CV_C)
[ PERFSTAT ]    (samples=25   mean=8.76   median=8.71   min=8.41   stddev=0.26 (2.9%))
[       OK ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/11 (245 ms)
[ RUN      ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/12, where GetParam() = (1280x720, 32FC1, CV_MINMAX)
[ PERFSTAT ]    (samples=10   mean=10.10   median=10.07   min=9.78   stddev=0.30 (3.0%))
[       OK ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/12 (150 ms)
[ RUN      ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/13, where GetParam() = (1280x720, 32FC1, CV_L2)
[ PERFSTAT ]    (samples=100   mean=9.02   median=9.88   min=6.85   stddev=1.49 (16.5%))
[       OK ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/13 (979 ms)
[ RUN      ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/14, where GetParam() = (1280x720, 32FC1, CV_L1)
[ PERFSTAT ]    (samples=10   mean=7.08   median=7.03   min=6.98   stddev=0.11 (1.5%))
[       OK ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/14 (114 ms)
[ RUN      ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/15, where GetParam() = (1280x720, 32FC1, CV_C)
[ PERFSTAT ]    (samples=100   mean=7.51   median=7.39   min=6.67   stddev=0.48 (6.5%))
[       OK ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/15 (1448 ms)
[ RUN      ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/16, where GetParam() = (1920x1080, 8UC1, CV_MINMAX)
[ PERFSTAT ]    (samples=100   mean=16.65   median=16.74   min=13.68   stddev=0.90 (5.4%))
[       OK ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/16 (1734 ms)
[ RUN      ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/17, where GetParam() = (1920x1080, 8UC1, CV_L2)
[ PERFSTAT ]    (samples=100   mean=22.54   median=22.60   min=16.44   stddev=0.96 (4.3%))
[       OK ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/17 (2339 ms)
[ RUN      ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/18, where GetParam() = (1920x1080, 8UC1, CV_L1)
[ PERFSTAT ]    (samples=100   mean=22.31   median=22.02   min=21.22   stddev=0.81 (3.6%))
[       OK ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/18 (2315 ms)
[ RUN      ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/19, where GetParam() = (1920x1080, 8UC1, CV_C)
[ PERFSTAT ]    (samples=10   mean=21.71   median=21.84   min=21.13   stddev=0.36 (1.6%))
[       OK ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/19 (263 ms)
[ RUN      ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/20, where GetParam() = (1920x1080, 32FC1, CV_MINMAX)
[ PERFSTAT ]    (samples=63   mean=13.28   median=13.16   min=12.84   stddev=0.40 (3.0%))
[       OK ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/20 (1001 ms)
[ RUN      ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/21, where GetParam() = (1920x1080, 32FC1, CV_L2)
[ PERFSTAT ]    (samples=100   mean=14.64   median=14.76   min=13.01   stddev=0.99 (6.8%))
[       OK ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/21 (1600 ms)
[ RUN      ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/22, where GetParam() = (1920x1080, 32FC1, CV_L1)
[ PERFSTAT ]    (samples=50   mean=13.35   median=13.29   min=13.10   stddev=0.26 (1.9%))
[       OK ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/22 (826 ms)
[ RUN      ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/23, where GetParam() = (1920x1080, 32FC1, CV_C)
[ PERFSTAT ]    (samples=38   mean=16.45   median=16.27   min=15.89   stddev=0.49 (3.0%))
[       OK ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/23 (732 ms)
[ RUN      ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/24, where GetParam() = (3840x2160, 8UC1, CV_MINMAX)
[ PERFSTAT ]    (samples=10   mean=79.87   median=79.52   min=77.77   stddev=1.61 (2.0%))
[       OK ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/24 (948 ms)
[ RUN      ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/25, where GetParam() = (3840x2160, 8UC1, CV_L2)
[ PERFSTAT ]    (samples=10   mean=80.50   median=80.33   min=77.73   stddev=1.97 (2.4%))
[       OK ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/25 (965 ms)
[ RUN      ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/26, where GetParam() = (3840x2160, 8UC1, CV_L1)
[ PERFSTAT ]    (samples=10   mean=80.05   median=79.86   min=78.02   stddev=1.56 (1.9%))
[       OK ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/26 (946 ms)
[ RUN      ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/27, where GetParam() = (3840x2160, 8UC1, CV_C)
[ PERFSTAT ]    (samples=10   mean=79.26   median=79.06   min=76.69   stddev=1.80 (2.3%))
[       OK ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/27 (941 ms)
[ RUN      ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/28, where GetParam() = (3840x2160, 32FC1, CV_MINMAX)
[ PERFSTAT ]    (samples=13   mean=47.10   median=46.90   min=46.60   stddev=0.58 (1.2%))
[       OK ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/28 (1026 ms)
[ RUN      ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/29, where GetParam() = (3840x2160, 32FC1, CV_L2)
[ PERFSTAT ]    (samples=10   mean=46.94   median=46.92   min=46.37   stddev=0.44 (0.9%))
[       OK ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/29 (752 ms)
[ RUN      ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/30, where GetParam() = (3840x2160, 32FC1, CV_L1)
[ PERFSTAT ]    (samples=63   mean=46.68   median=46.48   min=45.84   stddev=1.26 (2.7%))
[       OK ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/30 (3308 ms)
[ RUN      ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/31, where GetParam() = (3840x2160, 32FC1, CV_C)
[ PERFSTAT ]    (samples=38   mean=46.64   median=46.51   min=46.08   stddev=0.51 (1.1%))
[       OK ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/31 (2091 ms)
[----------] 32 tests from OCL_NormalizeFixture_NormalizeWithMask (33402 ms total)

[----------] Global test environment tear-down
[==========] 32 tests from 1 test case ran. (33402 ms total)
[  PASSED  ] 32 tests.
