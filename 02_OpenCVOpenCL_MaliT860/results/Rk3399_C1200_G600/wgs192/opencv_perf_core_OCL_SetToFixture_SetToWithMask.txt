Time compensation is 0
CTEST_FULL_OUTPUT
OpenCV version: 4.0.1-dev
OpenCV VCS version: 4.0.0-beta-625-g6b96512d4
Build type: RELEASE
WARNING: build value differs from runtime: Release
Compiler: /usr/bin/c++  (ver 7.3.0)
Parallel framework: pthreads
CPU features: NEON FP16
OpenCL Platforms: 
    ARM Platform
        iGPU: Mali-T860 (OpenCL 1.2 v1.r14p0-01rel0-git(966ed26).f44c85cb3d2ceb87e8be88e7592755c3)
Current OpenCL device: 
    Type = iGPU
    Name = Mali-T860
    Version = OpenCL 1.2 v1.r14p0-01rel0-git(966ed26).f44c85cb3d2ceb87e8be88e7592755c3
    Driver version = 1.2
    Address bits = 64
    Compute units = 4
    Max work group size = 192
    Local memory size = 32 KB
    Max memory allocation size = 493 MB 15 KB
    Double support = Yes
    Host unified memory = Yes
    Device extensions:
        cl_khr_global_int32_base_atomics
        cl_khr_global_int32_extended_atomics
        cl_khr_local_int32_base_atomics
        cl_khr_local_int32_extended_atomics
        cl_khr_byte_addressable_store
        cl_khr_3d_image_writes
        cl_khr_fp64
        cl_khr_int64_base_atomics
        cl_khr_int64_extended_atomics
        cl_khr_fp16
        cl_khr_gl_sharing
        cl_khr_icd
        cl_khr_egl_event
        cl_khr_egl_image
        cl_khr_image2d_from_buffer
        cl_arm_core_id
        cl_arm_printf
        cl_arm_thread_limit_hint
        cl_arm_non_uniform_work_group_size
        cl_arm_import_memory
    Has AMD Blas = No
    Has AMD Fft = No
    Preferred vector width char = 16
    Preferred vector width short = 8
    Preferred vector width int = 4
    Preferred vector width long = 2
    Preferred vector width float = 4
    Preferred vector width double = 2
Note: Google Test filter = *OCL_SetToFixture_SetToWithMask*
[==========] Running 16 tests from 1 test case.
[----------] Global test environment set-up.
[----------] 16 tests from OCL_SetToFixture_SetToWithMask
[ RUN      ] OCL_SetToFixture_SetToWithMask.SetToWithMask/0, where GetParam() = (640x480, 8UC1)
[ PERFSTAT ]    (samples=100   mean=2.23   median=2.37   min=1.55   stddev=0.31 (13.8%))
[       OK ] OCL_SetToFixture_SetToWithMask.SetToWithMask/0 (307 ms)
[ RUN      ] OCL_SetToFixture_SetToWithMask.SetToWithMask/1, where GetParam() = (640x480, 32FC1)
[ PERFSTAT ]    (samples=100   mean=2.60   median=2.57   min=2.38   stddev=0.11 (4.3%))
[       OK ] OCL_SetToFixture_SetToWithMask.SetToWithMask/1 (329 ms)
[ RUN      ] OCL_SetToFixture_SetToWithMask.SetToWithMask/2, where GetParam() = (640x480, 8UC4)
[ PERFSTAT ]    (samples=100   mean=2.71   median=2.66   min=2.51   stddev=0.15 (5.6%))
[       OK ] OCL_SetToFixture_SetToWithMask.SetToWithMask/2 (338 ms)
[ RUN      ] OCL_SetToFixture_SetToWithMask.SetToWithMask/3, where GetParam() = (640x480, 32FC4)
[ PERFSTAT ]    (samples=100   mean=4.17   median=4.49   min=1.65   stddev=0.94 (22.5%))
[       OK ] OCL_SetToFixture_SetToWithMask.SetToWithMask/3 (1094 ms)
[ RUN      ] OCL_SetToFixture_SetToWithMask.SetToWithMask/4, where GetParam() = (1280x720, 8UC1)
[ PERFSTAT ]    (samples=100   mean=4.03   median=4.35   min=2.64   stddev=0.71 (17.6%))
[       OK ] OCL_SetToFixture_SetToWithMask.SetToWithMask/4 (457 ms)
[ RUN      ] OCL_SetToFixture_SetToWithMask.SetToWithMask/5, where GetParam() = (1280x720, 32FC1)
[ PERFSTAT ]    (samples=13   mean=5.69   median=5.72   min=5.38   stddev=0.11 (1.9%))
[       OK ] OCL_SetToFixture_SetToWithMask.SetToWithMask/5 (130 ms)
[ RUN      ] OCL_SetToFixture_SetToWithMask.SetToWithMask/6, where GetParam() = (1280x720, 8UC4)
[ PERFSTAT ]    (samples=100   mean=3.86   median=3.18   min=2.82   stddev=1.09 (28.2%))
[       OK ] OCL_SetToFixture_SetToWithMask.SetToWithMask/6 (468 ms)
[ RUN      ] OCL_SetToFixture_SetToWithMask.SetToWithMask/7, where GetParam() = (1280x720, 32FC4)
[ PERFSTAT ]    (samples=25   mean=3.61   median=3.60   min=3.46   stddev=0.10 (2.8%))
[       OK ] OCL_SetToFixture_SetToWithMask.SetToWithMask/7 (227 ms)
[ RUN      ] OCL_SetToFixture_SetToWithMask.SetToWithMask/8, where GetParam() = (1920x1080, 8UC1)
[ PERFSTAT ]    (samples=10   mean=5.24   median=5.24   min=5.10   stddev=0.14 (2.6%))
[       OK ] OCL_SetToFixture_SetToWithMask.SetToWithMask/8 (101 ms)
[ RUN      ] OCL_SetToFixture_SetToWithMask.SetToWithMask/9, where GetParam() = (1920x1080, 32FC1)
[ PERFSTAT ]    (samples=10   mean=5.70   median=5.72   min=5.46   stddev=0.17 (2.9%))
[       OK ] OCL_SetToFixture_SetToWithMask.SetToWithMask/9 (157 ms)
[ RUN      ] OCL_SetToFixture_SetToWithMask.SetToWithMask/10, where GetParam() = (1920x1080, 8UC4)
[ PERFSTAT ]    (samples=100   mean=10.16   median=10.51   min=6.44   stddev=1.18 (11.6%))
[       OK ] OCL_SetToFixture_SetToWithMask.SetToWithMask/10 (2358 ms)
[ RUN      ] OCL_SetToFixture_SetToWithMask.SetToWithMask/11, where GetParam() = (1920x1080, 32FC4)
[ PERFSTAT ]    (samples=13   mean=23.25   median=23.04   min=22.47   stddev=0.68 (2.9%))
[       OK ] OCL_SetToFixture_SetToWithMask.SetToWithMask/11 (651 ms)
[ RUN      ] OCL_SetToFixture_SetToWithMask.SetToWithMask/12, where GetParam() = (3840x2160, 8UC1)
[ PERFSTAT ]    (samples=25   mean=29.50   median=29.25   min=28.65   stddev=0.76 (2.6%))
[       OK ] OCL_SetToFixture_SetToWithMask.SetToWithMask/12 (922 ms)
[ RUN      ] OCL_SetToFixture_SetToWithMask.SetToWithMask/13, where GetParam() = (3840x2160, 32FC1)
[ PERFSTAT ]    (samples=13   mean=37.64   median=37.25   min=36.76   stddev=0.74 (2.0%))
[       OK ] OCL_SetToFixture_SetToWithMask.SetToWithMask/13 (824 ms)
[ RUN      ] OCL_SetToFixture_SetToWithMask.SetToWithMask/14, where GetParam() = (3840x2160, 8UC4)
[ PERFSTAT ]    (samples=13   mean=19.91   median=19.90   min=19.66   stddev=0.18 (0.9%))
[       OK ] OCL_SetToFixture_SetToWithMask.SetToWithMask/14 (596 ms)
[ RUN      ] OCL_SetToFixture_SetToWithMask.SetToWithMask/15, where GetParam() = (3840x2160, 32FC4)
[ PERFSTAT ]    (samples=38   mean=25.86   median=25.81   min=25.59   stddev=0.19 (0.7%))
[       OK ] OCL_SetToFixture_SetToWithMask.SetToWithMask/15 (2165 ms)
[----------] 16 tests from OCL_SetToFixture_SetToWithMask (11128 ms total)

[----------] Global test environment tear-down
[==========] 16 tests from 1 test case ran. (11128 ms total)
[  PASSED  ] 16 tests.
