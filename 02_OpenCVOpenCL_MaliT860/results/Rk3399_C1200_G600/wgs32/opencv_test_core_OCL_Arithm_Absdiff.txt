CTEST_FULL_OUTPUT
OpenCV version: 4.0.1-dev
OpenCV VCS version: 4.0.0-beta-625-g6b96512d4
Build type: RELEASE
WARNING: build value differs from runtime: Release
Compiler: /usr/bin/c++  (ver 7.3.0)
Parallel framework: pthreads
CPU features: NEON FP16
OpenCL Platforms: 
    ARM Platform
        iGPU: Mali-T860 (OpenCL 1.2 v1.r14p0-01rel0-git(966ed26).f44c85cb3d2ceb87e8be88e7592755c3)
Current OpenCL device: 
    Type = iGPU
    Name = Mali-T860
    Version = OpenCL 1.2 v1.r14p0-01rel0-git(966ed26).f44c85cb3d2ceb87e8be88e7592755c3
    Driver version = 1.2
    Address bits = 64
    Compute units = 4
    Max work group size = 32
    Local memory size = 32 KB
    Max memory allocation size = 493 MB 15 KB
    Double support = Yes
    Host unified memory = Yes
    Device extensions:
        cl_khr_global_int32_base_atomics
        cl_khr_global_int32_extended_atomics
        cl_khr_local_int32_base_atomics
        cl_khr_local_int32_extended_atomics
        cl_khr_byte_addressable_store
        cl_khr_3d_image_writes
        cl_khr_fp64
        cl_khr_int64_base_atomics
        cl_khr_int64_extended_atomics
        cl_khr_fp16
        cl_khr_gl_sharing
        cl_khr_icd
        cl_khr_egl_event
        cl_khr_egl_image
        cl_khr_image2d_from_buffer
        cl_arm_core_id
        cl_arm_printf
        cl_arm_thread_limit_hint
        cl_arm_non_uniform_work_group_size
        cl_arm_import_memory
    Has AMD Blas = No
    Has AMD Fft = No
    Preferred vector width char = 16
    Preferred vector width short = 8
    Preferred vector width int = 4
    Preferred vector width long = 2
    Preferred vector width float = 4
    Preferred vector width double = 2
Note: Google Test filter = *OCL_Arithm/Absdiff*
[==========] Running 112 tests from 1 test case.
[----------] Global test environment set-up.
[----------] 112 tests from OCL_Arithm/Absdiff
[ RUN      ] OCL_Arithm/Absdiff.Mat/0, where GetParam() = (CV_8U, Channels(1), false)
[       OK ] OCL_Arithm/Absdiff.Mat/0 (79 ms)
[ RUN      ] OCL_Arithm/Absdiff.Mat/1, where GetParam() = (CV_8U, Channels(1), true)
[       OK ] OCL_Arithm/Absdiff.Mat/1 (8 ms)
[ RUN      ] OCL_Arithm/Absdiff.Mat/2, where GetParam() = (CV_8U, Channels(2), false)
[       OK ] OCL_Arithm/Absdiff.Mat/2 (24 ms)
[ RUN      ] OCL_Arithm/Absdiff.Mat/3, where GetParam() = (CV_8U, Channels(2), true)
[       OK ] OCL_Arithm/Absdiff.Mat/3 (4 ms)
[ RUN      ] OCL_Arithm/Absdiff.Mat/4, where GetParam() = (CV_8U, Channels(3), false)
[       OK ] OCL_Arithm/Absdiff.Mat/4 (2 ms)
[ RUN      ] OCL_Arithm/Absdiff.Mat/5, where GetParam() = (CV_8U, Channels(3), true)
[       OK ] OCL_Arithm/Absdiff.Mat/5 (4 ms)
[ RUN      ] OCL_Arithm/Absdiff.Mat/6, where GetParam() = (CV_8U, Channels(4), false)
[       OK ] OCL_Arithm/Absdiff.Mat/6 (23 ms)
[ RUN      ] OCL_Arithm/Absdiff.Mat/7, where GetParam() = (CV_8U, Channels(4), true)
[       OK ] OCL_Arithm/Absdiff.Mat/7 (5 ms)
[ RUN      ] OCL_Arithm/Absdiff.Mat/8, where GetParam() = (CV_8S, Channels(1), false)
[       OK ] OCL_Arithm/Absdiff.Mat/8 (26 ms)
[ RUN      ] OCL_Arithm/Absdiff.Mat/9, where GetParam() = (CV_8S, Channels(1), true)
[       OK ] OCL_Arithm/Absdiff.Mat/9 (5 ms)
[ RUN      ] OCL_Arithm/Absdiff.Mat/10, where GetParam() = (CV_8S, Channels(2), false)
[       OK ] OCL_Arithm/Absdiff.Mat/10 (28 ms)
[ RUN      ] OCL_Arithm/Absdiff.Mat/11, where GetParam() = (CV_8S, Channels(2), true)
[       OK ] OCL_Arithm/Absdiff.Mat/11 (5 ms)
[ RUN      ] OCL_Arithm/Absdiff.Mat/12, where GetParam() = (CV_8S, Channels(3), false)
[       OK ] OCL_Arithm/Absdiff.Mat/12 (4 ms)
[ RUN      ] OCL_Arithm/Absdiff.Mat/13, where GetParam() = (CV_8S, Channels(3), true)
[       OK ] OCL_Arithm/Absdiff.Mat/13 (8 ms)
[ RUN      ] OCL_Arithm/Absdiff.Mat/14, where GetParam() = (CV_8S, Channels(4), false)
[       OK ] OCL_Arithm/Absdiff.Mat/14 (24 ms)
[ RUN      ] OCL_Arithm/Absdiff.Mat/15, where GetParam() = (CV_8S, Channels(4), true)
[       OK ] OCL_Arithm/Absdiff.Mat/15 (10 ms)
[ RUN      ] OCL_Arithm/Absdiff.Mat/16, where GetParam() = (CV_16U, Channels(1), false)
[       OK ] OCL_Arithm/Absdiff.Mat/16 (25 ms)
[ RUN      ] OCL_Arithm/Absdiff.Mat/17, where GetParam() = (CV_16U, Channels(1), true)
[       OK ] OCL_Arithm/Absdiff.Mat/17 (7 ms)
[ RUN      ] OCL_Arithm/Absdiff.Mat/18, where GetParam() = (CV_16U, Channels(2), false)
[       OK ] OCL_Arithm/Absdiff.Mat/18 (24 ms)
[ RUN      ] OCL_Arithm/Absdiff.Mat/19, where GetParam() = (CV_16U, Channels(2), true)
[       OK ] OCL_Arithm/Absdiff.Mat/19 (18 ms)
[ RUN      ] OCL_Arithm/Absdiff.Mat/20, where GetParam() = (CV_16U, Channels(3), false)
[       OK ] OCL_Arithm/Absdiff.Mat/20 (4 ms)
[ RUN      ] OCL_Arithm/Absdiff.Mat/21, where GetParam() = (CV_16U, Channels(3), true)
[       OK ] OCL_Arithm/Absdiff.Mat/21 (6 ms)
[ RUN      ] OCL_Arithm/Absdiff.Mat/22, where GetParam() = (CV_16U, Channels(4), false)
[       OK ] OCL_Arithm/Absdiff.Mat/22 (31 ms)
[ RUN      ] OCL_Arithm/Absdiff.Mat/23, where GetParam() = (CV_16U, Channels(4), true)
[       OK ] OCL_Arithm/Absdiff.Mat/23 (7 ms)
[ RUN      ] OCL_Arithm/Absdiff.Mat/24, where GetParam() = (CV_16S, Channels(1), false)
[       OK ] OCL_Arithm/Absdiff.Mat/24 (26 ms)
[ RUN      ] OCL_Arithm/Absdiff.Mat/25, where GetParam() = (CV_16S, Channels(1), true)
[       OK ] OCL_Arithm/Absdiff.Mat/25 (7 ms)
[ RUN      ] OCL_Arithm/Absdiff.Mat/26, where GetParam() = (CV_16S, Channels(2), false)
[       OK ] OCL_Arithm/Absdiff.Mat/26 (23 ms)
[ RUN      ] OCL_Arithm/Absdiff.Mat/27, where GetParam() = (CV_16S, Channels(2), true)
[       OK ] OCL_Arithm/Absdiff.Mat/27 (15 ms)
[ RUN      ] OCL_Arithm/Absdiff.Mat/28, where GetParam() = (CV_16S, Channels(3), false)
[       OK ] OCL_Arithm/Absdiff.Mat/28 (7 ms)
[ RUN      ] OCL_Arithm/Absdiff.Mat/29, where GetParam() = (CV_16S, Channels(3), true)
[       OK ] OCL_Arithm/Absdiff.Mat/29 (15 ms)
[ RUN      ] OCL_Arithm/Absdiff.Mat/30, where GetParam() = (CV_16S, Channels(4), false)
[       OK ] OCL_Arithm/Absdiff.Mat/30 (29 ms)
[ RUN      ] OCL_Arithm/Absdiff.Mat/31, where GetParam() = (CV_16S, Channels(4), true)
[       OK ] OCL_Arithm/Absdiff.Mat/31 (6 ms)
[ RUN      ] OCL_Arithm/Absdiff.Mat/32, where GetParam() = (CV_32S, Channels(1), false)
[       OK ] OCL_Arithm/Absdiff.Mat/32 (24 ms)
[ RUN      ] OCL_Arithm/Absdiff.Mat/33, where GetParam() = (CV_32S, Channels(1), true)
[       OK ] OCL_Arithm/Absdiff.Mat/33 (5 ms)
[ RUN      ] OCL_Arithm/Absdiff.Mat/34, where GetParam() = (CV_32S, Channels(2), false)
[       OK ] OCL_Arithm/Absdiff.Mat/34 (23 ms)
[ RUN      ] OCL_Arithm/Absdiff.Mat/35, where GetParam() = (CV_32S, Channels(2), true)
[       OK ] OCL_Arithm/Absdiff.Mat/35 (24 ms)
[ RUN      ] OCL_Arithm/Absdiff.Mat/36, where GetParam() = (CV_32S, Channels(3), false)
[       OK ] OCL_Arithm/Absdiff.Mat/36 (4 ms)
[ RUN      ] OCL_Arithm/Absdiff.Mat/37, where GetParam() = (CV_32S, Channels(3), true)
[       OK ] OCL_Arithm/Absdiff.Mat/37 (6 ms)
[ RUN      ] OCL_Arithm/Absdiff.Mat/38, where GetParam() = (CV_32S, Channels(4), false)
[       OK ] OCL_Arithm/Absdiff.Mat/38 (25 ms)
[ RUN      ] OCL_Arithm/Absdiff.Mat/39, where GetParam() = (CV_32S, Channels(4), true)
[       OK ] OCL_Arithm/Absdiff.Mat/39 (6 ms)
[ RUN      ] OCL_Arithm/Absdiff.Mat/40, where GetParam() = (CV_32F, Channels(1), false)
[       OK ] OCL_Arithm/Absdiff.Mat/40 (24 ms)
[ RUN      ] OCL_Arithm/Absdiff.Mat/41, where GetParam() = (CV_32F, Channels(1), true)
[       OK ] OCL_Arithm/Absdiff.Mat/41 (3 ms)
[ RUN      ] OCL_Arithm/Absdiff.Mat/42, where GetParam() = (CV_32F, Channels(2), false)
[       OK ] OCL_Arithm/Absdiff.Mat/42 (25 ms)
[ RUN      ] OCL_Arithm/Absdiff.Mat/43, where GetParam() = (CV_32F, Channels(2), true)
[       OK ] OCL_Arithm/Absdiff.Mat/43 (10 ms)
[ RUN      ] OCL_Arithm/Absdiff.Mat/44, where GetParam() = (CV_32F, Channels(3), false)
[       OK ] OCL_Arithm/Absdiff.Mat/44 (8 ms)
[ RUN      ] OCL_Arithm/Absdiff.Mat/45, where GetParam() = (CV_32F, Channels(3), true)
[       OK ] OCL_Arithm/Absdiff.Mat/45 (8 ms)
[ RUN      ] OCL_Arithm/Absdiff.Mat/46, where GetParam() = (CV_32F, Channels(4), false)
[       OK ] OCL_Arithm/Absdiff.Mat/46 (22 ms)
[ RUN      ] OCL_Arithm/Absdiff.Mat/47, where GetParam() = (CV_32F, Channels(4), true)
[       OK ] OCL_Arithm/Absdiff.Mat/47 (5 ms)
[ RUN      ] OCL_Arithm/Absdiff.Mat/48, where GetParam() = (CV_64F, Channels(1), false)
[       OK ] OCL_Arithm/Absdiff.Mat/48 (24 ms)
[ RUN      ] OCL_Arithm/Absdiff.Mat/49, where GetParam() = (CV_64F, Channels(1), true)
[       OK ] OCL_Arithm/Absdiff.Mat/49 (8 ms)
[ RUN      ] OCL_Arithm/Absdiff.Mat/50, where GetParam() = (CV_64F, Channels(2), false)
[       OK ] OCL_Arithm/Absdiff.Mat/50 (24 ms)
[ RUN      ] OCL_Arithm/Absdiff.Mat/51, where GetParam() = (CV_64F, Channels(2), true)
[       OK ] OCL_Arithm/Absdiff.Mat/51 (10 ms)
[ RUN      ] OCL_Arithm/Absdiff.Mat/52, where GetParam() = (CV_64F, Channels(3), false)
[       OK ] OCL_Arithm/Absdiff.Mat/52 (5 ms)
[ RUN      ] OCL_Arithm/Absdiff.Mat/53, where GetParam() = (CV_64F, Channels(3), true)
[       OK ] OCL_Arithm/Absdiff.Mat/53 (6 ms)
[ RUN      ] OCL_Arithm/Absdiff.Mat/54, where GetParam() = (CV_64F, Channels(4), false)
[       OK ] OCL_Arithm/Absdiff.Mat/54 (3 ms)
[ RUN      ] OCL_Arithm/Absdiff.Mat/55, where GetParam() = (CV_64F, Channels(4), true)
[       OK ] OCL_Arithm/Absdiff.Mat/55 (8 ms)
[ RUN      ] OCL_Arithm/Absdiff.Scalar/0, where GetParam() = (CV_8U, Channels(1), false)
[       OK ] OCL_Arithm/Absdiff.Scalar/0 (22 ms)
[ RUN      ] OCL_Arithm/Absdiff.Scalar/1, where GetParam() = (CV_8U, Channels(1), true)
[       OK ] OCL_Arithm/Absdiff.Scalar/1 (5 ms)
[ RUN      ] OCL_Arithm/Absdiff.Scalar/2, where GetParam() = (CV_8U, Channels(2), false)
[       OK ] OCL_Arithm/Absdiff.Scalar/2 (21 ms)
[ RUN      ] OCL_Arithm/Absdiff.Scalar/3, where GetParam() = (CV_8U, Channels(2), true)
[       OK ] OCL_Arithm/Absdiff.Scalar/3 (5 ms)
[ RUN      ] OCL_Arithm/Absdiff.Scalar/4, where GetParam() = (CV_8U, Channels(3), false)
[       OK ] OCL_Arithm/Absdiff.Scalar/4 (23 ms)
[ RUN      ] OCL_Arithm/Absdiff.Scalar/5, where GetParam() = (CV_8U, Channels(3), true)
[       OK ] OCL_Arithm/Absdiff.Scalar/5 (5 ms)
[ RUN      ] OCL_Arithm/Absdiff.Scalar/6, where GetParam() = (CV_8U, Channels(4), false)
[       OK ] OCL_Arithm/Absdiff.Scalar/6 (23 ms)
[ RUN      ] OCL_Arithm/Absdiff.Scalar/7, where GetParam() = (CV_8U, Channels(4), true)
[       OK ] OCL_Arithm/Absdiff.Scalar/7 (13 ms)
[ RUN      ] OCL_Arithm/Absdiff.Scalar/8, where GetParam() = (CV_8S, Channels(1), false)
[       OK ] OCL_Arithm/Absdiff.Scalar/8 (21 ms)
[ RUN      ] OCL_Arithm/Absdiff.Scalar/9, where GetParam() = (CV_8S, Channels(1), true)
[       OK ] OCL_Arithm/Absdiff.Scalar/9 (5 ms)
[ RUN      ] OCL_Arithm/Absdiff.Scalar/10, where GetParam() = (CV_8S, Channels(2), false)
[       OK ] OCL_Arithm/Absdiff.Scalar/10 (25 ms)
[ RUN      ] OCL_Arithm/Absdiff.Scalar/11, where GetParam() = (CV_8S, Channels(2), true)
[       OK ] OCL_Arithm/Absdiff.Scalar/11 (12 ms)
[ RUN      ] OCL_Arithm/Absdiff.Scalar/12, where GetParam() = (CV_8S, Channels(3), false)
[       OK ] OCL_Arithm/Absdiff.Scalar/12 (23 ms)
[ RUN      ] OCL_Arithm/Absdiff.Scalar/13, where GetParam() = (CV_8S, Channels(3), true)
[       OK ] OCL_Arithm/Absdiff.Scalar/13 (9 ms)
[ RUN      ] OCL_Arithm/Absdiff.Scalar/14, where GetParam() = (CV_8S, Channels(4), false)
[       OK ] OCL_Arithm/Absdiff.Scalar/14 (24 ms)
[ RUN      ] OCL_Arithm/Absdiff.Scalar/15, where GetParam() = (CV_8S, Channels(4), true)
[       OK ] OCL_Arithm/Absdiff.Scalar/15 (7 ms)
[ RUN      ] OCL_Arithm/Absdiff.Scalar/16, where GetParam() = (CV_16U, Channels(1), false)
[       OK ] OCL_Arithm/Absdiff.Scalar/16 (21 ms)
[ RUN      ] OCL_Arithm/Absdiff.Scalar/17, where GetParam() = (CV_16U, Channels(1), true)
[       OK ] OCL_Arithm/Absdiff.Scalar/17 (9 ms)
[ RUN      ] OCL_Arithm/Absdiff.Scalar/18, where GetParam() = (CV_16U, Channels(2), false)
[       OK ] OCL_Arithm/Absdiff.Scalar/18 (25 ms)
[ RUN      ] OCL_Arithm/Absdiff.Scalar/19, where GetParam() = (CV_16U, Channels(2), true)
[       OK ] OCL_Arithm/Absdiff.Scalar/19 (5 ms)
[ RUN      ] OCL_Arithm/Absdiff.Scalar/20, where GetParam() = (CV_16U, Channels(3), false)
[       OK ] OCL_Arithm/Absdiff.Scalar/20 (23 ms)
[ RUN      ] OCL_Arithm/Absdiff.Scalar/21, where GetParam() = (CV_16U, Channels(3), true)
[       OK ] OCL_Arithm/Absdiff.Scalar/21 (5 ms)
[ RUN      ] OCL_Arithm/Absdiff.Scalar/22, where GetParam() = (CV_16U, Channels(4), false)
[       OK ] OCL_Arithm/Absdiff.Scalar/22 (23 ms)
[ RUN      ] OCL_Arithm/Absdiff.Scalar/23, where GetParam() = (CV_16U, Channels(4), true)
[       OK ] OCL_Arithm/Absdiff.Scalar/23 (8 ms)
[ RUN      ] OCL_Arithm/Absdiff.Scalar/24, where GetParam() = (CV_16S, Channels(1), false)
[       OK ] OCL_Arithm/Absdiff.Scalar/24 (25 ms)
[ RUN      ] OCL_Arithm/Absdiff.Scalar/25, where GetParam() = (CV_16S, Channels(1), true)
[       OK ] OCL_Arithm/Absdiff.Scalar/25 (9 ms)
[ RUN      ] OCL_Arithm/Absdiff.Scalar/26, where GetParam() = (CV_16S, Channels(2), false)
[       OK ] OCL_Arithm/Absdiff.Scalar/26 (21 ms)
[ RUN      ] OCL_Arithm/Absdiff.Scalar/27, where GetParam() = (CV_16S, Channels(2), true)
[       OK ] OCL_Arithm/Absdiff.Scalar/27 (11 ms)
[ RUN      ] OCL_Arithm/Absdiff.Scalar/28, where GetParam() = (CV_16S, Channels(3), false)
[       OK ] OCL_Arithm/Absdiff.Scalar/28 (28 ms)
[ RUN      ] OCL_Arithm/Absdiff.Scalar/29, where GetParam() = (CV_16S, Channels(3), true)
[       OK ] OCL_Arithm/Absdiff.Scalar/29 (5 ms)
[ RUN      ] OCL_Arithm/Absdiff.Scalar/30, where GetParam() = (CV_16S, Channels(4), false)
[       OK ] OCL_Arithm/Absdiff.Scalar/30 (22 ms)
[ RUN      ] OCL_Arithm/Absdiff.Scalar/31, where GetParam() = (CV_16S, Channels(4), true)
[       OK ] OCL_Arithm/Absdiff.Scalar/31 (17 ms)
[ RUN      ] OCL_Arithm/Absdiff.Scalar/32, where GetParam() = (CV_32S, Channels(1), false)
[       OK ] OCL_Arithm/Absdiff.Scalar/32 (25 ms)
[ RUN      ] OCL_Arithm/Absdiff.Scalar/33, where GetParam() = (CV_32S, Channels(1), true)
[       OK ] OCL_Arithm/Absdiff.Scalar/33 (6 ms)
[ RUN      ] OCL_Arithm/Absdiff.Scalar/34, where GetParam() = (CV_32S, Channels(2), false)
[       OK ] OCL_Arithm/Absdiff.Scalar/34 (21 ms)
[ RUN      ] OCL_Arithm/Absdiff.Scalar/35, where GetParam() = (CV_32S, Channels(2), true)
[       OK ] OCL_Arithm/Absdiff.Scalar/35 (5 ms)
[ RUN      ] OCL_Arithm/Absdiff.Scalar/36, where GetParam() = (CV_32S, Channels(3), false)
[       OK ] OCL_Arithm/Absdiff.Scalar/36 (23 ms)
[ RUN      ] OCL_Arithm/Absdiff.Scalar/37, where GetParam() = (CV_32S, Channels(3), true)
[       OK ] OCL_Arithm/Absdiff.Scalar/37 (19 ms)
[ RUN      ] OCL_Arithm/Absdiff.Scalar/38, where GetParam() = (CV_32S, Channels(4), false)
[       OK ] OCL_Arithm/Absdiff.Scalar/38 (26 ms)
[ RUN      ] OCL_Arithm/Absdiff.Scalar/39, where GetParam() = (CV_32S, Channels(4), true)
[       OK ] OCL_Arithm/Absdiff.Scalar/39 (7 ms)
[ RUN      ] OCL_Arithm/Absdiff.Scalar/40, where GetParam() = (CV_32F, Channels(1), false)
[       OK ] OCL_Arithm/Absdiff.Scalar/40 (24 ms)
[ RUN      ] OCL_Arithm/Absdiff.Scalar/41, where GetParam() = (CV_32F, Channels(1), true)
[       OK ] OCL_Arithm/Absdiff.Scalar/41 (6 ms)
[ RUN      ] OCL_Arithm/Absdiff.Scalar/42, where GetParam() = (CV_32F, Channels(2), false)
[       OK ] OCL_Arithm/Absdiff.Scalar/42 (31 ms)
[ RUN      ] OCL_Arithm/Absdiff.Scalar/43, where GetParam() = (CV_32F, Channels(2), true)
[       OK ] OCL_Arithm/Absdiff.Scalar/43 (7 ms)
[ RUN      ] OCL_Arithm/Absdiff.Scalar/44, where GetParam() = (CV_32F, Channels(3), false)
[       OK ] OCL_Arithm/Absdiff.Scalar/44 (24 ms)
[ RUN      ] OCL_Arithm/Absdiff.Scalar/45, where GetParam() = (CV_32F, Channels(3), true)
[       OK ] OCL_Arithm/Absdiff.Scalar/45 (6 ms)
[ RUN      ] OCL_Arithm/Absdiff.Scalar/46, where GetParam() = (CV_32F, Channels(4), false)
[       OK ] OCL_Arithm/Absdiff.Scalar/46 (23 ms)
[ RUN      ] OCL_Arithm/Absdiff.Scalar/47, where GetParam() = (CV_32F, Channels(4), true)
[       OK ] OCL_Arithm/Absdiff.Scalar/47 (7 ms)
[ RUN      ] OCL_Arithm/Absdiff.Scalar/48, where GetParam() = (CV_64F, Channels(1), false)
[       OK ] OCL_Arithm/Absdiff.Scalar/48 (25 ms)
[ RUN      ] OCL_Arithm/Absdiff.Scalar/49, where GetParam() = (CV_64F, Channels(1), true)
[       OK ] OCL_Arithm/Absdiff.Scalar/49 (6 ms)
[ RUN      ] OCL_Arithm/Absdiff.Scalar/50, where GetParam() = (CV_64F, Channels(2), false)
[       OK ] OCL_Arithm/Absdiff.Scalar/50 (22 ms)
[ RUN      ] OCL_Arithm/Absdiff.Scalar/51, where GetParam() = (CV_64F, Channels(2), true)
[       OK ] OCL_Arithm/Absdiff.Scalar/51 (8 ms)
[ RUN      ] OCL_Arithm/Absdiff.Scalar/52, where GetParam() = (CV_64F, Channels(3), false)
[       OK ] OCL_Arithm/Absdiff.Scalar/52 (26 ms)
[ RUN      ] OCL_Arithm/Absdiff.Scalar/53, where GetParam() = (CV_64F, Channels(3), true)
[       OK ] OCL_Arithm/Absdiff.Scalar/53 (8 ms)
[ RUN      ] OCL_Arithm/Absdiff.Scalar/54, where GetParam() = (CV_64F, Channels(4), false)
[       OK ] OCL_Arithm/Absdiff.Scalar/54 (25 ms)
[ RUN      ] OCL_Arithm/Absdiff.Scalar/55, where GetParam() = (CV_64F, Channels(4), true)
[       OK ] OCL_Arithm/Absdiff.Scalar/55 (10 ms)
[----------] 112 tests from OCL_Arithm/Absdiff (1725 ms total)

[----------] Global test environment tear-down
[==========] 112 tests from 1 test case ran. (1727 ms total)
[  PASSED  ] 112 tests.
