Time compensation is 0
CTEST_FULL_OUTPUT
OpenCV version: 4.0.1-dev
OpenCV VCS version: 4.0.0-beta-625-g6b96512d4
Build type: RELEASE
WARNING: build value differs from runtime: Release
Compiler: /usr/bin/c++  (ver 7.3.0)
Parallel framework: pthreads
CPU features: NEON FP16
OpenCL Platforms: 
    ARM Platform
        iGPU: Mali-T860 (OpenCL 1.2 v1.r14p0-01rel0-git(966ed26).f44c85cb3d2ceb87e8be88e7592755c3)
Current OpenCL device: 
    Type = iGPU
    Name = Mali-T860
    Version = OpenCL 1.2 v1.r14p0-01rel0-git(966ed26).f44c85cb3d2ceb87e8be88e7592755c3
    Driver version = 1.2
    Address bits = 64
    Compute units = 4
    Max work group size = 32
    Local memory size = 32 KB
    Max memory allocation size = 493 MB 15 KB
    Double support = Yes
    Host unified memory = Yes
    Device extensions:
        cl_khr_global_int32_base_atomics
        cl_khr_global_int32_extended_atomics
        cl_khr_local_int32_base_atomics
        cl_khr_local_int32_extended_atomics
        cl_khr_byte_addressable_store
        cl_khr_3d_image_writes
        cl_khr_fp64
        cl_khr_int64_base_atomics
        cl_khr_int64_extended_atomics
        cl_khr_fp16
        cl_khr_gl_sharing
        cl_khr_icd
        cl_khr_egl_event
        cl_khr_egl_image
        cl_khr_image2d_from_buffer
        cl_arm_core_id
        cl_arm_printf
        cl_arm_thread_limit_hint
        cl_arm_non_uniform_work_group_size
        cl_arm_import_memory
    Has AMD Blas = No
    Has AMD Fft = No
    Preferred vector width char = 16
    Preferred vector width short = 8
    Preferred vector width int = 4
    Preferred vector width long = 2
    Preferred vector width float = 4
    Preferred vector width double = 2
Note: Google Test filter = *OCL_NormalizeFixture_NormalizeWithMask*
[==========] Running 32 tests from 1 test case.
[----------] Global test environment set-up.
[----------] 32 tests from OCL_NormalizeFixture_NormalizeWithMask
[ RUN      ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/0, where GetParam() = (640x480, 8UC1, CV_MINMAX)
[ PERFSTAT ]    (samples=100   mean=10.12   median=9.79   min=8.41   stddev=0.94 (9.3%))
[       OK ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/0 (1158 ms)
[ RUN      ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/1, where GetParam() = (640x480, 8UC1, CV_L2)
[ PERFSTAT ]    (samples=100   mean=10.06   median=9.76   min=8.07   stddev=0.96 (9.5%))
[       OK ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/1 (1127 ms)
[ RUN      ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/2, where GetParam() = (640x480, 8UC1, CV_L1)
[ PERFSTAT ]    (samples=100   mean=9.42   median=9.28   min=8.36   stddev=0.59 (6.3%))
[       OK ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/2 (1026 ms)
[ RUN      ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/3, where GetParam() = (640x480, 8UC1, CV_C)
[ PERFSTAT ]    (samples=100   mean=9.35   median=9.27   min=8.41   stddev=0.48 (5.1%))
[       OK ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/3 (1030 ms)
[ RUN      ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/4, where GetParam() = (640x480, 32FC1, CV_MINMAX)
[ PERFSTAT ]    (samples=100   mean=10.26   median=10.14   min=9.31   stddev=0.48 (4.6%))
[       OK ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/4 (1161 ms)
[ RUN      ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/5, where GetParam() = (640x480, 32FC1, CV_L2)
[ PERFSTAT ]    (samples=100   mean=9.76   median=9.59   min=9.10   stddev=0.53 (5.4%))
[       OK ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/5 (1118 ms)
[ RUN      ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/6, where GetParam() = (640x480, 32FC1, CV_L1)
[ PERFSTAT ]    (samples=100   mean=10.32   median=10.09   min=9.17   stddev=0.73 (7.1%))
[       OK ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/6 (1136 ms)
[ RUN      ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/7, where GetParam() = (640x480, 32FC1, CV_C)
[ PERFSTAT ]    (samples=100   mean=10.31   median=10.11   min=8.85   stddev=0.68 (6.6%))
[       OK ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/7 (1148 ms)
[ RUN      ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/8, where GetParam() = (1280x720, 8UC1, CV_MINMAX)
[ PERFSTAT ]    (samples=10   mean=20.56   median=20.52   min=19.59   stddev=0.54 (2.6%))
[       OK ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/8 (229 ms)
[ RUN      ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/9, where GetParam() = (1280x720, 8UC1, CV_L2)
[ PERFSTAT ]    (samples=25   mean=20.75   median=20.54   min=19.96   stddev=0.62 (3.0%))
[       OK ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/9 (547 ms)
[ RUN      ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/10, where GetParam() = (1280x720, 8UC1, CV_L1)
[ PERFSTAT ]    (samples=75   mean=20.20   median=20.08   min=19.16   stddev=0.59 (2.9%))
[       OK ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/10 (1557 ms)
[ RUN      ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/11, where GetParam() = (1280x720, 8UC1, CV_C)
[ PERFSTAT ]    (samples=13   mean=20.14   median=20.01   min=19.33   stddev=0.49 (2.5%))
[       OK ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/11 (287 ms)
[ RUN      ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/12, where GetParam() = (1280x720, 32FC1, CV_MINMAX)
[ PERFSTAT ]    (samples=31   mean=22.84   median=22.83   min=21.90   stddev=0.68 (3.0%))
[       OK ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/12 (771 ms)
[ RUN      ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/13, where GetParam() = (1280x720, 32FC1, CV_L2)
[ PERFSTAT ]    (samples=10   mean=22.30   median=22.18   min=21.65   stddev=0.51 (2.3%))
[       OK ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/13 (276 ms)
[ RUN      ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/14, where GetParam() = (1280x720, 32FC1, CV_L1)
[ PERFSTAT ]    (samples=10   mean=21.95   median=21.76   min=21.36   stddev=0.50 (2.3%))
[       OK ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/14 (271 ms)
[ RUN      ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/15, where GetParam() = (1280x720, 32FC1, CV_C)
[ PERFSTAT ]    (samples=39   mean=21.64   median=21.55   min=20.60   stddev=0.65 (3.0%))
[       OK ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/15 (912 ms)
[ RUN      ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/16, where GetParam() = (1920x1080, 8UC1, CV_MINMAX)
[ PERFSTAT ]    (samples=10   mean=40.63   median=40.50   min=39.51   stddev=0.98 (2.4%))
[       OK ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/16 (452 ms)
[ RUN      ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/17, where GetParam() = (1920x1080, 8UC1, CV_L2)
[ PERFSTAT ]    (samples=13   mean=40.50   median=40.23   min=39.29   stddev=1.06 (2.6%))
[       OK ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/17 (581 ms)
[ RUN      ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/18, where GetParam() = (1920x1080, 8UC1, CV_L1)
[ PERFSTAT ]    (samples=10   mean=39.27   median=39.21   min=38.15   stddev=0.84 (2.1%))
[       OK ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/18 (437 ms)
[ RUN      ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/19, where GetParam() = (1920x1080, 8UC1, CV_C)
[ PERFSTAT ]    (samples=10   mean=39.25   median=38.90   min=38.06   stddev=0.90 (2.3%))
[       OK ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/19 (441 ms)
[ RUN      ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/20, where GetParam() = (1920x1080, 32FC1, CV_MINMAX)
[ PERFSTAT ]    (samples=13   mean=43.55   median=43.39   min=42.87   stddev=0.68 (1.6%))
[       OK ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/20 (687 ms)
[ RUN      ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/21, where GetParam() = (1920x1080, 32FC1, CV_L2)
[ PERFSTAT ]    (samples=10   mean=44.28   median=44.42   min=42.91   stddev=1.17 (2.6%))
[       OK ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/21 (558 ms)
[ RUN      ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/22, where GetParam() = (1920x1080, 32FC1, CV_L1)
[ PERFSTAT ]    (samples=100   mean=28.85   median=28.85   min=23.97   stddev=1.78 (6.2%))
[       OK ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/22 (3109 ms)
[ RUN      ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/23, where GetParam() = (1920x1080, 32FC1, CV_C)
[ PERFSTAT ]    (samples=10   mean=32.00   median=31.89   min=31.44   stddev=0.56 (1.8%))
[       OK ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/23 (414 ms)
[ RUN      ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/24, where GetParam() = (3840x2160, 8UC1, CV_MINMAX)
.
[ PERFSTAT ]    (samples=100   mean=145.75   median=148.17   min=112.78   stddev=9.43 (6.5%))
[       OK ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/24 (14812 ms)
[ RUN      ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/25, where GetParam() = (3840x2160, 8UC1, CV_L2)
[ PERFSTAT ]    (samples=10   mean=148.42   median=148.37   min=146.43   stddev=1.42 (1.0%))
[       OK ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/25 (1629 ms)
[ RUN      ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/26, where GetParam() = (3840x2160, 8UC1, CV_L1)
[ PERFSTAT ]    (samples=10   mean=146.21   median=146.08   min=142.05   stddev=2.02 (1.4%))
[       OK ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/26 (1628 ms)
[ RUN      ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/27, where GetParam() = (3840x2160, 8UC1, CV_C)
[ PERFSTAT ]    (samples=10   mean=145.12   median=144.84   min=143.37   stddev=1.25 (0.9%))
[       OK ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/27 (1598 ms)
[ RUN      ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/28, where GetParam() = (3840x2160, 32FC1, CV_MINMAX)
.
[ PERFSTAT ]    (samples=100   mean=116.10   median=116.94   min=94.44   stddev=9.08 (7.8%))
[       OK ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/28 (12150 ms)
[ RUN      ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/29, where GetParam() = (3840x2160, 32FC1, CV_L2)
.
[ PERFSTAT ]    (samples=100   mean=114.75   median=120.38   min=90.42   stddev=9.60 (8.4%))
[       OK ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/29 (11818 ms)
[ RUN      ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/30, where GetParam() = (3840x2160, 32FC1, CV_L1)
.
[ PERFSTAT ]    (samples=100   mean=111.19   median=107.77   min=91.35   stddev=8.52 (7.7%))
[       OK ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/30 (11517 ms)
[ RUN      ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/31, where GetParam() = (3840x2160, 32FC1, CV_C)
[ PERFSTAT ]    (samples=10   mean=107.97   median=107.40   min=106.89   stddev=1.40 (1.3%))
[       OK ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/31 (1331 ms)
[----------] 32 tests from OCL_NormalizeFixture_NormalizeWithMask (76924 ms total)

[----------] Global test environment tear-down
[==========] 32 tests from 1 test case ran. (76924 ms total)
[  PASSED  ] 32 tests.
