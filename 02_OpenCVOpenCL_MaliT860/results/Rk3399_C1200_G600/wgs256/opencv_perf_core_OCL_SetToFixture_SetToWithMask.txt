Time compensation is 0
CTEST_FULL_OUTPUT
OpenCV version: 4.0.1-dev
OpenCV VCS version: 4.0.0-beta-625-g6b96512d4
Build type: RELEASE
WARNING: build value differs from runtime: Release
Compiler: /usr/bin/c++  (ver 7.3.0)
Parallel framework: pthreads
CPU features: NEON FP16
OpenCL Platforms: 
    ARM Platform
        iGPU: Mali-T860 (OpenCL 1.2 v1.r14p0-01rel0-git(966ed26).f44c85cb3d2ceb87e8be88e7592755c3)
Current OpenCL device: 
    Type = iGPU
    Name = Mali-T860
    Version = OpenCL 1.2 v1.r14p0-01rel0-git(966ed26).f44c85cb3d2ceb87e8be88e7592755c3
    Driver version = 1.2
    Address bits = 64
    Compute units = 4
    Max work group size = 256
    Local memory size = 32 KB
    Max memory allocation size = 493 MB 15 KB
    Double support = Yes
    Host unified memory = Yes
    Device extensions:
        cl_khr_global_int32_base_atomics
        cl_khr_global_int32_extended_atomics
        cl_khr_local_int32_base_atomics
        cl_khr_local_int32_extended_atomics
        cl_khr_byte_addressable_store
        cl_khr_3d_image_writes
        cl_khr_fp64
        cl_khr_int64_base_atomics
        cl_khr_int64_extended_atomics
        cl_khr_fp16
        cl_khr_gl_sharing
        cl_khr_icd
        cl_khr_egl_event
        cl_khr_egl_image
        cl_khr_image2d_from_buffer
        cl_arm_core_id
        cl_arm_printf
        cl_arm_thread_limit_hint
        cl_arm_non_uniform_work_group_size
        cl_arm_import_memory
    Has AMD Blas = No
    Has AMD Fft = No
    Preferred vector width char = 16
    Preferred vector width short = 8
    Preferred vector width int = 4
    Preferred vector width long = 2
    Preferred vector width float = 4
    Preferred vector width double = 2
Note: Google Test filter = *OCL_SetToFixture_SetToWithMask*
[==========] Running 16 tests from 1 test case.
[----------] Global test environment set-up.
[----------] 16 tests from OCL_SetToFixture_SetToWithMask
[ RUN      ] OCL_SetToFixture_SetToWithMask.SetToWithMask/0, where GetParam() = (640x480, 8UC1)
[ PERFSTAT ]    (samples=100   mean=1.72   median=1.50   min=1.28   stddev=0.43 (24.7%))
[       OK ] OCL_SetToFixture_SetToWithMask.SetToWithMask/0 (262 ms)
[ RUN      ] OCL_SetToFixture_SetToWithMask.SetToWithMask/1, where GetParam() = (640x480, 32FC1)
[ PERFSTAT ]    (samples=100   mean=2.81   median=2.60   min=2.06   stddev=0.60 (21.2%))
[       OK ] OCL_SetToFixture_SetToWithMask.SetToWithMask/1 (337 ms)
[ RUN      ] OCL_SetToFixture_SetToWithMask.SetToWithMask/2, where GetParam() = (640x480, 8UC4)
[ PERFSTAT ]    (samples=100   mean=2.90   median=2.93   min=2.27   stddev=0.42 (14.4%))
[       OK ] OCL_SetToFixture_SetToWithMask.SetToWithMask/2 (379 ms)
[ RUN      ] OCL_SetToFixture_SetToWithMask.SetToWithMask/3, where GetParam() = (640x480, 32FC4)
[ PERFSTAT ]    (samples=100   mean=3.63   median=4.61   min=1.56   stddev=1.81 (49.7%))
[       OK ] OCL_SetToFixture_SetToWithMask.SetToWithMask/3 (490 ms)
[ RUN      ] OCL_SetToFixture_SetToWithMask.SetToWithMask/4, where GetParam() = (1280x720, 8UC1)
[ PERFSTAT ]    (samples=100   mean=5.23   median=5.39   min=3.05   stddev=0.91 (17.5%))
[       OK ] OCL_SetToFixture_SetToWithMask.SetToWithMask/4 (921 ms)
[ RUN      ] OCL_SetToFixture_SetToWithMask.SetToWithMask/5, where GetParam() = (1280x720, 32FC1)
[ PERFSTAT ]    (samples=100   mean=3.77   median=3.28   min=2.74   stddev=1.20 (32.0%))
[       OK ] OCL_SetToFixture_SetToWithMask.SetToWithMask/5 (473 ms)
[ RUN      ] OCL_SetToFixture_SetToWithMask.SetToWithMask/6, where GetParam() = (1280x720, 8UC4)
[ PERFSTAT ]    (samples=100   mean=3.56   median=3.52   min=3.10   stddev=0.26 (7.4%))
[       OK ] OCL_SetToFixture_SetToWithMask.SetToWithMask/6 (427 ms)
[ RUN      ] OCL_SetToFixture_SetToWithMask.SetToWithMask/7, where GetParam() = (1280x720, 32FC4)
[ PERFSTAT ]    (samples=100   mean=3.86   median=3.57   min=3.32   stddev=1.21 (31.3%))
[       OK ] OCL_SetToFixture_SetToWithMask.SetToWithMask/7 (655 ms)
[ RUN      ] OCL_SetToFixture_SetToWithMask.SetToWithMask/8, where GetParam() = (1920x1080, 8UC1)
[ PERFSTAT ]    (samples=100   mean=5.25   median=5.16   min=4.86   stddev=0.30 (5.6%))
[       OK ] OCL_SetToFixture_SetToWithMask.SetToWithMask/8 (584 ms)
[ RUN      ] OCL_SetToFixture_SetToWithMask.SetToWithMask/9, where GetParam() = (1920x1080, 32FC1)
[ PERFSTAT ]    (samples=100   mean=8.50   median=8.67   min=7.71   stddev=0.46 (5.4%))
[       OK ] OCL_SetToFixture_SetToWithMask.SetToWithMask/9 (985 ms)
[ RUN      ] OCL_SetToFixture_SetToWithMask.SetToWithMask/10, where GetParam() = (1920x1080, 8UC4)
[ PERFSTAT ]    (samples=12   mean=8.55   median=8.63   min=8.06   stddev=0.26 (3.0%))
[       OK ] OCL_SetToFixture_SetToWithMask.SetToWithMask/10 (207 ms)
[ RUN      ] OCL_SetToFixture_SetToWithMask.SetToWithMask/11, where GetParam() = (1920x1080, 32FC4)
[ PERFSTAT ]    (samples=10   mean=16.06   median=16.05   min=15.51   stddev=0.31 (2.0%))
[       OK ] OCL_SetToFixture_SetToWithMask.SetToWithMask/11 (416 ms)
[ RUN      ] OCL_SetToFixture_SetToWithMask.SetToWithMask/12, where GetParam() = (3840x2160, 8UC1)
[ PERFSTAT ]    (samples=10   mean=24.85   median=24.67   min=24.48   stddev=0.39 (1.6%))
[       OK ] OCL_SetToFixture_SetToWithMask.SetToWithMask/12 (406 ms)
[ RUN      ] OCL_SetToFixture_SetToWithMask.SetToWithMask/13, where GetParam() = (3840x2160, 32FC1)
[ PERFSTAT ]    (samples=100   mean=23.14   median=23.23   min=20.12   stddev=0.72 (3.1%))
[       OK ] OCL_SetToFixture_SetToWithMask.SetToWithMask/13 (2664 ms)
[ RUN      ] OCL_SetToFixture_SetToWithMask.SetToWithMask/14, where GetParam() = (3840x2160, 8UC4)
[ PERFSTAT ]    (samples=13   mean=29.75   median=29.62   min=28.51   stddev=0.85 (2.9%))
[       OK ] OCL_SetToFixture_SetToWithMask.SetToWithMask/14 (708 ms)
[ RUN      ] OCL_SetToFixture_SetToWithMask.SetToWithMask/15, where GetParam() = (3840x2160, 32FC4)
[ PERFSTAT ]    (samples=10   mean=43.47   median=43.41   min=43.26   stddev=0.21 (0.5%))
[       OK ] OCL_SetToFixture_SetToWithMask.SetToWithMask/15 (1379 ms)
[----------] 16 tests from OCL_SetToFixture_SetToWithMask (11300 ms total)

[----------] Global test environment tear-down
[==========] 16 tests from 1 test case ran. (11300 ms total)
[  PASSED  ] 16 tests.
