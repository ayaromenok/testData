Time compensation is 0
CTEST_FULL_OUTPUT
OpenCV version: 4.0.1-dev
OpenCV VCS version: 4.0.0-beta-625-g6b96512d4
Build type: RELEASE
WARNING: build value differs from runtime: Release
Compiler: /usr/bin/c++  (ver 7.3.0)
Parallel framework: pthreads
CPU features: NEON FP16
OpenCL Platforms: 
    ARM Platform
        iGPU: Mali-T860 (OpenCL 1.2 v1.r14p0-01rel0-git(966ed26).f44c85cb3d2ceb87e8be88e7592755c3)
Current OpenCL device: 
    Type = iGPU
    Name = Mali-T860
    Version = OpenCL 1.2 v1.r14p0-01rel0-git(966ed26).f44c85cb3d2ceb87e8be88e7592755c3
    Driver version = 1.2
    Address bits = 64
    Compute units = 4
    Max work group size = 256
    Local memory size = 32 KB
    Max memory allocation size = 493 MB 15 KB
    Double support = Yes
    Host unified memory = Yes
    Device extensions:
        cl_khr_global_int32_base_atomics
        cl_khr_global_int32_extended_atomics
        cl_khr_local_int32_base_atomics
        cl_khr_local_int32_extended_atomics
        cl_khr_byte_addressable_store
        cl_khr_3d_image_writes
        cl_khr_fp64
        cl_khr_int64_base_atomics
        cl_khr_int64_extended_atomics
        cl_khr_fp16
        cl_khr_gl_sharing
        cl_khr_icd
        cl_khr_egl_event
        cl_khr_egl_image
        cl_khr_image2d_from_buffer
        cl_arm_core_id
        cl_arm_printf
        cl_arm_thread_limit_hint
        cl_arm_non_uniform_work_group_size
        cl_arm_import_memory
    Has AMD Blas = No
    Has AMD Fft = No
    Preferred vector width char = 16
    Preferred vector width short = 8
    Preferred vector width int = 4
    Preferred vector width long = 2
    Preferred vector width float = 4
    Preferred vector width double = 2
Note: Google Test filter = *OCL_NormalizeFixture_NormalizeWithMask*
[==========] Running 32 tests from 1 test case.
[----------] Global test environment set-up.
[----------] 32 tests from OCL_NormalizeFixture_NormalizeWithMask
[ RUN      ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/0, where GetParam() = (640x480, 8UC1, CV_MINMAX)
[ PERFSTAT ]    (samples=100   mean=4.83   median=4.10   min=2.61   stddev=1.61 (33.3%))
[       OK ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/0 (610 ms)
[ RUN      ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/1, where GetParam() = (640x480, 8UC1, CV_L2)
[ PERFSTAT ]    (samples=100   mean=6.70   median=6.28   min=4.41   stddev=1.18 (17.6%))
[       OK ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/1 (782 ms)
[ RUN      ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/2, where GetParam() = (640x480, 8UC1, CV_L1)
[ PERFSTAT ]    (samples=100   mean=7.26   median=7.21   min=5.38   stddev=1.24 (17.1%))
[       OK ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/2 (818 ms)
[ RUN      ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/3, where GetParam() = (640x480, 8UC1, CV_C)
[ PERFSTAT ]    (samples=100   mean=7.12   median=6.88   min=5.18   stddev=1.17 (16.4%))
[       OK ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/3 (808 ms)
[ RUN      ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/4, where GetParam() = (640x480, 32FC1, CV_MINMAX)
[ PERFSTAT ]    (samples=100   mean=5.20   median=4.51   min=3.35   stddev=1.85 (35.7%))
[       OK ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/4 (1138 ms)
[ RUN      ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/5, where GetParam() = (640x480, 32FC1, CV_L2)
[ PERFSTAT ]    (samples=100   mean=5.53   median=5.41   min=3.45   stddev=0.90 (16.4%))
[       OK ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/5 (676 ms)
[ RUN      ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/6, where GetParam() = (640x480, 32FC1, CV_L1)
[ PERFSTAT ]    (samples=100   mean=5.80   median=5.63   min=4.78   stddev=0.78 (13.4%))
[       OK ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/6 (671 ms)
[ RUN      ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/7, where GetParam() = (640x480, 32FC1, CV_C)
[ PERFSTAT ]    (samples=100   mean=5.56   median=5.20   min=4.52   stddev=0.78 (14.0%))
[       OK ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/7 (647 ms)
[ RUN      ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/8, where GetParam() = (1280x720, 8UC1, CV_MINMAX)
[ PERFSTAT ]    (samples=100   mean=9.14   median=8.66   min=8.23   stddev=0.83 (9.1%))
[       OK ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/8 (957 ms)
[ RUN      ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/9, where GetParam() = (1280x720, 8UC1, CV_L2)
[ PERFSTAT ]    (samples=100   mean=9.11   median=8.67   min=8.07   stddev=0.88 (9.6%))
[       OK ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/9 (954 ms)
[ RUN      ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/10, where GetParam() = (1280x720, 8UC1, CV_L1)
[ PERFSTAT ]    (samples=100   mean=8.94   median=8.50   min=7.94   stddev=0.82 (9.2%))
[       OK ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/10 (937 ms)
[ RUN      ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/11, where GetParam() = (1280x720, 8UC1, CV_C)
[ PERFSTAT ]    (samples=100   mean=9.02   median=8.69   min=7.64   stddev=0.89 (9.8%))
[       OK ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/11 (945 ms)
[ RUN      ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/12, where GetParam() = (1280x720, 32FC1, CV_MINMAX)
[ PERFSTAT ]    (samples=100   mean=8.19   median=8.00   min=6.89   stddev=0.70 (8.6%))
[       OK ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/12 (909 ms)
[ RUN      ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/13, where GetParam() = (1280x720, 32FC1, CV_L2)
[ PERFSTAT ]    (samples=100   mean=8.03   median=7.88   min=6.80   stddev=0.89 (11.1%))
[       OK ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/13 (3413 ms)
[ RUN      ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/14, where GetParam() = (1280x720, 32FC1, CV_L1)
[ PERFSTAT ]    (samples=100   mean=8.09   median=7.94   min=7.28   stddev=0.44 (5.4%))
[       OK ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/14 (865 ms)
[ RUN      ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/15, where GetParam() = (1280x720, 32FC1, CV_C)
[ PERFSTAT ]    (samples=100   mean=7.67   median=7.21   min=6.39   stddev=1.47 (19.2%))
[       OK ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/15 (2312 ms)
[ RUN      ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/16, where GetParam() = (1920x1080, 8UC1, CV_MINMAX)
[ PERFSTAT ]    (samples=100   mean=16.23   median=16.12   min=13.36   stddev=0.79 (4.8%))
[       OK ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/16 (1698 ms)
[ RUN      ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/17, where GetParam() = (1920x1080, 8UC1, CV_L2)
[ PERFSTAT ]    (samples=100   mean=16.65   median=16.34   min=15.09   stddev=0.90 (5.4%))
[       OK ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/17 (1730 ms)
[ RUN      ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/18, where GetParam() = (1920x1080, 8UC1, CV_L1)
[ PERFSTAT ]    (samples=100   mean=22.33   median=22.44   min=20.21   stddev=1.24 (5.6%))
[       OK ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/18 (2307 ms)
[ RUN      ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/19, where GetParam() = (1920x1080, 8UC1, CV_C)
[ PERFSTAT ]    (samples=100   mean=18.03   median=14.97   min=11.67   stddev=4.27 (23.7%))
[       OK ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/19 (1911 ms)
[ RUN      ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/20, where GetParam() = (1920x1080, 32FC1, CV_MINMAX)
[ PERFSTAT ]    (samples=100   mean=13.38   median=13.25   min=12.49   stddev=0.44 (3.3%))
[       OK ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/20 (1506 ms)
[ RUN      ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/21, where GetParam() = (1920x1080, 32FC1, CV_L2)
[ PERFSTAT ]    (samples=100   mean=13.09   median=12.92   min=12.43   stddev=0.45 (3.4%))
[       OK ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/21 (1454 ms)
[ RUN      ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/22, where GetParam() = (1920x1080, 32FC1, CV_L1)
[ PERFSTAT ]    (samples=100   mean=15.13   median=13.27   min=12.33   stddev=3.13 (20.7%))
[       OK ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/22 (2076 ms)
[ RUN      ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/23, where GetParam() = (1920x1080, 32FC1, CV_C)
[ PERFSTAT ]    (samples=56   mean=13.18   median=13.10   min=12.59   stddev=0.39 (3.0%))
[       OK ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/23 (884 ms)
[ RUN      ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/24, where GetParam() = (3840x2160, 8UC1, CV_MINMAX)
[ PERFSTAT ]    (samples=10   mean=75.18   median=74.61   min=73.30   stddev=1.85 (2.5%))
[       OK ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/24 (894 ms)
[ RUN      ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/25, where GetParam() = (3840x2160, 8UC1, CV_L2)
[ PERFSTAT ]    (samples=10   mean=75.50   median=75.50   min=73.24   stddev=1.73 (2.3%))
[       OK ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/25 (928 ms)
[ RUN      ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/26, where GetParam() = (3840x2160, 8UC1, CV_L1)
[ PERFSTAT ]    (samples=10   mean=76.19   median=76.16   min=73.54   stddev=1.58 (2.1%))
[       OK ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/26 (909 ms)
[ RUN      ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/27, where GetParam() = (3840x2160, 8UC1, CV_C)
[ PERFSTAT ]    (samples=10   mean=74.35   median=74.32   min=72.75   stddev=1.29 (1.7%))
[       OK ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/27 (887 ms)
[ RUN      ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/28, where GetParam() = (3840x2160, 32FC1, CV_MINMAX)
[ PERFSTAT ]    (samples=13   mean=44.86   median=44.75   min=44.44   stddev=0.31 (0.7%))
[       OK ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/28 (935 ms)
[ RUN      ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/29, where GetParam() = (3840x2160, 32FC1, CV_L2)
[ PERFSTAT ]    (samples=50   mean=43.63   median=43.62   min=42.67   stddev=0.52 (1.2%))
[       OK ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/29 (2530 ms)
[ RUN      ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/30, where GetParam() = (3840x2160, 32FC1, CV_L1)
[ PERFSTAT ]    (samples=10   mean=43.29   median=43.26   min=42.60   stddev=0.46 (1.1%))
[       OK ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/30 (668 ms)
[ RUN      ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/31, where GetParam() = (3840x2160, 32FC1, CV_C)
[ PERFSTAT ]    (samples=15   mean=48.25   median=48.54   min=44.83   stddev=1.44 (3.0%))
[       OK ] OCL_NormalizeFixture_NormalizeWithMask.NormalizeWithMask/31 (964 ms)
[----------] 32 tests from OCL_NormalizeFixture_NormalizeWithMask (39727 ms total)

[----------] Global test environment tear-down
[==========] 32 tests from 1 test case ran. (39727 ms total)
[  PASSED  ] 32 tests.
