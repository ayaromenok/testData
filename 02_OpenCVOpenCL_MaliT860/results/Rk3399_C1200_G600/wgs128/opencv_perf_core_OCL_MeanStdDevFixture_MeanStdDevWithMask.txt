Time compensation is 0
CTEST_FULL_OUTPUT
OpenCV version: 4.0.1-dev
OpenCV VCS version: 4.0.0-beta-625-g6b96512d4
Build type: RELEASE
WARNING: build value differs from runtime: Release
Compiler: /usr/bin/c++  (ver 7.3.0)
Parallel framework: pthreads
CPU features: NEON FP16
OpenCL Platforms: 
    ARM Platform
        iGPU: Mali-T860 (OpenCL 1.2 v1.r14p0-01rel0-git(966ed26).f44c85cb3d2ceb87e8be88e7592755c3)
Current OpenCL device: 
    Type = iGPU
    Name = Mali-T860
    Version = OpenCL 1.2 v1.r14p0-01rel0-git(966ed26).f44c85cb3d2ceb87e8be88e7592755c3
    Driver version = 1.2
    Address bits = 64
    Compute units = 4
    Max work group size = 128
    Local memory size = 32 KB
    Max memory allocation size = 493 MB 15 KB
    Double support = Yes
    Host unified memory = Yes
    Device extensions:
        cl_khr_global_int32_base_atomics
        cl_khr_global_int32_extended_atomics
        cl_khr_local_int32_base_atomics
        cl_khr_local_int32_extended_atomics
        cl_khr_byte_addressable_store
        cl_khr_3d_image_writes
        cl_khr_fp64
        cl_khr_int64_base_atomics
        cl_khr_int64_extended_atomics
        cl_khr_fp16
        cl_khr_gl_sharing
        cl_khr_icd
        cl_khr_egl_event
        cl_khr_egl_image
        cl_khr_image2d_from_buffer
        cl_arm_core_id
        cl_arm_printf
        cl_arm_thread_limit_hint
        cl_arm_non_uniform_work_group_size
        cl_arm_import_memory
    Has AMD Blas = No
    Has AMD Fft = No
    Preferred vector width char = 16
    Preferred vector width short = 8
    Preferred vector width int = 4
    Preferred vector width long = 2
    Preferred vector width float = 4
    Preferred vector width double = 2
Note: Google Test filter = *OCL_MeanStdDevFixture_MeanStdDevWithMask*
[==========] Running 18 tests from 1 test case.
[----------] Global test environment set-up.
[----------] 18 tests from OCL_MeanStdDevFixture_MeanStdDevWithMask
[ RUN      ] OCL_MeanStdDevFixture_MeanStdDevWithMask.MeanStdDevWithMask/0, where GetParam() = (640x480, 8UC1)
[ PERFSTAT ]    (samples=100   mean=2.64   median=2.86   min=1.30   stddev=0.45 (17.0%))
[       OK ] OCL_MeanStdDevFixture_MeanStdDevWithMask.MeanStdDevWithMask/0 (345 ms)
[ RUN      ] OCL_MeanStdDevFixture_MeanStdDevWithMask.MeanStdDevWithMask/1, where GetParam() = (640x480, 32FC1)
[ PERFSTAT ]    (samples=100   mean=2.89   median=2.88   min=2.27   stddev=0.22 (7.7%))
[       OK ] OCL_MeanStdDevFixture_MeanStdDevWithMask.MeanStdDevWithMask/1 (365 ms)
[ RUN      ] OCL_MeanStdDevFixture_MeanStdDevWithMask.MeanStdDevWithMask/2, where GetParam() = (640x480, 8UC3)
[ PERFSTAT ]    (samples=100   mean=3.45   median=3.33   min=3.09   stddev=0.39 (11.3%))
[       OK ] OCL_MeanStdDevFixture_MeanStdDevWithMask.MeanStdDevWithMask/2 (439 ms)
[ RUN      ] OCL_MeanStdDevFixture_MeanStdDevWithMask.MeanStdDevWithMask/3, where GetParam() = (640x480, 32FC3)
[ PERFSTAT ]    (samples=100   mean=2.09   median=2.03   min=1.81   stddev=0.35 (16.9%))
[       OK ] OCL_MeanStdDevFixture_MeanStdDevWithMask.MeanStdDevWithMask/3 (316 ms)
[ RUN      ] OCL_MeanStdDevFixture_MeanStdDevWithMask.MeanStdDevWithMask/4, where GetParam() = (640x480, 8UC4)
[ PERFSTAT ]    (samples=100   mean=3.22   median=3.32   min=2.08   stddev=0.40 (12.3%))
[       OK ] OCL_MeanStdDevFixture_MeanStdDevWithMask.MeanStdDevWithMask/4 (406 ms)
[ RUN      ] OCL_MeanStdDevFixture_MeanStdDevWithMask.MeanStdDevWithMask/5, where GetParam() = (640x480, 32FC4)
[ PERFSTAT ]    (samples=100   mean=2.07   median=1.94   min=1.87   stddev=0.51 (24.6%))
[       OK ] OCL_MeanStdDevFixture_MeanStdDevWithMask.MeanStdDevWithMask/5 (319 ms)
[ RUN      ] OCL_MeanStdDevFixture_MeanStdDevWithMask.MeanStdDevWithMask/6, where GetParam() = (1280x720, 8UC1)
[ PERFSTAT ]    (samples=13   mean=2.93   median=2.93   min=2.83   stddev=0.06 (2.0%))
[       OK ] OCL_MeanStdDevFixture_MeanStdDevWithMask.MeanStdDevWithMask/6 (53 ms)
[ RUN      ] OCL_MeanStdDevFixture_MeanStdDevWithMask.MeanStdDevWithMask/7, where GetParam() = (1280x720, 32FC1)
[ PERFSTAT ]    (samples=37   mean=4.16   median=4.13   min=4.01   stddev=0.12 (3.0%))
[       OK ] OCL_MeanStdDevFixture_MeanStdDevWithMask.MeanStdDevWithMask/7 (186 ms)
[ RUN      ] OCL_MeanStdDevFixture_MeanStdDevWithMask.MeanStdDevWithMask/8, where GetParam() = (1280x720, 8UC3)
[ PERFSTAT ]    (samples=100   mean=4.71   median=4.68   min=4.47   stddev=0.14 (3.1%))
[       OK ] OCL_MeanStdDevFixture_MeanStdDevWithMask.MeanStdDevWithMask/8 (512 ms)
[ RUN      ] OCL_MeanStdDevFixture_MeanStdDevWithMask.MeanStdDevWithMask/9, where GetParam() = (1280x720, 32FC3)
[ PERFSTAT ]    (samples=88   mean=3.80   median=3.78   min=3.61   stddev=0.10 (2.6%))
[       OK ] OCL_MeanStdDevFixture_MeanStdDevWithMask.MeanStdDevWithMask/9 (454 ms)
[ RUN      ] OCL_MeanStdDevFixture_MeanStdDevWithMask.MeanStdDevWithMask/10, where GetParam() = (1280x720, 8UC4)
[ PERFSTAT ]    (samples=100   mean=4.35   median=4.42   min=3.49   stddev=0.23 (5.4%))
[       OK ] OCL_MeanStdDevFixture_MeanStdDevWithMask.MeanStdDevWithMask/10 (488 ms)
[ RUN      ] OCL_MeanStdDevFixture_MeanStdDevWithMask.MeanStdDevWithMask/11, where GetParam() = (1280x720, 32FC4)
[ PERFSTAT ]    (samples=100   mean=3.62   median=3.57   min=3.48   stddev=0.15 (4.3%))
[       OK ] OCL_MeanStdDevFixture_MeanStdDevWithMask.MeanStdDevWithMask/11 (480 ms)
[ RUN      ] OCL_MeanStdDevFixture_MeanStdDevWithMask.MeanStdDevWithMask/12, where GetParam() = (1920x1080, 8UC1)
[ PERFSTAT ]    (samples=100   mean=6.97   median=7.06   min=5.22   stddev=0.38 (5.5%))
[       OK ] OCL_MeanStdDevFixture_MeanStdDevWithMask.MeanStdDevWithMask/12 (760 ms)
[ RUN      ] OCL_MeanStdDevFixture_MeanStdDevWithMask.MeanStdDevWithMask/13, where GetParam() = (1920x1080, 32FC1)
[ PERFSTAT ]    (samples=10   mean=8.03   median=8.05   min=7.83   stddev=0.14 (1.7%))
[       OK ] OCL_MeanStdDevFixture_MeanStdDevWithMask.MeanStdDevWithMask/13 (140 ms)
[ RUN      ] OCL_MeanStdDevFixture_MeanStdDevWithMask.MeanStdDevWithMask/14, where GetParam() = (1920x1080, 8UC3)
[ PERFSTAT ]    (samples=13   mean=8.98   median=8.99   min=8.60   stddev=0.25 (2.8%))
[       OK ] OCL_MeanStdDevFixture_MeanStdDevWithMask.MeanStdDevWithMask/14 (180 ms)
[ RUN      ] OCL_MeanStdDevFixture_MeanStdDevWithMask.MeanStdDevWithMask/15, where GetParam() = (1920x1080, 32FC3)
[ PERFSTAT ]    (samples=38   mean=7.17   median=7.13   min=7.03   stddev=0.16 (2.2%))
[       OK ] OCL_MeanStdDevFixture_MeanStdDevWithMask.MeanStdDevWithMask/15 (431 ms)
[ RUN      ] OCL_MeanStdDevFixture_MeanStdDevWithMask.MeanStdDevWithMask/16, where GetParam() = (1920x1080, 8UC4)
[ PERFSTAT ]    (samples=100   mean=6.94   median=6.94   min=6.35   stddev=0.45 (6.5%))
[       OK ] OCL_MeanStdDevFixture_MeanStdDevWithMask.MeanStdDevWithMask/16 (837 ms)
[ RUN      ] OCL_MeanStdDevFixture_MeanStdDevWithMask.MeanStdDevWithMask/17, where GetParam() = (1920x1080, 32FC4)
[ PERFSTAT ]    (samples=50   mean=6.58   median=6.57   min=6.36   stddev=0.20 (3.0%))
[       OK ] OCL_MeanStdDevFixture_MeanStdDevWithMask.MeanStdDevWithMask/17 (568 ms)
[----------] 18 tests from OCL_MeanStdDevFixture_MeanStdDevWithMask (7284 ms total)

[----------] Global test environment tear-down
[==========] 18 tests from 1 test case ran. (7284 ms total)
[  PASSED  ] 18 tests.
