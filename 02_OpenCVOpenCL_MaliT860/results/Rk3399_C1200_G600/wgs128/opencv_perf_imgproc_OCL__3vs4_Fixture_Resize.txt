Time compensation is 0
CTEST_FULL_OUTPUT
OpenCV version: 4.0.1-dev
OpenCV VCS version: 4.0.0-beta-625-g6b96512d4
Build type: RELEASE
WARNING: build value differs from runtime: Release
Compiler: /usr/bin/c++  (ver 7.3.0)
Parallel framework: pthreads
CPU features: NEON FP16
OpenCL Platforms: 
    ARM Platform
        iGPU: Mali-T860 (OpenCL 1.2 v1.r14p0-01rel0-git(966ed26).f44c85cb3d2ceb87e8be88e7592755c3)
Current OpenCL device: 
    Type = iGPU
    Name = Mali-T860
    Version = OpenCL 1.2 v1.r14p0-01rel0-git(966ed26).f44c85cb3d2ceb87e8be88e7592755c3
    Driver version = 1.2
    Address bits = 64
    Compute units = 4
    Max work group size = 128
    Local memory size = 32 KB
    Max memory allocation size = 493 MB 15 KB
    Double support = Yes
    Host unified memory = Yes
    Device extensions:
        cl_khr_global_int32_base_atomics
        cl_khr_global_int32_extended_atomics
        cl_khr_local_int32_base_atomics
        cl_khr_local_int32_extended_atomics
        cl_khr_byte_addressable_store
        cl_khr_3d_image_writes
        cl_khr_fp64
        cl_khr_int64_base_atomics
        cl_khr_int64_extended_atomics
        cl_khr_fp16
        cl_khr_gl_sharing
        cl_khr_icd
        cl_khr_egl_event
        cl_khr_egl_image
        cl_khr_image2d_from_buffer
        cl_arm_core_id
        cl_arm_printf
        cl_arm_thread_limit_hint
        cl_arm_non_uniform_work_group_size
        cl_arm_import_memory
    Has AMD Blas = No
    Has AMD Fft = No
    Preferred vector width char = 16
    Preferred vector width short = 8
    Preferred vector width int = 4
    Preferred vector width long = 2
    Preferred vector width float = 4
    Preferred vector width double = 2
Note: Google Test filter = *OCL__3vs4_Fixture_Resize*
[==========] Running 24 tests from 1 test case.
[----------] Global test environment set-up.
[----------] 24 tests from OCL__3vs4_Fixture_Resize
[ RUN      ] OCL__3vs4_Fixture_Resize.Resize/0, where GetParam() = (640x480, 8UC3, Pure)
[ PERFSTAT ]    (samples=100   mean=2.60   median=2.61   min=2.24   stddev=0.15 (5.8%))
[       OK ] OCL__3vs4_Fixture_Resize.Resize/0 (294 ms)
[ RUN      ] OCL__3vs4_Fixture_Resize.Resize/1, where GetParam() = (640x480, 8UC3, Split)
[ PERFSTAT ]    (samples=100   mean=10.11   median=10.08   min=6.66   stddev=1.14 (11.3%))
[       OK ] OCL__3vs4_Fixture_Resize.Resize/1 (1114 ms)
[ RUN      ] OCL__3vs4_Fixture_Resize.Resize/2, where GetParam() = (640x480, 8UC3, Convert)
[ PERFSTAT ]    (samples=100   mean=8.79   median=8.26   min=6.09   stddev=2.18 (24.8%))
[       OK ] OCL__3vs4_Fixture_Resize.Resize/2 (1053 ms)
[ RUN      ] OCL__3vs4_Fixture_Resize.Resize/3, where GetParam() = (640x480, 32FC3, Pure)
[ PERFSTAT ]    (samples=100   mean=4.45   median=4.59   min=3.35   stddev=0.46 (10.4%))
[       OK ] OCL__3vs4_Fixture_Resize.Resize/3 (547 ms)
[ RUN      ] OCL__3vs4_Fixture_Resize.Resize/4, where GetParam() = (640x480, 32FC3, Split)
[ PERFSTAT ]    (samples=100   mean=6.53   median=6.46   min=6.19   stddev=0.30 (4.6%))
[       OK ] OCL__3vs4_Fixture_Resize.Resize/4 (822 ms)
[ RUN      ] OCL__3vs4_Fixture_Resize.Resize/5, where GetParam() = (640x480, 32FC3, Convert)
[ PERFSTAT ]    (samples=100   mean=5.33   median=4.43   min=4.19   stddev=1.83 (34.3%))
[       OK ] OCL__3vs4_Fixture_Resize.Resize/5 (708 ms)
[ RUN      ] OCL__3vs4_Fixture_Resize.Resize/6, where GetParam() = (1280x720, 8UC3, Pure)
[ PERFSTAT ]    (samples=100   mean=6.50   median=6.16   min=5.08   stddev=1.32 (20.3%))
[       OK ] OCL__3vs4_Fixture_Resize.Resize/6 (745 ms)
[ RUN      ] OCL__3vs4_Fixture_Resize.Resize/7, where GetParam() = (1280x720, 8UC3, Split)
[ PERFSTAT ]    (samples=100   mean=25.28   median=24.99   min=15.85   stddev=2.31 (9.1%))
[       OK ] OCL__3vs4_Fixture_Resize.Resize/7 (2844 ms)
[ RUN      ] OCL__3vs4_Fixture_Resize.Resize/8, where GetParam() = (1280x720, 8UC3, Convert)
[ PERFSTAT ]    (samples=100   mean=10.73   median=10.59   min=10.05   stddev=0.45 (4.2%))
[       OK ] OCL__3vs4_Fixture_Resize.Resize/8 (1176 ms)
[ RUN      ] OCL__3vs4_Fixture_Resize.Resize/9, where GetParam() = (1280x720, 32FC3, Pure)
[ PERFSTAT ]    (samples=100   mean=4.66   median=3.35   min=3.05   stddev=2.08 (44.7%))
[       OK ] OCL__3vs4_Fixture_Resize.Resize/9 (994 ms)
[ RUN      ] OCL__3vs4_Fixture_Resize.Resize/10, where GetParam() = (1280x720, 32FC3, Split)
[ PERFSTAT ]    (samples=75   mean=13.32   median=13.27   min=13.03   stddev=0.39 (2.9%))
[       OK ] OCL__3vs4_Fixture_Resize.Resize/10 (1141 ms)
[ RUN      ] OCL__3vs4_Fixture_Resize.Resize/11, where GetParam() = (1280x720, 32FC3, Convert)
[ PERFSTAT ]    (samples=89   mean=9.39   median=9.30   min=9.08   stddev=0.28 (3.0%))
[       OK ] OCL__3vs4_Fixture_Resize.Resize/11 (1009 ms)
[ RUN      ] OCL__3vs4_Fixture_Resize.Resize/12, where GetParam() = (1920x1080, 8UC3, Pure)
[ PERFSTAT ]    (samples=100   mean=9.29   median=8.99   min=8.52   stddev=0.80 (8.6%))
[       OK ] OCL__3vs4_Fixture_Resize.Resize/12 (1067 ms)
[ RUN      ] OCL__3vs4_Fixture_Resize.Resize/13, where GetParam() = (1920x1080, 8UC3, Split)
[ PERFSTAT ]    (samples=100   mean=32.74   median=32.70   min=29.33   stddev=1.53 (4.7%))
[       OK ] OCL__3vs4_Fixture_Resize.Resize/13 (3471 ms)
[ RUN      ] OCL__3vs4_Fixture_Resize.Resize/14, where GetParam() = (1920x1080, 8UC3, Convert)
[ PERFSTAT ]    (samples=100   mean=27.27   median=27.09   min=25.06   stddev=1.21 (4.4%))
[       OK ] OCL__3vs4_Fixture_Resize.Resize/14 (2867 ms)
[ RUN      ] OCL__3vs4_Fixture_Resize.Resize/15, where GetParam() = (1920x1080, 32FC3, Pure)
[ PERFSTAT ]    (samples=13   mean=10.50   median=10.42   min=10.21   stddev=0.21 (2.0%))
[       OK ] OCL__3vs4_Fixture_Resize.Resize/15 (361 ms)
[ RUN      ] OCL__3vs4_Fixture_Resize.Resize/16, where GetParam() = (1920x1080, 32FC3, Split)
[ PERFSTAT ]    (samples=13   mean=26.81   median=26.68   min=26.54   stddev=0.50 (1.9%))
[       OK ] OCL__3vs4_Fixture_Resize.Resize/16 (586 ms)
[ RUN      ] OCL__3vs4_Fixture_Resize.Resize/17, where GetParam() = (1920x1080, 32FC3, Convert)
[ PERFSTAT ]    (samples=13   mean=18.29   median=18.29   min=17.86   stddev=0.16 (0.9%))
[       OK ] OCL__3vs4_Fixture_Resize.Resize/17 (446 ms)
[ RUN      ] OCL__3vs4_Fixture_Resize.Resize/18, where GetParam() = (3840x2160, 8UC3, Pure)
[ PERFSTAT ]    (samples=100   mean=40.19   median=38.33   min=32.51   stddev=4.80 (11.9%))
[       OK ] OCL__3vs4_Fixture_Resize.Resize/18 (4332 ms)
[ RUN      ] OCL__3vs4_Fixture_Resize.Resize/19, where GetParam() = (3840x2160, 8UC3, Split)
[ PERFSTAT ]    (samples=13   mean=103.95   median=103.52   min=102.04   stddev=1.79 (1.7%))
[       OK ] OCL__3vs4_Fixture_Resize.Resize/19 (1613 ms)
[ RUN      ] OCL__3vs4_Fixture_Resize.Resize/20, where GetParam() = (3840x2160, 8UC3, Convert)
[ PERFSTAT ]    (samples=13   mean=71.51   median=71.47   min=68.16   stddev=1.81 (2.5%))
[       OK ] OCL__3vs4_Fixture_Resize.Resize/20 (1227 ms)
[ RUN      ] OCL__3vs4_Fixture_Resize.Resize/21, where GetParam() = (3840x2160, 32FC3, Pure)
[ PERFSTAT ]    (samples=13   mean=22.48   median=22.49   min=22.19   stddev=0.13 (0.6%))
[       OK ] OCL__3vs4_Fixture_Resize.Resize/21 (1295 ms)
[ RUN      ] OCL__3vs4_Fixture_Resize.Resize/22, where GetParam() = (3840x2160, 32FC3, Split)
[ PERFSTAT ]    (samples=38   mean=98.16   median=97.74   min=97.47   stddev=2.11 (2.2%))
[       OK ] OCL__3vs4_Fixture_Resize.Resize/22 (4634 ms)
[ RUN      ] OCL__3vs4_Fixture_Resize.Resize/23, where GetParam() = (3840x2160, 32FC3, Convert)
[ PERFSTAT ]    (samples=13   mean=66.53   median=66.49   min=66.24   stddev=0.25 (0.4%))
[       OK ] OCL__3vs4_Fixture_Resize.Resize/23 (2024 ms)
[----------] 24 tests from OCL__3vs4_Fixture_Resize (36373 ms total)

[----------] Global test environment tear-down
[==========] 24 tests from 1 test case ran. (36375 ms total)
[  PASSED  ] 24 tests.
